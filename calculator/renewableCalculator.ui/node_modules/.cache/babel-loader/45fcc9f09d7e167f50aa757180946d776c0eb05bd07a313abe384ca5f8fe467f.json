{"ast":null,"code":"var _jsxFileName = \"/Users/xuefei/Desktop/calculator00/calculator/renewableCalculator.ui/src/components/steps/roof-condition/PostcodeLocationInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostcodeLocationInput = ({\n  onLocationChange\n}) => {\n  _s();\n  const [postcode, setPostcode] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!postcode.trim()) return;\n    setIsLoading(true);\n    setError('');\n    try {\n      // Use the same postcode service as in BasicInformation\n      const response = await fetch(`https://api.postcodes.io/postcodes/${postcode.trim()}`);\n      const data = await response.json();\n      if (data.status === 200) {\n        const location = {\n          lat: data.result.latitude,\n          lng: data.result.longitude,\n          postcode: data.result.postcode,\n          location: `${data.result.admin_ward}, ${data.result.admin_district}`,\n          country: data.result.country\n        };\n        onLocationChange(location);\n      } else {\n        setError('Invalid postcode. Please check and try again.');\n      }\n    } catch (err) {\n      setError('Unable to find location. Please check your postcode.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"postcode-location-input\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"postcode-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: postcode,\n          onChange: e => setPostcode(e.target.value.toUpperCase()),\n          placeholder: \"Enter postcode (e.g. SW1A 1AA)\",\n          className: \"postcode-input\",\n          disabled: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          disabled: isLoading || !postcode.trim(),\n          children: isLoading ? 'Locating...' : 'Locate'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(PostcodeLocationInput, \"lTx9C+p1x3rHfp6JcFxxxn2aeVM=\");\n_c = PostcodeLocationInput;\nexport default PostcodeLocationInput;\nvar _c;\n$RefreshReg$(_c, \"PostcodeLocationInput\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PostcodeLocationInput","onLocationChange","_s","postcode","setPostcode","isLoading","setIsLoading","error","setError","handleSubmit","e","preventDefault","trim","response","fetch","data","json","status","location","lat","result","latitude","lng","longitude","admin_ward","admin_district","country","err","className","children","onSubmit","type","value","onChange","target","toUpperCase","placeholder","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/xuefei/Desktop/calculator00/calculator/renewableCalculator.ui/src/components/steps/roof-condition/PostcodeLocationInput.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst PostcodeLocationInput = ({ onLocationChange }) => {\n  const [postcode, setPostcode] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!postcode.trim()) return;\n\n    setIsLoading(true);\n    setError('');\n\n    try {\n      // Use the same postcode service as in BasicInformation\n      const response = await fetch(`https://api.postcodes.io/postcodes/${postcode.trim()}`);\n      const data = await response.json();\n\n      if (data.status === 200) {\n        const location = {\n          lat: data.result.latitude,\n          lng: data.result.longitude,\n          postcode: data.result.postcode,\n          location: `${data.result.admin_ward}, ${data.result.admin_district}`,\n          country: data.result.country\n        };\n        onLocationChange(location);\n      } else {\n        setError('Invalid postcode. Please check and try again.');\n      }\n    } catch (err) {\n      setError('Unable to find location. Please check your postcode.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"postcode-location-input\">\n      <form onSubmit={handleSubmit} className=\"postcode-form\">\n        <div className=\"input-group\">\n          <input\n            type=\"text\"\n            value={postcode}\n            onChange={(e) => setPostcode(e.target.value.toUpperCase())}\n            placeholder=\"Enter postcode (e.g. SW1A 1AA)\"\n            className=\"postcode-input\"\n            disabled={isLoading}\n          />\n          <button \n            type=\"submit\" \n            className=\"btn btn-primary\"\n            disabled={isLoading || !postcode.trim()}\n          >\n            {isLoading ? 'Locating...' : 'Locate'}\n          </button>\n        </div>\n        {error && <div className=\"error-message\">{error}</div>}\n      </form>\n    </div>\n  );\n};\n\nexport default PostcodeLocationInput; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}