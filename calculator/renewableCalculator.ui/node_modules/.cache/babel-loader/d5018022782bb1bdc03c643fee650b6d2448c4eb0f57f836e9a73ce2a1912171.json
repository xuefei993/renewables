{"ast":null,"code":"var _jsxFileName = \"/Users/xuefei/Desktop/calculator00/calculator/renewableCalculator.ui/src/components/steps/roof-condition/RoofSelectionList.js\";\nimport React from 'react';\nimport { getOrientationLabel } from './roofLabelUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoofSelectionList = ({\n  addedRoofs,\n  onRoofsUpdate\n}) => {\n  if (addedRoofs.length === 0) return null;\n\n  // Function to get solar potential rating based on percentage\n  const getSolarPotentialRating = percentage => {\n    if (percentage > 95) {\n      return {\n        rating: 'Excellent',\n        className: 'excellent'\n      };\n    } else if (percentage >= 90) {\n      return {\n        rating: 'Very Good',\n        className: 'very-good'\n      };\n    } else if (percentage >= 80) {\n      return {\n        rating: 'Good',\n        className: 'good'\n      };\n    } else if (percentage >= 60) {\n      return {\n        rating: 'Medium',\n        className: 'medium'\n      };\n    } else {\n      return {\n        rating: 'Poor',\n        className: 'poor'\n      };\n    }\n  };\n  const handleRoofSelectionChange = (roofId, selected) => {\n    const updatedRoofs = addedRoofs.map(roof => roof.id === roofId ? {\n      ...roof,\n      selected\n    } : roof);\n    onRoofsUpdate(updatedRoofs);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"roof-selection-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Select Roofs for Solar Installation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"selection-instruction\",\n      children: \"Choose which roofs you want to install solar panels on. You can select multiple roofs or change your selection anytime.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"roofs-selection-grid\",\n      children: addedRoofs.map(roof => {\n        const rating = getSolarPotentialRating(roof.solarPotential);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `roof-selection-card ${roof.selected ? 'selected' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"roof-selection-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: [\"Roof \", roof.id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"selection-checkbox\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: roof.selected,\n                onChange: e => handleRoofSelectionChange(roof.id, e.target.checked)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"checkmark\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"roof-selection-summary\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"roof-basic-info\",\n                children: [roof.area.toFixed(0), \" m\\xB2 \\u2022 \", getOrientationLabel(roof.orientation)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"solar-potential-info\",\n                children: [\"Solar Potential: \", roof.solarPotential.toFixed(1), \"%\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `rating-badge-small ${rating.className}`,\n                  children: rating.rating\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"solar-panel-info\",\n                children: [\"Estimated fits for \", roof.solarPanelCount || 0, \" panels\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)]\n        }, roof.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_c = RoofSelectionList;\nexport default RoofSelectionList;\nvar _c;\n$RefreshReg$(_c, \"RoofSelectionList\");","map":{"version":3,"names":["React","getOrientationLabel","jsxDEV","_jsxDEV","RoofSelectionList","addedRoofs","onRoofsUpdate","length","getSolarPotentialRating","percentage","rating","className","handleRoofSelectionChange","roofId","selected","updatedRoofs","map","roof","id","children","fileName","_jsxFileName","lineNumber","columnNumber","solarPotential","type","checked","onChange","e","target","area","toFixed","orientation","solarPanelCount","_c","$RefreshReg$"],"sources":["/Users/xuefei/Desktop/calculator00/calculator/renewableCalculator.ui/src/components/steps/roof-condition/RoofSelectionList.js"],"sourcesContent":["import React from 'react';\nimport { getOrientationLabel } from './roofLabelUtils';\n\nconst RoofSelectionList = ({ addedRoofs, onRoofsUpdate }) => {\n  if (addedRoofs.length === 0) return null;\n\n  // Function to get solar potential rating based on percentage\n  const getSolarPotentialRating = (percentage) => {\n    if (percentage > 95) {\n      return { rating: 'Excellent', className: 'excellent' };\n    } else if (percentage >= 90) {\n      return { rating: 'Very Good', className: 'very-good' };\n    } else if (percentage >= 80) {\n      return { rating: 'Good', className: 'good' };\n    } else if (percentage >= 60) {\n      return { rating: 'Medium', className: 'medium' };\n    } else {\n      return { rating: 'Poor', className: 'poor' };\n    }\n  };\n\n  const handleRoofSelectionChange = (roofId, selected) => {\n    const updatedRoofs = addedRoofs.map(roof => \n      roof.id === roofId ? { ...roof, selected } : roof\n    );\n    onRoofsUpdate(updatedRoofs);\n  };\n\n  return (\n    <div className=\"roof-selection-section\">\n      <h4>Select Roofs for Solar Installation</h4>\n      <p className=\"selection-instruction\">\n        Choose which roofs you want to install solar panels on. You can select multiple roofs or change your selection anytime.\n      </p>\n      \n      <div className=\"roofs-selection-grid\">\n        {addedRoofs.map((roof) => {\n          const rating = getSolarPotentialRating(roof.solarPotential);\n          \n          return (\n            <div key={roof.id} className={`roof-selection-card ${roof.selected ? 'selected' : ''}`}>\n              <div className=\"roof-selection-header\">\n                <h5>Roof {roof.id}</h5>\n                <label className=\"selection-checkbox\">\n                  <input\n                    type=\"checkbox\"\n                    checked={roof.selected}\n                    onChange={(e) => handleRoofSelectionChange(roof.id, e.target.checked)}\n                  />\n                  <span className=\"checkmark\"></span>\n                </label>\n              </div>\n              \n              <div className=\"roof-selection-summary\">\n                <div className=\"summary-text\">\n                  <div className=\"roof-basic-info\">\n                    {roof.area.toFixed(0)} m² • {getOrientationLabel(roof.orientation)}\n                  </div>\n                  <div className=\"solar-potential-info\">\n                    Solar Potential: {roof.solarPotential.toFixed(1)}%\n                    <span className={`rating-badge-small ${rating.className}`}>\n                      {rating.rating}\n                    </span>\n                  </div>\n                  <div className=\"solar-panel-info\">\n                    Estimated fits for {roof.solarPanelCount || 0} panels\n                  </div>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default RoofSelectionList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}