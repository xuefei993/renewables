{"ast":null,"code":"import _objectSpread from\"/Users/xuefei/Desktop/calculator00/calculator/renewableCalculator.ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from'react';import{calculateSolarPotential}from'./solarPotentialUtils';import{getNextRoofNumber}from'./roofLabelUtils';import RoofConfigForm from'./RoofConfigForm';import SolarPotentialCalculation from'./SolarPotentialCalculation';import AddedRoofsList from'./AddedRoofsList';import RoofHelpModals from'./RoofHelpModals';import{jsxs as _jsxs,jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";const RoofConfigurationForm=_ref=>{let{roofConfig,onConfigChange,projectedArea,actualRoofArea,visible=true,addedRoofs=[],onRoofsUpdate,onClearMeasurement,onAddAnotherRoof}=_ref;const[showAngleTooltip,setShowAngleTooltip]=useState(false);const[showShadingTooltip,setShowShadingTooltip]=useState(false);const[showUtilisationTooltip,setShowUtilisationTooltip]=useState(false);const[solarPotentialResult,setSolarPotentialResult]=useState(null);const[showPotentialResults,setShowPotentialResults]=useState(false);if(!visible)return null;// Determine which area to display\nconst displayArea=actualRoofArea||projectedArea;const currentRoofNumber=getNextRoofNumber(addedRoofs);// Check if all required fields are filled for solar potential calculation\nconst isReadyForCalculation=()=>{return displayArea>0&&roofConfig.roofOrientation&&roofConfig.roofAngle!==''&&roofConfig.roofShading&&roofConfig.roofUtilisation;};const handleSolarPotentialCalculation=()=>{if(!isReadyForCalculation())return;const result=calculateSolarPotential(displayArea,roofConfig.roofShading,roofConfig.roofUtilisation,parseInt(roofConfig.roofAngle),roofConfig.roofOrientation);setSolarPotentialResult(result);setShowPotentialResults(true);};const handleAddRoof=()=>{if(!solarPotentialResult)return;const newRoof={id:currentRoofNumber,area:displayArea,orientation:roofConfig.roofOrientation,angle:roofConfig.roofAngle,shading:roofConfig.roofShading,utilisation:roofConfig.roofUtilisation,solarPotential:solarPotentialResult.solarPotential,config:_objectSpread({},roofConfig),selected:true// Default to selected for installation\n};const updatedRoofs=[...addedRoofs,newRoof];onRoofsUpdate(updatedRoofs);// Reset states but keep current measurement visible\nsetShowPotentialResults(false);setSolarPotentialResult(null);// Clear current configuration but keep the measurement\nonConfigChange('roofOrientation','');onConfigChange('roofAngle','');onConfigChange('roofShading','');onConfigChange('roofUtilisation','');};const handleRemoveRoof=roofId=>{const updatedRoofs=addedRoofs.filter(roof=>roof.id!==roofId);onRoofsUpdate(updatedRoofs);};// Tooltip handlers\nconst toggleAngleTooltip=()=>setShowAngleTooltip(!showAngleTooltip);const toggleShadingTooltip=()=>setShowShadingTooltip(!showShadingTooltip);const toggleUtilisationTooltip=()=>setShowUtilisationTooltip(!showUtilisationTooltip);return/*#__PURE__*/_jsxs(\"div\",{className:\"roof-configuration\",children:[projectedArea>0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"h4\",{children:[\"Roof \",currentRoofNumber,\" Details\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"roof-size-display\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"roof-size-label\",children:\"Roof Size:\"}),/*#__PURE__*/_jsxs(\"strong\",{className:\"roof-size-value\",children:[displayArea.toFixed(2),\" m\\xB2\"]})]}),/*#__PURE__*/_jsx(RoofConfigForm,{roofConfig:roofConfig,onConfigChange:onConfigChange,onShowAngleTooltip:toggleAngleTooltip,onShowShadingTooltip:toggleShadingTooltip,onShowUtilisationTooltip:toggleUtilisationTooltip}),/*#__PURE__*/_jsx(SolarPotentialCalculation,{isReadyForCalculation:isReadyForCalculation(),onCalculate:handleSolarPotentialCalculation,showResults:showPotentialResults,result:solarPotentialResult,currentRoofNumber:currentRoofNumber,onAddRoof:handleAddRoof})]}),/*#__PURE__*/_jsx(AddedRoofsList,{addedRoofs:addedRoofs,onRemoveRoof:handleRemoveRoof,showTotal:false}),/*#__PURE__*/_jsx(RoofHelpModals,{showAngleTooltip:showAngleTooltip,showShadingTooltip:showShadingTooltip,showUtilisationTooltip:showUtilisationTooltip,onToggleAngleTooltip:toggleAngleTooltip,onToggleShadingTooltip:toggleShadingTooltip,onToggleUtilisationTooltip:toggleUtilisationTooltip})]});};export default RoofConfigurationForm;","map":{"version":3,"names":["React","useState","calculateSolarPotential","getNextRoofNumber","RoofConfigForm","SolarPotentialCalculation","AddedRoofsList","RoofHelpModals","jsxs","_jsxs","jsx","_jsx","Fragment","_Fragment","RoofConfigurationForm","_ref","roofConfig","onConfigChange","projectedArea","actualRoofArea","visible","addedRoofs","onRoofsUpdate","onClearMeasurement","onAddAnotherRoof","showAngleTooltip","setShowAngleTooltip","showShadingTooltip","setShowShadingTooltip","showUtilisationTooltip","setShowUtilisationTooltip","solarPotentialResult","setSolarPotentialResult","showPotentialResults","setShowPotentialResults","displayArea","currentRoofNumber","isReadyForCalculation","roofOrientation","roofAngle","roofShading","roofUtilisation","handleSolarPotentialCalculation","result","parseInt","handleAddRoof","newRoof","id","area","orientation","angle","shading","utilisation","solarPotential","config","_objectSpread","selected","updatedRoofs","handleRemoveRoof","roofId","filter","roof","toggleAngleTooltip","toggleShadingTooltip","toggleUtilisationTooltip","className","children","toFixed","onShowAngleTooltip","onShowShadingTooltip","onShowUtilisationTooltip","onCalculate","showResults","onAddRoof","onRemoveRoof","showTotal","onToggleAngleTooltip","onToggleShadingTooltip","onToggleUtilisationTooltip"],"sources":["/Users/xuefei/Desktop/calculator00/calculator/renewableCalculator.ui/src/components/steps/roof-condition/RoofConfigurationForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { calculateSolarPotential } from './solarPotentialUtils';\nimport { getNextRoofNumber } from './roofLabelUtils';\nimport RoofConfigForm from './RoofConfigForm';\nimport SolarPotentialCalculation from './SolarPotentialCalculation';\nimport AddedRoofsList from './AddedRoofsList';\nimport RoofHelpModals from './RoofHelpModals';\n\nconst RoofConfigurationForm = ({ \n  roofConfig, \n  onConfigChange, \n  projectedArea, \n  actualRoofArea, \n  visible = true, \n  addedRoofs = [], \n  onRoofsUpdate, \n  onClearMeasurement,\n  onAddAnotherRoof\n}) => {\n  const [showAngleTooltip, setShowAngleTooltip] = useState(false);\n  const [showShadingTooltip, setShowShadingTooltip] = useState(false);\n  const [showUtilisationTooltip, setShowUtilisationTooltip] = useState(false);\n  const [solarPotentialResult, setSolarPotentialResult] = useState(null);\n  const [showPotentialResults, setShowPotentialResults] = useState(false);\n  \n  if (!visible) return null;\n\n  // Determine which area to display\n  const displayArea = actualRoofArea || projectedArea;\n  const currentRoofNumber = getNextRoofNumber(addedRoofs);\n\n  // Check if all required fields are filled for solar potential calculation\n  const isReadyForCalculation = () => {\n    return displayArea > 0 &&\n           roofConfig.roofOrientation &&\n           roofConfig.roofAngle !== '' &&\n           roofConfig.roofShading &&\n           roofConfig.roofUtilisation;\n  };\n\n  const handleSolarPotentialCalculation = () => {\n    if (!isReadyForCalculation()) return;\n\n    const result = calculateSolarPotential(\n      displayArea,\n      roofConfig.roofShading,\n      roofConfig.roofUtilisation,\n      parseInt(roofConfig.roofAngle),\n      roofConfig.roofOrientation\n    );\n\n    setSolarPotentialResult(result);\n    setShowPotentialResults(true);\n  };\n\n  const handleAddRoof = () => {\n    if (!solarPotentialResult) return;\n\n    const newRoof = {\n      id: currentRoofNumber,\n      area: displayArea,\n      orientation: roofConfig.roofOrientation,\n      angle: roofConfig.roofAngle,\n      shading: roofConfig.roofShading,\n      utilisation: roofConfig.roofUtilisation,\n      solarPotential: solarPotentialResult.solarPotential,\n      config: { ...roofConfig },\n      selected: true // Default to selected for installation\n    };\n\n    const updatedRoofs = [...addedRoofs, newRoof];\n    onRoofsUpdate(updatedRoofs);\n    \n    // Reset states but keep current measurement visible\n    setShowPotentialResults(false);\n    setSolarPotentialResult(null);\n    \n    // Clear current configuration but keep the measurement\n    onConfigChange('roofOrientation', '');\n    onConfigChange('roofAngle', '');\n    onConfigChange('roofShading', '');\n    onConfigChange('roofUtilisation', '');\n  };\n\n  const handleRemoveRoof = (roofId) => {\n    const updatedRoofs = addedRoofs.filter(roof => roof.id !== roofId);\n    onRoofsUpdate(updatedRoofs);\n  };\n\n  // Tooltip handlers\n  const toggleAngleTooltip = () => setShowAngleTooltip(!showAngleTooltip);\n  const toggleShadingTooltip = () => setShowShadingTooltip(!showShadingTooltip);\n  const toggleUtilisationTooltip = () => setShowUtilisationTooltip(!showUtilisationTooltip);\n\n  return (\n    <div className=\"roof-configuration\">\n      {/* Current Roof Configuration - Only show when measuring a new roof */}\n      {projectedArea > 0 && (\n        <>\n          <h4>Roof {currentRoofNumber} Details</h4>\n          \n          {/* Roof Size Display */}\n          <div className=\"roof-size-display\">\n            <span className=\"roof-size-label\">Roof Size:</span>\n            <strong className=\"roof-size-value\">{displayArea.toFixed(2)} mÂ²</strong>\n          </div>\n          \n          <RoofConfigForm\n            roofConfig={roofConfig}\n            onConfigChange={onConfigChange}\n            onShowAngleTooltip={toggleAngleTooltip}\n            onShowShadingTooltip={toggleShadingTooltip}\n            onShowUtilisationTooltip={toggleUtilisationTooltip}\n          />\n\n          <SolarPotentialCalculation\n            isReadyForCalculation={isReadyForCalculation()}\n            onCalculate={handleSolarPotentialCalculation}\n            showResults={showPotentialResults}\n            result={solarPotentialResult}\n            currentRoofNumber={currentRoofNumber}\n            onAddRoof={handleAddRoof}\n          />\n        </>\n      )}\n\n      {/* Added Roofs Display */}\n      <AddedRoofsList \n        addedRoofs={addedRoofs} \n        onRemoveRoof={handleRemoveRoof}\n        showTotal={false}\n      />\n\n      {/* Help Modals */}\n      <RoofHelpModals\n        showAngleTooltip={showAngleTooltip}\n        showShadingTooltip={showShadingTooltip}\n        showUtilisationTooltip={showUtilisationTooltip}\n        onToggleAngleTooltip={toggleAngleTooltip}\n        onToggleShadingTooltip={toggleShadingTooltip}\n        onToggleUtilisationTooltip={toggleUtilisationTooltip}\n      />\n    </div>\n  );\n};\n\nexport default RoofConfigurationForm; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}