{"ast":null,"code":"import React,{useState}from'react';import{postcodeService}from'../../../services/postcodeService';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PostcodeInput=_ref=>{let{onLocationSelect,isLoading,setIsLoading}=_ref;const[postcode,setPostcode]=useState('');const[error,setError]=useState('');const handleInputChange=e=>{const value=e.target.value.toUpperCase();setPostcode(value);setError('');};const handleSearch=async()=>{if(!postcode.trim()){setError('Please enter a postcode');return;}setIsLoading(true);setError('');try{const result=await postcodeService.validatePostcode(postcode);if(result.success){onLocationSelect({type:'postcode',postcode:result.data.postcode,latitude:result.data.latitude,longitude:result.data.longitude,location:\"\".concat(result.data.admin_district,\", \").concat(result.data.region),country:result.data.country});}else{setError(result.error||'Invalid postcode');}}catch(error){setError('Failed to validate postcode');}finally{setIsLoading(false);}};const handleKeyPress=e=>{if(e.key==='Enter'){handleSearch();}};return/*#__PURE__*/_jsxs(\"div\",{className:\"postcode-input-container\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Enter Your Postcode\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Enter your UK postcode to find your exact location\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:postcode,onChange:handleInputChange,onKeyPress:handleKeyPress,placeholder:\"e.g., SW1A 1AA\",className:\"postcode-input \".concat(error?'error':''),disabled:isLoading}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSearch,disabled:isLoading||!postcode.trim(),className:\"btn btn-primary search-btn\",children:isLoading?'Searching...':'Search'})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:/*#__PURE__*/_jsxs(\"span\",{children:[\"Warning: \",error]})}),/*#__PURE__*/_jsx(\"div\",{className:\"postcode-examples\",children:/*#__PURE__*/_jsxs(\"small\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Examples:\"}),\" KY16 8DE (St Andrews), SW1A 1AA (Westminster), M1 1AA (Manchester)\"]})})]});};export default PostcodeInput;","map":{"version":3,"names":["React","useState","postcodeService","jsx","_jsx","jsxs","_jsxs","PostcodeInput","_ref","onLocationSelect","isLoading","setIsLoading","postcode","setPostcode","error","setError","handleInputChange","e","value","target","toUpperCase","handleSearch","trim","result","validatePostcode","success","type","data","latitude","longitude","location","concat","admin_district","region","country","handleKeyPress","key","className","children","onChange","onKeyPress","placeholder","disabled","onClick"],"sources":["/Users/xuefei/Desktop/calculator00/calculator/renewableCalculator.ui/src/components/steps/address-input/PostcodeInput.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { postcodeService } from '../../../services/postcodeService';\n\nconst PostcodeInput = ({ onLocationSelect, isLoading, setIsLoading }) => {\n  const [postcode, setPostcode] = useState('');\n  const [error, setError] = useState('');\n\n  const handleInputChange = (e) => {\n    const value = e.target.value.toUpperCase();\n    setPostcode(value);\n    setError('');\n  };\n\n  const handleSearch = async () => {\n    if (!postcode.trim()) {\n      setError('Please enter a postcode');\n      return;\n    }\n\n    setIsLoading(true);\n    setError('');\n\n    try {\n      const result = await postcodeService.validatePostcode(postcode);\n      \n      if (result.success) {\n        onLocationSelect({\n          type: 'postcode',\n          postcode: result.data.postcode,\n          latitude: result.data.latitude,\n          longitude: result.data.longitude,\n          location: `${result.data.admin_district}, ${result.data.region}`,\n          country: result.data.country\n        });\n      } else {\n        setError(result.error || 'Invalid postcode');\n      }\n    } catch (error) {\n      setError('Failed to validate postcode');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      handleSearch();\n    }\n  };\n\n  return (\n    <div className=\"postcode-input-container\">\n      <h3>Enter Your Postcode</h3>\n      <p>Enter your UK postcode to find your exact location</p>\n      \n      <div className=\"input-group\">\n        <input\n          type=\"text\"\n          value={postcode}\n          onChange={handleInputChange}\n          onKeyPress={handleKeyPress}\n          placeholder=\"e.g., SW1A 1AA\"\n          className={`postcode-input ${error ? 'error' : ''}`}\n          disabled={isLoading}\n        />\n        <button\n          onClick={handleSearch}\n          disabled={isLoading || !postcode.trim()}\n          className=\"btn btn-primary search-btn\"\n        >\n          {isLoading ? 'Searching...' : 'Search'}\n        </button>\n      </div>\n      \n      {error && (\n        <div className=\"error-message\">\n          <span>Warning: {error}</span>\n        </div>\n      )}\n      \n      <div className=\"postcode-examples\">\n        <small>\n          <strong>Examples:</strong> KY16 8DE (St Andrews), SW1A 1AA (Westminster), M1 1AA (Manchester)\n        </small>\n      </div>\n    </div>\n  );\n};\n\nexport default PostcodeInput; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}