{"ast":null,"code":"// 电费服务 - 根据地区提供电费数据\nexport const tariffService = {\n  // Ofgem 官方API端点\n  OFGEM_API_BASE: 'https://www.ofgem.gov.uk',\n  // 英国电网地区划分 (基于Ofgem官方分区)\n  // 这些是Ofgem官方认可的14个配电网地区\n  DNO_REGIONS: {\n    // 英格兰和威尔士地区\n    10: {\n      name: 'Eastern England',\n      operator: 'UK Power Networks'\n    },\n    11: {\n      name: 'East Midlands',\n      operator: 'Western Power Distribution'\n    },\n    12: {\n      name: 'London',\n      operator: 'UK Power Networks'\n    },\n    13: {\n      name: 'Merseyside and Northern Wales',\n      operator: 'Scottish Power'\n    },\n    14: {\n      name: 'West Midlands',\n      operator: 'Western Power Distribution'\n    },\n    15: {\n      name: 'North Eastern England',\n      operator: 'Northern Power Grid'\n    },\n    16: {\n      name: 'North Western England',\n      operator: 'Electricity North West'\n    },\n    17: {\n      name: 'Northern Scotland',\n      operator: 'Scottish and Southern Electricity'\n    },\n    18: {\n      name: 'Southern Scotland',\n      operator: 'Scottish Power'\n    },\n    19: {\n      name: 'South Eastern England',\n      operator: 'UK Power Networks'\n    },\n    20: {\n      name: 'Southern England',\n      operator: 'Scottish and Southern Electricity'\n    },\n    21: {\n      name: 'South Wales',\n      operator: 'Western Power Distribution'\n    },\n    22: {\n      name: 'South Western England',\n      operator: 'Western Power Distribution'\n    },\n    23: {\n      name: 'Yorkshire',\n      operator: 'Northern Power Grid'\n    }\n  },\n  // 临时默认费率（来源：Ofgem价格上限数据）\n  // 注意：这些应该通过API获取最新数据\n  defaultRegionTariffs: {\n    // 基于Ofgem 2024年价格上限的典型费率\n    electricity: {\n      standardRate: 24.50,\n      // 便士/kWh\n      standingCharge: 60.10,\n      // 便士/天\n      economy7Day: 25.79,\n      economy7Night: 20.47\n    },\n    gas: {\n      standardRate: 6.04,\n      // 便士/kWh  \n      standingCharge: 31.43 // 便士/天\n    }\n  },\n  // 邮编前缀到Ofgem配电网地区的映射\n  postcodeToGSP: {\n    // 伦敦地区 (GSP: _C - London)\n    'E': 12,\n    'EC': 12,\n    'N': 12,\n    'NW': 12,\n    'SE': 12,\n    'SW': 12,\n    'W': 12,\n    'WC': 12,\n    // 东英格兰 (GSP: _A - Eastern England)  \n    'CB': 10,\n    'CM': 10,\n    'CO': 10,\n    'IP': 10,\n    'NR': 10,\n    'PE': 10,\n    'SG': 10,\n    // 东南英格兰 (GSP: _J - South Eastern England)\n    'BR': 19,\n    'CR': 19,\n    'CT': 19,\n    'DA': 19,\n    'ME': 19,\n    'RH': 19,\n    'SM': 19,\n    'TN': 19,\n    'BN': 19,\n    'GU': 19,\n    'KT': 19,\n    'PO': 19,\n    // 南英格兰 (GSP: _H - Southern England)\n    'AL': 20,\n    'HP': 20,\n    'LU': 20,\n    'MK': 20,\n    'OX': 20,\n    'RG': 20,\n    'SL': 20,\n    'SO': 20,\n    'SP': 20,\n    'UB': 20,\n    'WD': 20,\n    // 西南英格兰 (GSP: _K - South Western England)\n    'BA': 22,\n    'BS': 22,\n    'DT': 22,\n    'EX': 22,\n    'GL': 22,\n    'PL': 22,\n    'TA': 22,\n    'TQ': 22,\n    'TR': 22,\n    // 西米德兰兹 (GSP: _G - West Midlands)\n    'B': 14,\n    'CV': 14,\n    'DY': 14,\n    'HR': 14,\n    'ST': 14,\n    'TF': 14,\n    'WR': 14,\n    'WS': 14,\n    'WV': 14,\n    // 东米德兰兹 (GSP: _F - East Midlands)\n    'DE': 11,\n    'LE': 11,\n    'LN': 11,\n    'NG': 11,\n    'NN': 11,\n    'S': 11,\n    // 约克郡 (GSP: _M - Yorkshire)\n    'BD': 23,\n    'DN': 23,\n    'HD': 23,\n    'HG': 23,\n    'HU': 23,\n    'HX': 23,\n    'LS': 23,\n    'WF': 23,\n    'YO': 23,\n    // 西北英格兰 (GSP: _D - North Western England)\n    'BB': 16,\n    'BL': 16,\n    'CA': 16,\n    'CH': 16,\n    'CW': 16,\n    'FY': 16,\n    'L': 16,\n    'LA': 16,\n    'M': 16,\n    'OL': 16,\n    'PR': 16,\n    'SK': 16,\n    'WA': 16,\n    'WN': 16,\n    // 东北英格兰 (GSP: _E - North Eastern England)\n    'DH': 15,\n    'DL': 15,\n    'NE': 15,\n    'SR': 15,\n    'TS': 15,\n    // 北威尔士和默西赛德 (GSP: _B - Merseyside and Northern Wales)\n    'LL': 13,\n    'SY': 13,\n    // 南威尔士 (GSP: _L - South Wales)\n    'CF': 21,\n    'LD': 21,\n    'NP': 21,\n    'SA': 21,\n    // 南苏格兰 (GSP: _P - Southern Scotland)\n    'DG': 18,\n    'EH': 18,\n    'G': 18,\n    'KA': 18,\n    'ML': 18,\n    'TD': 18,\n    // 北苏格兰 (GSP: _N - Northern Scotland)\n    'AB': 17,\n    'DD': 17,\n    'FK': 17,\n    'HS': 17,\n    'IV': 17,\n    'KW': 17,\n    'KY': 17,\n    'PA': 17,\n    'PH': 17,\n    'ZE': 17,\n    // 北爱尔兰（不在Ofgem管辖范围内，使用特殊标识）\n    'BT': 'NI'\n  },\n  // 获取默认电费（全英国平均）\n  getDefaultTariffs() {\n    return {\n      standardRate: 24.5,\n      standingCharge: 60.1,\n      peakRate: 28.3,\n      offPeakRate: 20.2,\n      nightRate: 15.8,\n      economy7NightRate: 13.5,\n      economy10NightRate: 12.8,\n      gasRate: 7.5,\n      gasStandingCharge: 31.4,\n      feedInTariffRate: 4.1,\n      smartExportGuarantee: 4.1\n    };\n  },\n  // 根据邮编获取地区\n  getRegionFromPostcode(postcode) {\n    var _cleanPostcode$match;\n    if (!postcode) return 'England'; // 默认值\n\n    const cleanPostcode = postcode.replace(/\\s+/g, '').toUpperCase();\n\n    // 提取邮编前缀\n    const prefix = (_cleanPostcode$match = cleanPostcode.match(/^[A-Z]+/)) === null || _cleanPostcode$match === void 0 ? void 0 : _cleanPostcode$match[0];\n    if (!prefix) return 'England';\n\n    // 首先检查完整前缀\n    if (this.postcodeToRegion[prefix]) {\n      return this.postcodeToRegion[prefix];\n    }\n\n    // 然后检查单字母前缀\n    const singleLetter = prefix.charAt(0);\n    if (this.postcodeToRegion[singleLetter]) {\n      return this.postcodeToRegion[singleLetter];\n    }\n    return 'England'; // 默认为英格兰\n  },\n  // 根据位置数据获取地区电费\n  getTariffsForLocation(locationData) {\n    let region = 'England'; // 默认地区\n\n    // 优先使用country字段\n    if (locationData.country) {\n      if (locationData.country.includes('Scotland')) {\n        region = 'Scotland';\n      } else if (locationData.country.includes('Wales')) {\n        region = 'Wales';\n      } else if (locationData.country.includes('Northern Ireland')) {\n        region = 'Northern Ireland';\n      }\n    }\n\n    // 如果country字段不明确，使用邮编判断\n    if (region === 'England' && locationData.postcode) {\n      region = this.getRegionFromPostcode(locationData.postcode);\n    }\n\n    // 特殊处理伦敦地区\n    if (region === 'England' && locationData.region) {\n      if (locationData.region.includes('London') || locationData.region.includes('Greater London')) {\n        region = 'London';\n      }\n    }\n\n    // 获取该地区的电费数据\n    const regionTariffs = this.regionTariffs[region] || this.regionTariffs['England'];\n    return {\n      ...this.getDefaultTariffs(),\n      ...regionTariffs,\n      detectedRegion: region,\n      source: 'regional_average'\n    };\n  },\n  // 获取地区信息说明\n  getRegionInfo(region) {\n    const info = {\n      'England': {\n        name: '英格兰',\n        description: '英格兰地区平均电费'\n      },\n      'Scotland': {\n        name: '苏格兰',\n        description: '苏格兰地区平均电费（通常略低于英格兰）'\n      },\n      'Wales': {\n        name: '威尔士',\n        description: '威尔士地区平均电费'\n      },\n      'Northern Ireland': {\n        name: '北爱尔兰',\n        description: '北爱尔兰地区平均电费（通常较高）'\n      },\n      'London': {\n        name: '伦敦',\n        description: '伦敦地区平均电费（通常略高于英格兰平均值）'\n      }\n    };\n    return info[region] || info['England'];\n  }\n};","map":{"version":3,"names":["tariffService","OFGEM_API_BASE","DNO_REGIONS","name","operator","defaultRegionTariffs","electricity","standardRate","standingCharge","economy7Day","economy7Night","gas","postcodeToGSP","getDefaultTariffs","peakRate","offPeakRate","nightRate","economy7NightRate","economy10NightRate","gasRate","gasStandingCharge","feedInTariffRate","smartExportGuarantee","getRegionFromPostcode","postcode","_cleanPostcode$match","cleanPostcode","replace","toUpperCase","prefix","match","postcodeToRegion","singleLetter","charAt","getTariffsForLocation","locationData","region","country","includes","regionTariffs","detectedRegion","source","getRegionInfo","info","description"],"sources":["/Users/xuefei/Desktop/calculator00/calculator/renewableCalculator.ui/src/services/tariffService.js"],"sourcesContent":["// 电费服务 - 根据地区提供电费数据\nexport const tariffService = {\n  // Ofgem 官方API端点\n  OFGEM_API_BASE: 'https://www.ofgem.gov.uk',\n  \n  // 英国电网地区划分 (基于Ofgem官方分区)\n  // 这些是Ofgem官方认可的14个配电网地区\n  DNO_REGIONS: {\n    // 英格兰和威尔士地区\n    10: { name: 'Eastern England', operator: 'UK Power Networks' },\n    11: { name: 'East Midlands', operator: 'Western Power Distribution' },\n    12: { name: 'London', operator: 'UK Power Networks' },\n    13: { name: 'Merseyside and Northern Wales', operator: 'Scottish Power' },\n    14: { name: 'West Midlands', operator: 'Western Power Distribution' },\n    15: { name: 'North Eastern England', operator: 'Northern Power Grid' },\n    16: { name: 'North Western England', operator: 'Electricity North West' },\n    17: { name: 'Northern Scotland', operator: 'Scottish and Southern Electricity' },\n    18: { name: 'Southern Scotland', operator: 'Scottish Power' },\n    19: { name: 'South Eastern England', operator: 'UK Power Networks' },\n    20: { name: 'Southern England', operator: 'Scottish and Southern Electricity' },\n    21: { name: 'South Wales', operator: 'Western Power Distribution' },\n    22: { name: 'South Western England', operator: 'Western Power Distribution' },\n    23: { name: 'Yorkshire', operator: 'Northern Power Grid' }\n  },\n\n  // 临时默认费率（来源：Ofgem价格上限数据）\n  // 注意：这些应该通过API获取最新数据\n  defaultRegionTariffs: {\n    // 基于Ofgem 2024年价格上限的典型费率\n    electricity: {\n      standardRate: 24.50, // 便士/kWh\n      standingCharge: 60.10, // 便士/天\n      economy7Day: 25.79,\n      economy7Night: 20.47\n    },\n    gas: {\n      standardRate: 6.04, // 便士/kWh  \n      standingCharge: 31.43 // 便士/天\n    }\n  },\n\n  // 邮编前缀到Ofgem配电网地区的映射\n  postcodeToGSP: {\n    // 伦敦地区 (GSP: _C - London)\n    'E': 12, 'EC': 12, 'N': 12, 'NW': 12, 'SE': 12, 'SW': 12, 'W': 12, 'WC': 12,\n    \n    // 东英格兰 (GSP: _A - Eastern England)  \n    'CB': 10, 'CM': 10, 'CO': 10, 'IP': 10, 'NR': 10, 'PE': 10, 'SG': 10,\n    \n    // 东南英格兰 (GSP: _J - South Eastern England)\n    'BR': 19, 'CR': 19, 'CT': 19, 'DA': 19, 'ME': 19, 'RH': 19, 'SM': 19, 'TN': 19,\n    'BN': 19, 'GU': 19, 'KT': 19, 'PO': 19,\n    \n    // 南英格兰 (GSP: _H - Southern England)\n    'AL': 20, 'HP': 20, 'LU': 20, 'MK': 20, 'OX': 20, 'RG': 20, 'SL': 20, 'SO': 20,\n    'SP': 20, 'UB': 20, 'WD': 20,\n    \n    // 西南英格兰 (GSP: _K - South Western England)\n    'BA': 22, 'BS': 22, 'DT': 22, 'EX': 22, 'GL': 22, 'PL': 22, 'TA': 22, 'TQ': 22, 'TR': 22,\n    \n    // 西米德兰兹 (GSP: _G - West Midlands)\n    'B': 14, 'CV': 14, 'DY': 14, 'HR': 14, 'ST': 14, 'TF': 14, 'WR': 14, 'WS': 14, 'WV': 14,\n    \n    // 东米德兰兹 (GSP: _F - East Midlands)\n    'DE': 11, 'LE': 11, 'LN': 11, 'NG': 11, 'NN': 11, 'S': 11,\n    \n    // 约克郡 (GSP: _M - Yorkshire)\n    'BD': 23, 'DN': 23, 'HD': 23, 'HG': 23, 'HU': 23, 'HX': 23, 'LS': 23, 'WF': 23, 'YO': 23,\n    \n    // 西北英格兰 (GSP: _D - North Western England)\n    'BB': 16, 'BL': 16, 'CA': 16, 'CH': 16, 'CW': 16, 'FY': 16, 'L': 16, 'LA': 16, 'M': 16,\n    'OL': 16, 'PR': 16, 'SK': 16, 'WA': 16, 'WN': 16,\n    \n    // 东北英格兰 (GSP: _E - North Eastern England)\n    'DH': 15, 'DL': 15, 'NE': 15, 'SR': 15, 'TS': 15,\n    \n    // 北威尔士和默西赛德 (GSP: _B - Merseyside and Northern Wales)\n    'LL': 13, 'SY': 13,\n    \n    // 南威尔士 (GSP: _L - South Wales)\n    'CF': 21, 'LD': 21, 'NP': 21, 'SA': 21,\n    \n    // 南苏格兰 (GSP: _P - Southern Scotland)\n    'DG': 18, 'EH': 18, 'G': 18, 'KA': 18, 'ML': 18, 'TD': 18,\n    \n    // 北苏格兰 (GSP: _N - Northern Scotland)\n    'AB': 17, 'DD': 17, 'FK': 17, 'HS': 17, 'IV': 17, 'KW': 17, 'KY': 17, 'PA': 17, 'PH': 17, 'ZE': 17,\n    \n    // 北爱尔兰（不在Ofgem管辖范围内，使用特殊标识）\n    'BT': 'NI'\n  },\n\n  // 获取默认电费（全英国平均）\n  getDefaultTariffs() {\n    return {\n      standardRate: 24.5,\n      standingCharge: 60.1,\n      peakRate: 28.3,\n      offPeakRate: 20.2,\n      nightRate: 15.8,\n      economy7NightRate: 13.5,\n      economy10NightRate: 12.8,\n      gasRate: 7.5,\n      gasStandingCharge: 31.4,\n      feedInTariffRate: 4.1,\n      smartExportGuarantee: 4.1\n    };\n  },\n\n  // 根据邮编获取地区\n  getRegionFromPostcode(postcode) {\n    if (!postcode) return 'England'; // 默认值\n    \n    const cleanPostcode = postcode.replace(/\\s+/g, '').toUpperCase();\n    \n    // 提取邮编前缀\n    const prefix = cleanPostcode.match(/^[A-Z]+/)?.[0];\n    if (!prefix) return 'England';\n    \n    // 首先检查完整前缀\n    if (this.postcodeToRegion[prefix]) {\n      return this.postcodeToRegion[prefix];\n    }\n    \n    // 然后检查单字母前缀\n    const singleLetter = prefix.charAt(0);\n    if (this.postcodeToRegion[singleLetter]) {\n      return this.postcodeToRegion[singleLetter];\n    }\n    \n    return 'England'; // 默认为英格兰\n  },\n\n  // 根据位置数据获取地区电费\n  getTariffsForLocation(locationData) {\n    let region = 'England'; // 默认地区\n    \n    // 优先使用country字段\n    if (locationData.country) {\n      if (locationData.country.includes('Scotland')) {\n        region = 'Scotland';\n      } else if (locationData.country.includes('Wales')) {\n        region = 'Wales';\n      } else if (locationData.country.includes('Northern Ireland')) {\n        region = 'Northern Ireland';\n      }\n    }\n    \n    // 如果country字段不明确，使用邮编判断\n    if (region === 'England' && locationData.postcode) {\n      region = this.getRegionFromPostcode(locationData.postcode);\n    }\n    \n    // 特殊处理伦敦地区\n    if (region === 'England' && locationData.region) {\n      if (locationData.region.includes('London') || \n          locationData.region.includes('Greater London')) {\n        region = 'London';\n      }\n    }\n    \n    // 获取该地区的电费数据\n    const regionTariffs = this.regionTariffs[region] || this.regionTariffs['England'];\n    \n    return {\n      ...this.getDefaultTariffs(),\n      ...regionTariffs,\n      detectedRegion: region,\n      source: 'regional_average'\n    };\n  },\n\n  // 获取地区信息说明\n  getRegionInfo(region) {\n    const info = {\n      'England': {\n        name: '英格兰',\n        description: '英格兰地区平均电费'\n      },\n      'Scotland': {\n        name: '苏格兰',\n        description: '苏格兰地区平均电费（通常略低于英格兰）'\n      },\n      'Wales': {\n        name: '威尔士',\n        description: '威尔士地区平均电费'\n      },\n      'Northern Ireland': {\n        name: '北爱尔兰',\n        description: '北爱尔兰地区平均电费（通常较高）'\n      },\n      'London': {\n        name: '伦敦',\n        description: '伦敦地区平均电费（通常略高于英格兰平均值）'\n      }\n    };\n    \n    return info[region] || info['England'];\n  }\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}