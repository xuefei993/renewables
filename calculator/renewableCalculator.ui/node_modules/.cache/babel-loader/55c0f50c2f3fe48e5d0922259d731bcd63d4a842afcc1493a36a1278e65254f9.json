{"ast":null,"code":"import _objectSpread from\"/Users/xuefei/Desktop/calculator00/calculator/renewableCalculator.ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{Line}from'react-chartjs-2';import{Chart as ChartJS,CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend}from'chart.js';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend);const ConfigurationComparison=_ref=>{let{selectedEquipment,userData,onBack}=_ref;const[availableEquipment,setAvailableEquipment]=useState({});const[configurations,setConfigurations]=useState([]);const[loading,setLoading]=useState(true);const[showChart,setShowChart]=useState({visible:false,data:null,title:''});useEffect(()=>{loadAvailableEquipment();},[selectedEquipment]);const loadAvailableEquipment=async()=>{try{const promises=[];if(selectedEquipment.solarPanels){promises.push(fetch('http://localhost:8080/api/equipment/solar-panels/available').then(res=>res.json()).then(data=>({type:'solar',data})));}if(selectedEquipment.heatPump){promises.push(fetch('http://localhost:8080/api/equipment/heat-pumps/available').then(res=>res.json()).then(data=>({type:'heatPump',data})));}if(selectedEquipment.batteryStorage){promises.push(fetch('http://localhost:8080/api/equipment/batteries/available').then(res=>res.json()).then(data=>({type:'battery',data})));}const results=await Promise.all(promises);const available={};results.forEach(result=>{available[result.type]=result.data;});setAvailableEquipment(available);// Initialize with 3 configuration rows\nconst initialConfigurations=[];for(let i=0;i<3;i++){initialConfigurations.push(createEmptyConfiguration(i+1));}setConfigurations(initialConfigurations);}catch(error){console.error('Error loading available equipment:',error);}finally{setLoading(false);}};const createEmptyConfiguration=configNumber=>({id:configNumber,name:\"\\u65B9\\u6848 \".concat(configNumber),selections:{solar:selectedEquipment.solarPanels?'':null,heatPump:selectedEquipment.heatPump?'':null,battery:selectedEquipment.batteryStorage?'':null},calculations:{installationCost:0,annualGeneration:0,annualSavings:0,annualExportRevenue:0,annualCO2Savings:0,paybackPeriod:0,monthlyData:{generation:new Array(12).fill(0),savings:new Array(12).fill(0),exportRevenue:new Array(12).fill(0),co2Savings:new Array(12).fill(0)}},loading:false});const handleEquipmentChange=async(configId,equipmentType,equipmentId)=>{// Update the selection\nsetConfigurations(prev=>prev.map(config=>{if(config.id===configId){return _objectSpread(_objectSpread({},config),{},{selections:_objectSpread(_objectSpread({},config.selections),{},{[equipmentType]:equipmentId}),loading:true});}return config;}));// Recalculate for this configuration\nawait recalculateConfiguration(configId,equipmentType,equipmentId);};const recalculateConfiguration=async(configId,changedEquipmentType,changedEquipmentId)=>{try{const config=configurations.find(c=>c.id===configId);if(!config)return;// Update the changed selection\nconst updatedSelections=_objectSpread(_objectSpread({},config.selections),{},{[changedEquipmentType]:changedEquipmentId});// Build request for calculation\nconst calculationRequest={hasSolarPanels:selectedEquipment.solarPanels,hasHeatPump:selectedEquipment.heatPump,hasBattery:selectedEquipment.batteryStorage,solarPanelTypeIds:updatedSelections.solar?[updatedSelections.solar]:[],heatPumpTypeIds:updatedSelections.heatPump?[updatedSelections.heatPump]:[],batteryIds:updatedSelections.battery?[updatedSelections.battery]:[],houseArea:userData.houseArea||100,occupants:userData.occupants||3,roofArea:userData.roofArea||30,latitude:userData.latitude||51.5,longitude:userData.longitude||-0.1,annualElectricityUsageKwh:userData.annualElectricityUsage||3000,annualGasUsageKwh:userData.annualGasUsage||15000,monthlyElectricityUsageKwh:userData.monthlyElectricityUsage||250,homeOccupancyFactor:userData.homeOccupancyFactor||0.5,electricityRate:userData.electricityRate||30,gasRate:userData.gasRate||6,exportRate:userData.exportRate||5,peakElectricityRate:userData.peakElectricityRate||40,offPeakElectricityRate:userData.offPeakElectricityRate||15};const response=await fetch('http://localhost:8080/api/equipment/compare',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(calculationRequest)});if(response.ok){const result=await response.json();const calculations=processCalculationResult(result);setConfigurations(prev=>prev.map(config=>{if(config.id===configId){return _objectSpread(_objectSpread({},config),{},{selections:updatedSelections,calculations,loading:false});}return config;}));}}catch(error){console.error('Error recalculating configuration:',error);setConfigurations(prev=>prev.map(config=>{if(config.id===configId){return _objectSpread(_objectSpread({},config),{},{loading:false});}return config;}));}};const processCalculationResult=result=>{let totalCost=0;let totalGeneration=0;let totalSavings=0;let totalExportRevenue=0;let totalCO2Savings=0;const monthlyGeneration=new Array(12).fill(0);const monthlySavings=new Array(12).fill(0);const monthlyExportRevenue=new Array(12).fill(0);const monthlyCO2Savings=new Array(12).fill(0);// Aggregate data from all equipment types\n[...(result.solarPanelOptions||[]),...(result.heatPumpOptions||[]),...(result.batteryOptions||[])].forEach(option=>{totalCost+=option.installationCost||0;totalGeneration+=option.annualGeneration||0;totalSavings+=option.annualCostSavings||0;totalExportRevenue+=option.annualExportRevenue||0;totalCO2Savings+=option.annualTotalCO2Savings||0;// Aggregate monthly data\nif(option.monthlyGeneration){option.monthlyGeneration.forEach((value,index)=>{monthlyGeneration[index]+=value||0;});}if(option.monthlyCostSavings){option.monthlyCostSavings.forEach((value,index)=>{monthlySavings[index]+=value||0;});}if(option.monthlyExportRevenue){option.monthlyExportRevenue.forEach((value,index)=>{monthlyExportRevenue[index]+=value||0;});}if(option.monthlyDirectCO2Savings&&option.monthlyIndirectCO2Savings){option.monthlyDirectCO2Savings.forEach((direct,index)=>{const indirect=option.monthlyIndirectCO2Savings[index]||0;monthlyCO2Savings[index]+=(direct||0)+indirect;});}});const paybackPeriod=totalSavings+totalExportRevenue>0?totalCost/(totalSavings+totalExportRevenue):999;return{installationCost:totalCost,annualGeneration:totalGeneration,annualSavings:totalSavings,annualExportRevenue:totalExportRevenue,annualCO2Savings:totalCO2Savings,paybackPeriod:paybackPeriod,monthlyData:{generation:monthlyGeneration,savings:monthlySavings,exportRevenue:monthlyExportRevenue,co2Savings:monthlyCO2Savings}};};const addConfiguration=()=>{const newId=Math.max(...configurations.map(c=>c.id))+1;setConfigurations(prev=>[...prev,createEmptyConfiguration(newId)]);};const removeConfiguration=configId=>{if(configurations.length>1){setConfigurations(prev=>prev.filter(c=>c.id!==configId));}};const showMonthlyChart=(config,dataType,title)=>{const months=['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];let monthlyData=[];switch(dataType){case'generation':monthlyData=config.calculations.monthlyData.generation;break;case'savings':monthlyData=config.calculations.monthlyData.savings;break;case'exportRevenue':monthlyData=config.calculations.monthlyData.exportRevenue;break;case'co2Savings':monthlyData=config.calculations.monthlyData.co2Savings;break;default:monthlyData=[];}const chartData={labels:months,datasets:[{label:title,data:monthlyData,borderColor:getChartColor(dataType),backgroundColor:getChartColor(dataType)+'20',tension:0.4,fill:true}]};const chartOptions={responsive:true,plugins:{legend:{position:'top'},title:{display:true,text:\"\".concat(config.name,\" - \").concat(title)}},scales:{y:{beginAtZero:true}}};setShowChart({visible:true,data:chartData,options:chartOptions,title:\"\".concat(config.name,\" - \").concat(title)});};const getChartColor=dataType=>{const colors={generation:'#3498db',savings:'#27ae60',exportRevenue:'#f39c12',co2Savings:'#e74c3c'};return colors[dataType]||'#34495e';};const formatCurrency=value=>{return value?\"\\xA3\".concat(Math.round(value).toLocaleString()):'Â£0';};const formatNumber=function(value){let unit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'';return value?\"\".concat(Math.round(value).toLocaleString()).concat(unit):\"0\".concat(unit);};const getEquipmentName=(equipmentType,equipmentId)=>{if(!equipmentId||!availableEquipment[equipmentType])return'';const equipment=availableEquipment[equipmentType].find(e=>e.id==equipmentId);return equipment?equipment.name:'';};if(loading){return/*#__PURE__*/_jsxs(\"div\",{className:\"configuration-comparison-loading\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Loading Equipment Options...\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Preparing configuration comparison table.\"})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"configuration-comparison\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"comparison-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\u7CFB\\u7EDF\\u914D\\u7F6E\\u65B9\\u6848\\u5BF9\\u6BD4\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u9009\\u62E9\\u4E0D\\u540C\\u7684\\u8BBE\\u5907\\u7EC4\\u5408\\uFF0C\\u5B9E\\u65F6\\u67E5\\u770B\\u6BCF\\u4E2A\\u65B9\\u6848\\u7684\\u6027\\u80FD\\u548C\\u6210\\u672C\\u6570\\u636E\\u3002\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"configuration-table-container\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"configuration-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"\\u65B9\\u6848\\u540D\\u79F0\"}),selectedEquipment.solarPanels&&/*#__PURE__*/_jsx(\"th\",{children:\"\\u592A\\u9633\\u80FD\\u677F\"}),selectedEquipment.heatPump&&/*#__PURE__*/_jsx(\"th\",{children:\"\\u70ED\\u6CF5\"}),selectedEquipment.batteryStorage&&/*#__PURE__*/_jsx(\"th\",{children:\"\\u84C4\\u7535\\u6C60\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u5B89\\u88C5\\u6210\\u672C\"}),/*#__PURE__*/_jsx(\"th\",{className:\"clickable-header\",title:\"\\u70B9\\u51FB\\u67E5\\u770B\\u6708\\u5EA6\\u56FE\\u8868\",children:\"\\u5168\\u5E74\\u53D1\\u7535\\u91CF\"}),/*#__PURE__*/_jsx(\"th\",{className:\"clickable-header\",title:\"\\u70B9\\u51FB\\u67E5\\u770B\\u6708\\u5EA6\\u56FE\\u8868\",children:\"\\u5168\\u5E74\\u8282\\u7701\"}),/*#__PURE__*/_jsx(\"th\",{className:\"clickable-header\",title:\"\\u70B9\\u51FB\\u67E5\\u770B\\u6708\\u5EA6\\u56FE\\u8868\",children:\"\\u5356\\u7535\\u6536\\u5165\"}),/*#__PURE__*/_jsx(\"th\",{className:\"clickable-header\",title:\"\\u70B9\\u51FB\\u67E5\\u770B\\u6708\\u5EA6\\u56FE\\u8868\",children:\"CO\\u2082\\u8282\\u7701\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u6295\\u8D44\\u56DE\\u672C\\u671F\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u64CD\\u4F5C\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:configurations.map(config=>{var _availableEquipment$s,_availableEquipment$h,_availableEquipment$b;return/*#__PURE__*/_jsxs(\"tr\",{className:config.loading?'loading-row':'',children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:config.name,onChange:e=>{setConfigurations(prev=>prev.map(c=>c.id===config.id?_objectSpread(_objectSpread({},c),{},{name:e.target.value}):c));},className:\"config-name-input\"})}),selectedEquipment.solarPanels&&/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(\"select\",{value:config.selections.solar||'',onChange:e=>handleEquipmentChange(config.id,'solar',e.target.value),className:\"equipment-select\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"\\u8BF7\\u9009\\u62E9...\"}),(_availableEquipment$s=availableEquipment.solar)===null||_availableEquipment$s===void 0?void 0:_availableEquipment$s.map(panel=>/*#__PURE__*/_jsxs(\"option\",{value:panel.id,children:[panel.name,\" (\",panel.ratedPowerPerPanel,\"W)\"]},panel.id))]})}),selectedEquipment.heatPump&&/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(\"select\",{value:config.selections.heatPump||'',onChange:e=>handleEquipmentChange(config.id,'heatPump',e.target.value),className:\"equipment-select\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"\\u8BF7\\u9009\\u62E9...\"}),(_availableEquipment$h=availableEquipment.heatPump)===null||_availableEquipment$h===void 0?void 0:_availableEquipment$h.map(heatPump=>/*#__PURE__*/_jsxs(\"option\",{value:heatPump.id,children:[heatPump.name,\" (COP: \",heatPump.cop,\")\"]},heatPump.id))]})}),selectedEquipment.batteryStorage&&/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(\"select\",{value:config.selections.battery||'',onChange:e=>handleEquipmentChange(config.id,'battery',e.target.value),className:\"equipment-select\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"\\u8BF7\\u9009\\u62E9...\"}),(_availableEquipment$b=availableEquipment.battery)===null||_availableEquipment$b===void 0?void 0:_availableEquipment$b.map(battery=>/*#__PURE__*/_jsxs(\"option\",{value:battery.id,children:[battery.name,\" (\",battery.capacityKwh,\"kWh)\"]},battery.id))]})}),/*#__PURE__*/_jsx(\"td\",{children:config.loading?'è®¡ç®ä¸­...':formatCurrency(config.calculations.installationCost)}),/*#__PURE__*/_jsx(\"td\",{className:\"clickable-cell\",onClick:()=>!config.loading&&showMonthlyChart(config,'generation','æåº¦åçµé (kWh)'),children:config.loading?'è®¡ç®ä¸­...':formatNumber(config.calculations.annualGeneration,' kWh')}),/*#__PURE__*/_jsx(\"td\",{className:\"clickable-cell\",onClick:()=>!config.loading&&showMonthlyChart(config,'savings','æåº¦èç (Â£)'),children:config.loading?'è®¡ç®ä¸­...':formatCurrency(config.calculations.annualSavings)}),/*#__PURE__*/_jsx(\"td\",{className:\"clickable-cell\",onClick:()=>!config.loading&&showMonthlyChart(config,'exportRevenue','æåº¦åçµæ¶å¥ (Â£)'),children:config.loading?'è®¡ç®ä¸­...':formatCurrency(config.calculations.annualExportRevenue)}),/*#__PURE__*/_jsx(\"td\",{className:\"clickable-cell\",onClick:()=>!config.loading&&showMonthlyChart(config,'co2Savings','æåº¦COâèç (kg)'),children:config.loading?'è®¡ç®ä¸­...':formatNumber(config.calculations.annualCO2Savings,' kg')}),/*#__PURE__*/_jsx(\"td\",{children:config.loading?'è®¡ç®ä¸­...':formatNumber(config.calculations.paybackPeriod,' å¹´')}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"button\",{className:\"btn-remove\",onClick:()=>removeConfiguration(config.id),disabled:configurations.length<=1,title:\"\\u5220\\u9664\\u65B9\\u6848\",children:\"\\xD7\"})})]},config.id);})})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"table-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary\",onClick:addConfiguration,children:\"+ \\u6DFB\\u52A0\\u65B0\\u65B9\\u6848\"}),/*#__PURE__*/_jsx(\"span\",{className:\"table-hint\",children:\"\\uD83D\\uDCA1 \\u9009\\u62E9\\u8BBE\\u5907\\u540E\\u6570\\u636E\\u4F1A\\u81EA\\u52A8\\u8BA1\\u7B97\\uFF0C\\u70B9\\u51FB\\u6570\\u636E\\u5217\\u53EF\\u67E5\\u770B\\u6708\\u5EA6\\u8D8B\\u52BF\\u56FE\"})]}),showChart.visible&&/*#__PURE__*/_jsx(\"div\",{className:\"chart-modal-overlay\",onClick:()=>setShowChart({visible:false,data:null,title:''}),children:/*#__PURE__*/_jsxs(\"div\",{className:\"chart-modal\",onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chart-modal-header\",children:[/*#__PURE__*/_jsx(\"h4\",{children:showChart.title}),/*#__PURE__*/_jsx(\"button\",{className:\"chart-close-button\",onClick:()=>setShowChart({visible:false,data:null,title:''}),children:\"\\xD7\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"chart-container\",children:/*#__PURE__*/_jsx(Line,{data:showChart.data,options:showChart.options})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"comparison-actions\",children:/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary\",onClick:onBack,children:\"\\u8FD4\\u56DE\\u8BBE\\u5907\\u9009\\u62E9\"})})]});};export default ConfigurationComparison;","map":{"version":3,"names":["React","useState","useEffect","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsx","_jsx","jsxs","_jsxs","register","ConfigurationComparison","_ref","selectedEquipment","userData","onBack","availableEquipment","setAvailableEquipment","configurations","setConfigurations","loading","setLoading","showChart","setShowChart","visible","data","title","loadAvailableEquipment","promises","solarPanels","push","fetch","then","res","json","type","heatPump","batteryStorage","results","Promise","all","available","forEach","result","initialConfigurations","i","createEmptyConfiguration","error","console","configNumber","id","name","concat","selections","solar","battery","calculations","installationCost","annualGeneration","annualSavings","annualExportRevenue","annualCO2Savings","paybackPeriod","monthlyData","generation","Array","fill","savings","exportRevenue","co2Savings","handleEquipmentChange","configId","equipmentType","equipmentId","prev","map","config","_objectSpread","recalculateConfiguration","changedEquipmentType","changedEquipmentId","find","c","updatedSelections","calculationRequest","hasSolarPanels","hasHeatPump","hasBattery","solarPanelTypeIds","heatPumpTypeIds","batteryIds","houseArea","occupants","roofArea","latitude","longitude","annualElectricityUsageKwh","annualElectricityUsage","annualGasUsageKwh","annualGasUsage","monthlyElectricityUsageKwh","monthlyElectricityUsage","homeOccupancyFactor","electricityRate","gasRate","exportRate","peakElectricityRate","offPeakElectricityRate","response","method","headers","body","JSON","stringify","ok","processCalculationResult","totalCost","totalGeneration","totalSavings","totalExportRevenue","totalCO2Savings","monthlyGeneration","monthlySavings","monthlyExportRevenue","monthlyCO2Savings","solarPanelOptions","heatPumpOptions","batteryOptions","option","annualCostSavings","annualTotalCO2Savings","value","index","monthlyCostSavings","monthlyDirectCO2Savings","monthlyIndirectCO2Savings","direct","indirect","addConfiguration","newId","Math","max","removeConfiguration","length","filter","showMonthlyChart","dataType","months","chartData","labels","datasets","label","borderColor","getChartColor","backgroundColor","tension","chartOptions","responsive","plugins","legend","position","display","text","scales","y","beginAtZero","options","colors","formatCurrency","round","toLocaleString","formatNumber","unit","arguments","undefined","getEquipmentName","equipment","e","className","children","_availableEquipment$s","_availableEquipment$h","_availableEquipment$b","onChange","target","panel","ratedPowerPerPanel","cop","capacityKwh","onClick","disabled","stopPropagation"],"sources":["/Users/xuefei/Desktop/calculator00/calculator/renewableCalculator.ui/src/components/steps/ConfigurationComparison.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst ConfigurationComparison = ({ selectedEquipment, userData, onBack }) => {\n  const [availableEquipment, setAvailableEquipment] = useState({});\n  const [configurations, setConfigurations] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showChart, setShowChart] = useState({ visible: false, data: null, title: '' });\n\n  useEffect(() => {\n    loadAvailableEquipment();\n  }, [selectedEquipment]);\n\n  const loadAvailableEquipment = async () => {\n    try {\n      const promises = [];\n      \n      if (selectedEquipment.solarPanels) {\n        promises.push(\n          fetch('http://localhost:8080/api/equipment/solar-panels/available')\n            .then(res => res.json())\n            .then(data => ({ type: 'solar', data }))\n        );\n      }\n      \n      if (selectedEquipment.heatPump) {\n        promises.push(\n          fetch('http://localhost:8080/api/equipment/heat-pumps/available')\n            .then(res => res.json())\n            .then(data => ({ type: 'heatPump', data }))\n        );\n      }\n      \n      if (selectedEquipment.batteryStorage) {\n        promises.push(\n          fetch('http://localhost:8080/api/equipment/batteries/available')\n            .then(res => res.json())\n            .then(data => ({ type: 'battery', data }))\n        );\n      }\n\n      const results = await Promise.all(promises);\n      \n      const available = {};\n      results.forEach(result => {\n        available[result.type] = result.data;\n      });\n      \n      setAvailableEquipment(available);\n      \n      // Initialize with 3 configuration rows\n      const initialConfigurations = [];\n      for (let i = 0; i < 3; i++) {\n        initialConfigurations.push(createEmptyConfiguration(i + 1));\n      }\n      setConfigurations(initialConfigurations);\n      \n    } catch (error) {\n      console.error('Error loading available equipment:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const createEmptyConfiguration = (configNumber) => ({\n    id: configNumber,\n    name: `æ¹æ¡ ${configNumber}`,\n    selections: {\n      solar: selectedEquipment.solarPanels ? '' : null,\n      heatPump: selectedEquipment.heatPump ? '' : null,\n      battery: selectedEquipment.batteryStorage ? '' : null,\n    },\n    calculations: {\n      installationCost: 0,\n      annualGeneration: 0,\n      annualSavings: 0,\n      annualExportRevenue: 0,\n      annualCO2Savings: 0,\n      paybackPeriod: 0,\n      monthlyData: {\n        generation: new Array(12).fill(0),\n        savings: new Array(12).fill(0),\n        exportRevenue: new Array(12).fill(0),\n        co2Savings: new Array(12).fill(0)\n      }\n    },\n    loading: false\n  });\n\n  const handleEquipmentChange = async (configId, equipmentType, equipmentId) => {\n    // Update the selection\n    setConfigurations(prev => prev.map(config => {\n      if (config.id === configId) {\n        return {\n          ...config,\n          selections: {\n            ...config.selections,\n            [equipmentType]: equipmentId\n          },\n          loading: true\n        };\n      }\n      return config;\n    }));\n\n    // Recalculate for this configuration\n    await recalculateConfiguration(configId, equipmentType, equipmentId);\n  };\n\n  const recalculateConfiguration = async (configId, changedEquipmentType, changedEquipmentId) => {\n    try {\n      const config = configurations.find(c => c.id === configId);\n      if (!config) return;\n\n      // Update the changed selection\n      const updatedSelections = {\n        ...config.selections,\n        [changedEquipmentType]: changedEquipmentId\n      };\n\n      // Build request for calculation\n      const calculationRequest = {\n        hasSolarPanels: selectedEquipment.solarPanels,\n        hasHeatPump: selectedEquipment.heatPump,\n        hasBattery: selectedEquipment.batteryStorage,\n        solarPanelTypeIds: updatedSelections.solar ? [updatedSelections.solar] : [],\n        heatPumpTypeIds: updatedSelections.heatPump ? [updatedSelections.heatPump] : [],\n        batteryIds: updatedSelections.battery ? [updatedSelections.battery] : [],\n        houseArea: userData.houseArea || 100,\n        occupants: userData.occupants || 3,\n        roofArea: userData.roofArea || 30,\n        latitude: userData.latitude || 51.5,\n        longitude: userData.longitude || -0.1,\n        annualElectricityUsageKwh: userData.annualElectricityUsage || 3000,\n        annualGasUsageKwh: userData.annualGasUsage || 15000,\n        monthlyElectricityUsageKwh: userData.monthlyElectricityUsage || 250,\n        homeOccupancyFactor: userData.homeOccupancyFactor || 0.5,\n        electricityRate: userData.electricityRate || 30,\n        gasRate: userData.gasRate || 6,\n        exportRate: userData.exportRate || 5,\n        peakElectricityRate: userData.peakElectricityRate || 40,\n        offPeakElectricityRate: userData.offPeakElectricityRate || 15,\n      };\n\n      const response = await fetch('http://localhost:8080/api/equipment/compare', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(calculationRequest)\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        const calculations = processCalculationResult(result);\n        \n        setConfigurations(prev => prev.map(config => {\n          if (config.id === configId) {\n            return {\n              ...config,\n              selections: updatedSelections,\n              calculations,\n              loading: false\n            };\n          }\n          return config;\n        }));\n      }\n    } catch (error) {\n      console.error('Error recalculating configuration:', error);\n      setConfigurations(prev => prev.map(config => {\n        if (config.id === configId) {\n          return { ...config, loading: false };\n        }\n        return config;\n      }));\n    }\n  };\n\n  const processCalculationResult = (result) => {\n    let totalCost = 0;\n    let totalGeneration = 0;\n    let totalSavings = 0;\n    let totalExportRevenue = 0;\n    let totalCO2Savings = 0;\n    const monthlyGeneration = new Array(12).fill(0);\n    const monthlySavings = new Array(12).fill(0);\n    const monthlyExportRevenue = new Array(12).fill(0);\n    const monthlyCO2Savings = new Array(12).fill(0);\n\n    // Aggregate data from all equipment types\n    [...(result.solarPanelOptions || []), ...(result.heatPumpOptions || []), ...(result.batteryOptions || [])].forEach(option => {\n      totalCost += option.installationCost || 0;\n      totalGeneration += option.annualGeneration || 0;\n      totalSavings += option.annualCostSavings || 0;\n      totalExportRevenue += option.annualExportRevenue || 0;\n      totalCO2Savings += option.annualTotalCO2Savings || 0;\n\n      // Aggregate monthly data\n      if (option.monthlyGeneration) {\n        option.monthlyGeneration.forEach((value, index) => {\n          monthlyGeneration[index] += value || 0;\n        });\n      }\n      if (option.monthlyCostSavings) {\n        option.monthlyCostSavings.forEach((value, index) => {\n          monthlySavings[index] += value || 0;\n        });\n      }\n      if (option.monthlyExportRevenue) {\n        option.monthlyExportRevenue.forEach((value, index) => {\n          monthlyExportRevenue[index] += value || 0;\n        });\n      }\n      if (option.monthlyDirectCO2Savings && option.monthlyIndirectCO2Savings) {\n        option.monthlyDirectCO2Savings.forEach((direct, index) => {\n          const indirect = option.monthlyIndirectCO2Savings[index] || 0;\n          monthlyCO2Savings[index] += (direct || 0) + indirect;\n        });\n      }\n    });\n\n    const paybackPeriod = (totalSavings + totalExportRevenue) > 0 ? \n      totalCost / (totalSavings + totalExportRevenue) : 999;\n\n    return {\n      installationCost: totalCost,\n      annualGeneration: totalGeneration,\n      annualSavings: totalSavings,\n      annualExportRevenue: totalExportRevenue,\n      annualCO2Savings: totalCO2Savings,\n      paybackPeriod: paybackPeriod,\n      monthlyData: {\n        generation: monthlyGeneration,\n        savings: monthlySavings,\n        exportRevenue: monthlyExportRevenue,\n        co2Savings: monthlyCO2Savings\n      }\n    };\n  };\n\n  const addConfiguration = () => {\n    const newId = Math.max(...configurations.map(c => c.id)) + 1;\n    setConfigurations(prev => [...prev, createEmptyConfiguration(newId)]);\n  };\n\n  const removeConfiguration = (configId) => {\n    if (configurations.length > 1) {\n      setConfigurations(prev => prev.filter(c => c.id !== configId));\n    }\n  };\n\n  const showMonthlyChart = (config, dataType, title) => {\n    const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', \n                   'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    \n    let monthlyData = [];\n    switch (dataType) {\n      case 'generation':\n        monthlyData = config.calculations.monthlyData.generation;\n        break;\n      case 'savings':\n        monthlyData = config.calculations.monthlyData.savings;\n        break;\n      case 'exportRevenue':\n        monthlyData = config.calculations.monthlyData.exportRevenue;\n        break;\n      case 'co2Savings':\n        monthlyData = config.calculations.monthlyData.co2Savings;\n        break;\n      default:\n        monthlyData = [];\n    }\n\n    const chartData = {\n      labels: months,\n      datasets: [{\n        label: title,\n        data: monthlyData,\n        borderColor: getChartColor(dataType),\n        backgroundColor: getChartColor(dataType) + '20',\n        tension: 0.4,\n        fill: true\n      }]\n    };\n\n    const chartOptions = {\n      responsive: true,\n      plugins: {\n        legend: { position: 'top' },\n        title: { display: true, text: `${config.name} - ${title}` }\n      },\n      scales: {\n        y: { beginAtZero: true }\n      }\n    };\n\n    setShowChart({\n      visible: true,\n      data: chartData,\n      options: chartOptions,\n      title: `${config.name} - ${title}`\n    });\n  };\n\n  const getChartColor = (dataType) => {\n    const colors = {\n      generation: '#3498db',\n      savings: '#27ae60',\n      exportRevenue: '#f39c12',\n      co2Savings: '#e74c3c'\n    };\n    return colors[dataType] || '#34495e';\n  };\n\n  const formatCurrency = (value) => {\n    return value ? `Â£${Math.round(value).toLocaleString()}` : 'Â£0';\n  };\n\n  const formatNumber = (value, unit = '') => {\n    return value ? `${Math.round(value).toLocaleString()}${unit}` : `0${unit}`;\n  };\n\n  const getEquipmentName = (equipmentType, equipmentId) => {\n    if (!equipmentId || !availableEquipment[equipmentType]) return '';\n    const equipment = availableEquipment[equipmentType].find(e => e.id == equipmentId);\n    return equipment ? equipment.name : '';\n  };\n\n  if (loading) {\n    return (\n      <div className=\"configuration-comparison-loading\">\n        <h3>Loading Equipment Options...</h3>\n        <p>Preparing configuration comparison table.</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"configuration-comparison\">\n      <div className=\"comparison-header\">\n        <h3>ç³»ç»éç½®æ¹æ¡å¯¹æ¯</h3>\n        <p>éæ©ä¸åçè®¾å¤ç»åï¼å®æ¶æ¥çæ¯ä¸ªæ¹æ¡çæ§è½åææ¬æ°æ®ã</p>\n      </div>\n\n      <div className=\"configuration-table-container\">\n        <table className=\"configuration-table\">\n          <thead>\n            <tr>\n              <th>æ¹æ¡åç§°</th>\n              {selectedEquipment.solarPanels && <th>å¤ªé³è½æ¿</th>}\n              {selectedEquipment.heatPump && <th>ç­æ³µ</th>}\n              {selectedEquipment.batteryStorage && <th>èçµæ± </th>}\n              <th>å®è£ææ¬</th>\n              <th className=\"clickable-header\" title=\"ç¹å»æ¥çæåº¦å¾è¡¨\">å¨å¹´åçµé</th>\n              <th className=\"clickable-header\" title=\"ç¹å»æ¥çæåº¦å¾è¡¨\">å¨å¹´èç</th>\n              <th className=\"clickable-header\" title=\"ç¹å»æ¥çæåº¦å¾è¡¨\">åçµæ¶å¥</th>\n              <th className=\"clickable-header\" title=\"ç¹å»æ¥çæåº¦å¾è¡¨\">COâèç</th>\n              <th>æèµåæ¬æ</th>\n              <th>æä½</th>\n            </tr>\n          </thead>\n          <tbody>\n            {configurations.map(config => (\n              <tr key={config.id} className={config.loading ? 'loading-row' : ''}>\n                <td>\n                  <input \n                    type=\"text\" \n                    value={config.name}\n                    onChange={(e) => {\n                      setConfigurations(prev => prev.map(c => \n                        c.id === config.id ? { ...c, name: e.target.value } : c\n                      ));\n                    }}\n                    className=\"config-name-input\"\n                  />\n                </td>\n                \n                {selectedEquipment.solarPanels && (\n                  <td>\n                    <select \n                      value={config.selections.solar || ''}\n                      onChange={(e) => handleEquipmentChange(config.id, 'solar', e.target.value)}\n                      className=\"equipment-select\"\n                    >\n                      <option value=\"\">è¯·éæ©...</option>\n                      {availableEquipment.solar?.map(panel => (\n                        <option key={panel.id} value={panel.id}>\n                          {panel.name} ({panel.ratedPowerPerPanel}W)\n                        </option>\n                      ))}\n                    </select>\n                  </td>\n                )}\n                \n                {selectedEquipment.heatPump && (\n                  <td>\n                    <select \n                      value={config.selections.heatPump || ''}\n                      onChange={(e) => handleEquipmentChange(config.id, 'heatPump', e.target.value)}\n                      className=\"equipment-select\"\n                    >\n                      <option value=\"\">è¯·éæ©...</option>\n                      {availableEquipment.heatPump?.map(heatPump => (\n                        <option key={heatPump.id} value={heatPump.id}>\n                          {heatPump.name} (COP: {heatPump.cop})\n                        </option>\n                      ))}\n                    </select>\n                  </td>\n                )}\n                \n                {selectedEquipment.batteryStorage && (\n                  <td>\n                    <select \n                      value={config.selections.battery || ''}\n                      onChange={(e) => handleEquipmentChange(config.id, 'battery', e.target.value)}\n                      className=\"equipment-select\"\n                    >\n                      <option value=\"\">è¯·éæ©...</option>\n                      {availableEquipment.battery?.map(battery => (\n                        <option key={battery.id} value={battery.id}>\n                          {battery.name} ({battery.capacityKwh}kWh)\n                        </option>\n                      ))}\n                    </select>\n                  </td>\n                )}\n                \n                <td>{config.loading ? 'è®¡ç®ä¸­...' : formatCurrency(config.calculations.installationCost)}</td>\n                \n                <td \n                  className=\"clickable-cell\"\n                  onClick={() => !config.loading && showMonthlyChart(config, 'generation', 'æåº¦åçµé (kWh)')}\n                >\n                  {config.loading ? 'è®¡ç®ä¸­...' : formatNumber(config.calculations.annualGeneration, ' kWh')}\n                </td>\n                \n                <td \n                  className=\"clickable-cell\"\n                  onClick={() => !config.loading && showMonthlyChart(config, 'savings', 'æåº¦èç (Â£)')}\n                >\n                  {config.loading ? 'è®¡ç®ä¸­...' : formatCurrency(config.calculations.annualSavings)}\n                </td>\n                \n                <td \n                  className=\"clickable-cell\"\n                  onClick={() => !config.loading && showMonthlyChart(config, 'exportRevenue', 'æåº¦åçµæ¶å¥ (Â£)')}\n                >\n                  {config.loading ? 'è®¡ç®ä¸­...' : formatCurrency(config.calculations.annualExportRevenue)}\n                </td>\n                \n                <td \n                  className=\"clickable-cell\"\n                  onClick={() => !config.loading && showMonthlyChart(config, 'co2Savings', 'æåº¦COâèç (kg)')}\n                >\n                  {config.loading ? 'è®¡ç®ä¸­...' : formatNumber(config.calculations.annualCO2Savings, ' kg')}\n                </td>\n                \n                <td>{config.loading ? 'è®¡ç®ä¸­...' : formatNumber(config.calculations.paybackPeriod, ' å¹´')}</td>\n                \n                <td>\n                  <button \n                    className=\"btn-remove\" \n                    onClick={() => removeConfiguration(config.id)}\n                    disabled={configurations.length <= 1}\n                    title=\"å é¤æ¹æ¡\"\n                  >\n                    Ã\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n\n      <div className=\"table-actions\">\n        <button className=\"btn btn-secondary\" onClick={addConfiguration}>\n          + æ·»å æ°æ¹æ¡\n        </button>\n        <span className=\"table-hint\">\n          ð¡ éæ©è®¾å¤åæ°æ®ä¼èªå¨è®¡ç®ï¼ç¹å»æ°æ®åå¯æ¥çæåº¦è¶å¿å¾\n        </span>\n      </div>\n\n      {/* Monthly Chart Modal */}\n      {showChart.visible && (\n        <div className=\"chart-modal-overlay\" onClick={() => setShowChart({ visible: false, data: null, title: '' })}>\n          <div className=\"chart-modal\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"chart-modal-header\">\n              <h4>{showChart.title}</h4>\n              <button \n                className=\"chart-close-button\"\n                onClick={() => setShowChart({ visible: false, data: null, title: '' })}\n              >\n                Ã\n              </button>\n            </div>\n            <div className=\"chart-container\">\n              <Line data={showChart.data} options={showChart.options} />\n            </div>\n          </div>\n        </div>\n      )}\n\n      <div className=\"comparison-actions\">\n        <button className=\"btn btn-secondary\" onClick={onBack}>\n          è¿åè®¾å¤éæ©\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ConfigurationComparison; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}