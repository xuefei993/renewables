{"ast":null,"code":"var _jsxFileName = \"/Users/xuefei/Desktop/calculator00 copy 3/calculator/renewableCalculator.ui/src/components/SubsidyChecker.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './SubsidyChecker.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SubsidyChecker = ({\n  userData,\n  systemConfiguration,\n  onSubsidyApplied\n}) => {\n  _s();\n  const [subsidies, setSubsidies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [showSubsidies, setShowSubsidies] = useState(false);\n  const [appliedSubsidies, setAppliedSubsidies] = useState([]);\n  const [totalSubsidyAmount, setTotalSubsidyAmount] = useState(0);\n  const [conditionsChecked, setConditionsChecked] = useState({}); // Track which conditions are checked for each subsidy\n\n  // Define eligibility conditions for each subsidy\n  const getEligibilityConditions = subsidyName => {\n    switch (subsidyName) {\n      case 'Boiler Upgrade Scheme':\n        return ['My property is located in England or Wales', 'I am replacing an existing heating system (not new build)', 'I will use an MCS certified installer'];\n      default:\n        return [];\n    }\n  };\n\n  // Check if all conditions are met for a subsidy\n  const areAllConditionsMet = subsidyId => {\n    const subsidy = subsidies.find(s => s.subsidyId === subsidyId);\n    if (!subsidy) return false;\n    const conditions = getEligibilityConditions(subsidy.name);\n    const checkedConditions = conditionsChecked[subsidyId] || {};\n    return conditions.every((_, index) => checkedConditions[index] === true);\n  };\n\n  // Handle condition checkbox change\n  const handleConditionChange = (subsidyId, conditionIndex, checked) => {\n    setConditionsChecked(prev => ({\n      ...prev,\n      [subsidyId]: {\n        ...prev[subsidyId],\n        [conditionIndex]: checked\n      }\n    }));\n  };\n  const checkSubsidies = async () => {\n    setLoading(true);\n    try {\n      var _systemConfiguration$, _systemConfiguration$2, _systemConfiguration$3;\n      const request = {\n        hasSolarPanels: ((_systemConfiguration$ = systemConfiguration.selectedEquipment) === null || _systemConfiguration$ === void 0 ? void 0 : _systemConfiguration$.solarPanels) || false,\n        hasHeatPump: ((_systemConfiguration$2 = systemConfiguration.selectedEquipment) === null || _systemConfiguration$2 === void 0 ? void 0 : _systemConfiguration$2.heatPump) || false,\n        hasBattery: ((_systemConfiguration$3 = systemConfiguration.selectedEquipment) === null || _systemConfiguration$3 === void 0 ? void 0 : _systemConfiguration$3.batteryStorage) || false,\n        houseType: userData.propertyType || userData.houseType,\n        epcRating: userData.epcRating || 'D',\n        regionCode: 'UK',\n        postcode: userData.postcode,\n        solarCapacityKw: systemConfiguration.totalSystemCapacity || 5.0,\n        heatPumpCapacityKw: 8.0,\n        // Estimated average\n        batteryCapacityKwh: 10.0,\n        // Estimated average\n        totalInstallationCost: systemConfiguration.totalInstallationCost || 25000,\n        solarInstallationCost: systemConfiguration.solarInstallationCost || 15000,\n        heatPumpInstallationCost: systemConfiguration.heatPumpInstallationCost || 8000,\n        batteryInstallationCost: systemConfiguration.batteryInstallationCost || 8000\n      };\n      console.log('Sending subsidy check request:', request);\n      const response = await fetch('http://localhost:8080/api/subsidies/check', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(request)\n      });\n      if (response.ok) {\n        const result = await response.json();\n        console.log('Subsidy check result:', result);\n        setSubsidies(result.availableSubsidies || []);\n        setShowSubsidies(true);\n      } else {\n        console.error('Error checking subsidies:', response.status);\n        setSubsidies([]);\n        setShowSubsidies(true);\n      }\n    } catch (error) {\n      console.error('Error checking subsidies:', error);\n      setSubsidies([]);\n      setShowSubsidies(true);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const applySubsidy = subsidy => {\n    const newApplied = [...appliedSubsidies, subsidy];\n    const newTotal = newApplied.reduce((sum, s) => sum + (s.estimatedAmount || 0), 0);\n    setAppliedSubsidies(newApplied);\n    setTotalSubsidyAmount(newTotal);\n\n    // Notify parent component about the subsidy application\n    if (onSubsidyApplied) {\n      onSubsidyApplied(newApplied, newTotal);\n    }\n  };\n  const removeSubsidy = subsidyId => {\n    const newApplied = appliedSubsidies.filter(s => s.subsidyId !== subsidyId);\n    const newTotal = newApplied.reduce((sum, s) => sum + (s.estimatedAmount || 0), 0);\n    setAppliedSubsidies(newApplied);\n    setTotalSubsidyAmount(newTotal);\n\n    // Notify parent component about the subsidy removal\n    if (onSubsidyApplied) {\n      onSubsidyApplied(newApplied, newTotal);\n    }\n  };\n  const isSubsidyApplied = subsidyId => {\n    return appliedSubsidies.some(s => s.subsidyId === subsidyId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"subsidy-checker\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"subsidy-checker-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Government Subsidies & Grants\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Check for available government support schemes that could reduce your installation costs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), appliedSubsidies.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"applied-subsidies-summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"subsidy-badge\",\n          children: [appliedSubsidies.length, \" subsidy\", appliedSubsidies.length !== 1 ? 'ies' : '', \" applied\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"total-subsidy-amount\",\n          children: [\"Total savings: \\xA3\", totalSubsidyAmount.toFixed(0)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"subsidy-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"check-subsidies-btn\",\n        onClick: checkSubsidies,\n        disabled: loading,\n        children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"loading-spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this), \"Checking Available Subsidies...\"]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: \"Check Available Subsidies\"\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), showSubsidies && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"subsidies-results\",\n      children: subsidies.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-subsidies-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"No Current Subsidies Available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"There are currently no government subsidies available for your configuration. Check back periodically as new schemes may become available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"subsidies-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Available Subsidies (\", subsidies.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 15\n        }, this), subsidies.map(subsidy => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `subsidy-card ${subsidy.isEligible ? 'eligible' : 'not-eligible'} ${isSubsidyApplied(subsidy.subsidyId) ? 'applied' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"subsidy-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"subsidy-title\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: subsidy.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `eligibility-badge ${subsidy.isEligible ? 'eligible' : 'not-eligible'}`,\n                children: subsidy.isEligible ? '✓ Eligible' : '✗ Not Eligible'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 21\n            }, this), subsidy.isEligible && subsidy.estimatedAmount && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"subsidy-amount\",\n              children: [\"\\xA3\", subsidy.estimatedAmount.toFixed(0)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"subsidy-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"subsidy-description\",\n              children: subsidy.shortDescription\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 21\n            }, this), subsidy.isEligible ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"subsidy-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"eligibility-conditions\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Please confirm you meet these requirements:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 27\n                }, this), getEligibilityConditions(subsidy.name).map((condition, index) => {\n                  var _conditionsChecked$su;\n                  return /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"condition-checkbox\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"checkbox\",\n                      checked: ((_conditionsChecked$su = conditionsChecked[subsidy.subsidyId]) === null || _conditionsChecked$su === void 0 ? void 0 : _conditionsChecked$su[index]) || false,\n                      onChange: e => handleConditionChange(subsidy.subsidyId, index, e.target.checked)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 203,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"condition-text\",\n                      children: condition\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 208,\n                      columnNumber: 31\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 29\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 25\n              }, this), subsidy.deadline && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"deadline\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Application Deadline:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 29\n                }, this), \" \", new Date(subsidy.deadline).toLocaleDateString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 23\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ineligibility-reason\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Why not eligible:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 28\n                }, this), \" \", subsidy.ineligibilityReason]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"subsidy-actions\",\n              children: [subsidy.applicationUrl && /*#__PURE__*/_jsxDEV(\"a\", {\n                href: subsidy.applicationUrl,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                className: \"learn-more-btn\",\n                children: \"Learn More & Apply\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 25\n              }, this), subsidy.isEligible && !isSubsidyApplied(subsidy.subsidyId) && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"apply-subsidy-btn\",\n                onClick: () => applySubsidy(subsidy),\n                disabled: !areAllConditionsMet(subsidy.subsidyId),\n                children: \"Apply to Calculations\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 25\n              }, this), isSubsidyApplied(subsidy.subsidyId) && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"remove-subsidy-btn\",\n                onClick: () => removeSubsidy(subsidy.subsidyId),\n                children: \"\\u2715 Remove from Calculations\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 19\n          }, this)]\n        }, subsidy.subsidyId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n_s(SubsidyChecker, \"VJA0NTqHMCa/YDTq/Vnhxg97v04=\");\n_c = SubsidyChecker;\nexport default SubsidyChecker;\nvar _c;\n$RefreshReg$(_c, \"SubsidyChecker\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","SubsidyChecker","userData","systemConfiguration","onSubsidyApplied","_s","subsidies","setSubsidies","loading","setLoading","showSubsidies","setShowSubsidies","appliedSubsidies","setAppliedSubsidies","totalSubsidyAmount","setTotalSubsidyAmount","conditionsChecked","setConditionsChecked","getEligibilityConditions","subsidyName","areAllConditionsMet","subsidyId","subsidy","find","s","conditions","name","checkedConditions","every","_","index","handleConditionChange","conditionIndex","checked","prev","checkSubsidies","_systemConfiguration$","_systemConfiguration$2","_systemConfiguration$3","request","hasSolarPanels","selectedEquipment","solarPanels","hasHeatPump","heatPump","hasBattery","batteryStorage","houseType","propertyType","epcRating","regionCode","postcode","solarCapacityKw","totalSystemCapacity","heatPumpCapacityKw","batteryCapacityKwh","totalInstallationCost","solarInstallationCost","heatPumpInstallationCost","batteryInstallationCost","console","log","response","fetch","method","headers","body","JSON","stringify","ok","result","json","availableSubsidies","error","status","applySubsidy","newApplied","newTotal","reduce","sum","estimatedAmount","removeSubsidy","filter","isSubsidyApplied","some","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","toFixed","onClick","disabled","map","isEligible","shortDescription","condition","_conditionsChecked$su","type","onChange","e","target","deadline","Date","toLocaleDateString","ineligibilityReason","applicationUrl","href","rel","_c","$RefreshReg$"],"sources":["/Users/xuefei/Desktop/calculator00 copy 3/calculator/renewableCalculator.ui/src/components/SubsidyChecker.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './SubsidyChecker.css';\n\nconst SubsidyChecker = ({ userData, systemConfiguration, onSubsidyApplied }) => {\n  const [subsidies, setSubsidies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [showSubsidies, setShowSubsidies] = useState(false);\n  const [appliedSubsidies, setAppliedSubsidies] = useState([]);\n  const [totalSubsidyAmount, setTotalSubsidyAmount] = useState(0);\n  const [conditionsChecked, setConditionsChecked] = useState({}); // Track which conditions are checked for each subsidy\n\n  // Define eligibility conditions for each subsidy\n  const getEligibilityConditions = (subsidyName) => {\n    switch (subsidyName) {\n      case 'Boiler Upgrade Scheme':\n        return [\n          'My property is located in England or Wales',\n          'I am replacing an existing heating system (not new build)',\n          'I will use an MCS certified installer'\n        ];\n      default:\n        return [];\n    }\n  };\n\n  // Check if all conditions are met for a subsidy\n  const areAllConditionsMet = (subsidyId) => {\n    const subsidy = subsidies.find(s => s.subsidyId === subsidyId);\n    if (!subsidy) return false;\n    \n    const conditions = getEligibilityConditions(subsidy.name);\n    const checkedConditions = conditionsChecked[subsidyId] || {};\n    \n    return conditions.every((_, index) => checkedConditions[index] === true);\n  };\n\n  // Handle condition checkbox change\n  const handleConditionChange = (subsidyId, conditionIndex, checked) => {\n    setConditionsChecked(prev => ({\n      ...prev,\n      [subsidyId]: {\n        ...prev[subsidyId],\n        [conditionIndex]: checked\n      }\n    }));\n  };\n\n  const checkSubsidies = async () => {\n    setLoading(true);\n    try {\n      const request = {\n        hasSolarPanels: systemConfiguration.selectedEquipment?.solarPanels || false,\n        hasHeatPump: systemConfiguration.selectedEquipment?.heatPump || false,\n        hasBattery: systemConfiguration.selectedEquipment?.batteryStorage || false,\n        houseType: userData.propertyType || userData.houseType,\n        epcRating: userData.epcRating || 'D',\n        regionCode: 'UK',\n        postcode: userData.postcode,\n        solarCapacityKw: systemConfiguration.totalSystemCapacity || 5.0,\n        heatPumpCapacityKw: 8.0, // Estimated average\n        batteryCapacityKwh: 10.0, // Estimated average\n        totalInstallationCost: systemConfiguration.totalInstallationCost || 25000,\n        solarInstallationCost: systemConfiguration.solarInstallationCost || 15000,\n        heatPumpInstallationCost: systemConfiguration.heatPumpInstallationCost || 8000,\n        batteryInstallationCost: systemConfiguration.batteryInstallationCost || 8000\n      };\n\n      console.log('Sending subsidy check request:', request);\n\n      const response = await fetch('http://localhost:8080/api/subsidies/check', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(request)\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        console.log('Subsidy check result:', result);\n        setSubsidies(result.availableSubsidies || []);\n        setShowSubsidies(true);\n      } else {\n        console.error('Error checking subsidies:', response.status);\n        setSubsidies([]);\n        setShowSubsidies(true);\n      }\n    } catch (error) {\n      console.error('Error checking subsidies:', error);\n      setSubsidies([]);\n      setShowSubsidies(true);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const applySubsidy = (subsidy) => {\n    const newApplied = [...appliedSubsidies, subsidy];\n    const newTotal = newApplied.reduce((sum, s) => sum + (s.estimatedAmount || 0), 0);\n    \n    setAppliedSubsidies(newApplied);\n    setTotalSubsidyAmount(newTotal);\n    \n    // Notify parent component about the subsidy application\n    if (onSubsidyApplied) {\n      onSubsidyApplied(newApplied, newTotal);\n    }\n  };\n\n  const removeSubsidy = (subsidyId) => {\n    const newApplied = appliedSubsidies.filter(s => s.subsidyId !== subsidyId);\n    const newTotal = newApplied.reduce((sum, s) => sum + (s.estimatedAmount || 0), 0);\n    \n    setAppliedSubsidies(newApplied);\n    setTotalSubsidyAmount(newTotal);\n    \n    // Notify parent component about the subsidy removal\n    if (onSubsidyApplied) {\n      onSubsidyApplied(newApplied, newTotal);\n    }\n  };\n\n  const isSubsidyApplied = (subsidyId) => {\n    return appliedSubsidies.some(s => s.subsidyId === subsidyId);\n  };\n\n  return (\n    <div className=\"subsidy-checker\">\n      <div className=\"subsidy-checker-header\">\n        <h3>Government Subsidies & Grants</h3>\n        <p>Check for available government support schemes that could reduce your installation costs</p>\n        \n        {appliedSubsidies.length > 0 && (\n          <div className=\"applied-subsidies-summary\">\n            <span className=\"subsidy-badge\">\n              {appliedSubsidies.length} subsidy{appliedSubsidies.length !== 1 ? 'ies' : ''} applied\n            </span>\n            <span className=\"total-subsidy-amount\">\n              Total savings: £{totalSubsidyAmount.toFixed(0)}\n            </span>\n          </div>\n        )}\n      </div>\n\n      <div className=\"subsidy-actions\">\n        <button \n          className=\"check-subsidies-btn\"\n          onClick={checkSubsidies}\n          disabled={loading}\n        >\n          {loading ? (\n            <>\n              <span className=\"loading-spinner\"></span>\n              Checking Available Subsidies...\n            </>\n          ) : (\n            <>\n              Check Available Subsidies\n            </>\n          )}\n        </button>\n      </div>\n\n      {showSubsidies && (\n        <div className=\"subsidies-results\">\n          {subsidies.length === 0 ? (\n            <div className=\"no-subsidies-message\">\n              <h4>No Current Subsidies Available</h4>\n              <p>There are currently no government subsidies available for your configuration. \n                 Check back periodically as new schemes may become available.</p>\n            </div>\n          ) : (\n            <div className=\"subsidies-list\">\n              <h4>Available Subsidies ({subsidies.length})</h4>\n              {subsidies.map(subsidy => (\n                <div \n                  key={subsidy.subsidyId} \n                  className={`subsidy-card ${subsidy.isEligible ? 'eligible' : 'not-eligible'} ${isSubsidyApplied(subsidy.subsidyId) ? 'applied' : ''}`}\n                >\n                  <div className=\"subsidy-header\">\n                    <div className=\"subsidy-title\">\n                      <h5>{subsidy.name}</h5>\n                      <span className={`eligibility-badge ${subsidy.isEligible ? 'eligible' : 'not-eligible'}`}>\n                        {subsidy.isEligible ? '✓ Eligible' : '✗ Not Eligible'}\n                      </span>\n                    </div>\n                    {subsidy.isEligible && subsidy.estimatedAmount && (\n                      <div className=\"subsidy-amount\">\n                        £{subsidy.estimatedAmount.toFixed(0)}\n                      </div>\n                    )}\n                  </div>\n\n                  <div className=\"subsidy-content\">\n                    <p className=\"subsidy-description\">{subsidy.shortDescription}</p>\n                    \n                    {subsidy.isEligible ? (\n                      <div className=\"subsidy-details\">\n                        <div className=\"eligibility-conditions\">\n                          <strong>Please confirm you meet these requirements:</strong>\n                          {getEligibilityConditions(subsidy.name).map((condition, index) => (\n                            <label key={index} className=\"condition-checkbox\">\n                              <input\n                                type=\"checkbox\"\n                                checked={conditionsChecked[subsidy.subsidyId]?.[index] || false}\n                                onChange={(e) => handleConditionChange(subsidy.subsidyId, index, e.target.checked)}\n                              />\n                              <span className=\"condition-text\">{condition}</span>\n                            </label>\n                          ))}\n                        </div>\n                        {subsidy.deadline && (\n                          <p className=\"deadline\">\n                            <strong>Application Deadline:</strong> {new Date(subsidy.deadline).toLocaleDateString()}\n                          </p>\n                        )}\n                      </div>\n                    ) : (\n                      <div className=\"ineligibility-reason\">\n                        <p><strong>Why not eligible:</strong> {subsidy.ineligibilityReason}</p>\n                      </div>\n                    )}\n\n                    <div className=\"subsidy-actions\">\n                      {subsidy.applicationUrl && (\n                        <a \n                          href={subsidy.applicationUrl} \n                          target=\"_blank\" \n                          rel=\"noopener noreferrer\"\n                          className=\"learn-more-btn\"\n                        >\n                          Learn More & Apply\n                        </a>\n                      )}\n                      \n                      {subsidy.isEligible && !isSubsidyApplied(subsidy.subsidyId) && (\n                        <button \n                          className=\"apply-subsidy-btn\"\n                          onClick={() => applySubsidy(subsidy)}\n                          disabled={!areAllConditionsMet(subsidy.subsidyId)}\n                        >\n                          Apply to Calculations\n                        </button>\n                      )}\n                      \n                      {isSubsidyApplied(subsidy.subsidyId) && (\n                        <button \n                          className=\"remove-subsidy-btn\"\n                          onClick={() => removeSubsidy(subsidy.subsidyId)}\n                        >\n                          ✕ Remove from Calculations\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SubsidyChecker; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}