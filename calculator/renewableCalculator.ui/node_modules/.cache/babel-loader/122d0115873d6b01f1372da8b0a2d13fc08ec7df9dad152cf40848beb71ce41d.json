{"ast":null,"code":"import _objectSpread from\"/Users/xuefei/renewables/calculator/renewableCalculator.ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from'react';import{getGovernmentSubsidies}from'../api';import'./SubsidyChecker.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const SubsidyChecker=_ref=>{let{userData,systemConfiguration,onSubsidyApplied}=_ref;const[subsidies,setSubsidies]=useState([]);const[loading,setLoading]=useState(false);const[showSubsidies,setShowSubsidies]=useState(false);const[appliedSubsidies,setAppliedSubsidies]=useState([]);const[totalSubsidyAmount,setTotalSubsidyAmount]=useState(0);const[conditionsChecked,setConditionsChecked]=useState({});// Track which conditions are checked for each subsidy\n// Define eligibility conditions for each subsidy\nconst getEligibilityConditions=subsidyName=>{switch(subsidyName){case'Boiler Upgrade Scheme':return['My property is located in England or Wales','I am replacing an existing heating system (not new build)','I will use an MCS certified installer'];default:return[];}};// Check if all conditions are met for a subsidy\nconst areAllConditionsMet=subsidyId=>{const subsidy=subsidies.find(s=>s.subsidyId===subsidyId);if(!subsidy)return false;const conditions=getEligibilityConditions(subsidy.name);const checkedConditions=conditionsChecked[subsidyId]||{};return conditions.every((_,index)=>checkedConditions[index]===true);};// Handle condition checkbox change\nconst handleConditionChange=(subsidyId,conditionIndex,checked)=>{setConditionsChecked(prev=>_objectSpread(_objectSpread({},prev),{},{[subsidyId]:_objectSpread(_objectSpread({},prev[subsidyId]),{},{[conditionIndex]:checked})}));};const checkSubsidies=async()=>{setLoading(true);try{var _systemConfiguration$,_systemConfiguration$2,_systemConfiguration$3;const request={hasSolarPanels:((_systemConfiguration$=systemConfiguration.selectedEquipment)===null||_systemConfiguration$===void 0?void 0:_systemConfiguration$.solarPanels)||false,hasHeatPump:((_systemConfiguration$2=systemConfiguration.selectedEquipment)===null||_systemConfiguration$2===void 0?void 0:_systemConfiguration$2.heatPump)||false,hasBattery:((_systemConfiguration$3=systemConfiguration.selectedEquipment)===null||_systemConfiguration$3===void 0?void 0:_systemConfiguration$3.batteryStorage)||false,houseType:userData.propertyType||userData.houseType,epcRating:userData.epcRating||'D',regionCode:'UK',postcode:userData.postcode,solarCapacityKw:systemConfiguration.totalSystemCapacity||5.0,heatPumpCapacityKw:8.0,// Estimated average\nbatteryCapacityKwh:10.0,// Estimated average\ntotalInstallationCost:systemConfiguration.totalInstallationCost||25000,solarInstallationCost:systemConfiguration.solarInstallationCost||15000,heatPumpInstallationCost:systemConfiguration.heatPumpInstallationCost||8000,batteryInstallationCost:systemConfiguration.batteryInstallationCost||8000};console.log('Sending subsidy check request:',request);const response=await getGovernmentSubsidies(request);const result=response.data;console.log('Subsidy check result:',result);setSubsidies(result.availableSubsidies||[]);setShowSubsidies(true);}catch(error){console.error('Error checking subsidies:',error);setSubsidies([]);setShowSubsidies(true);}finally{setLoading(false);}};const applySubsidy=subsidy=>{const newApplied=[...appliedSubsidies,subsidy];const newTotal=newApplied.reduce((sum,s)=>sum+(s.estimatedAmount||0),0);setAppliedSubsidies(newApplied);setTotalSubsidyAmount(newTotal);// Notify parent component about the subsidy application\nif(onSubsidyApplied){onSubsidyApplied(newApplied,newTotal);}};const removeSubsidy=subsidyId=>{const newApplied=appliedSubsidies.filter(s=>s.subsidyId!==subsidyId);const newTotal=newApplied.reduce((sum,s)=>sum+(s.estimatedAmount||0),0);setAppliedSubsidies(newApplied);setTotalSubsidyAmount(newTotal);// Notify parent component about the subsidy removal\nif(onSubsidyApplied){onSubsidyApplied(newApplied,newTotal);}};const isSubsidyApplied=subsidyId=>{return appliedSubsidies.some(s=>s.subsidyId===subsidyId);};return/*#__PURE__*/_jsxs(\"div\",{className:\"subsidy-checker\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"subsidy-checker-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Government Subsidies & Grants\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Check for available government support schemes that could reduce your installation costs\"}),appliedSubsidies.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"applied-subsidies-summary\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"subsidy-badge\",children:[appliedSubsidies.length,\" subsidy\",appliedSubsidies.length!==1?'ies':'',\" applied\"]}),/*#__PURE__*/_jsxs(\"span\",{className:\"total-subsidy-amount\",children:[\"Total savings: \\xA3\",totalSubsidyAmount.toFixed(0)]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"subsidy-actions\",children:/*#__PURE__*/_jsx(\"button\",{className:\"check-subsidies-btn\",onClick:checkSubsidies,disabled:loading,children:loading?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{className:\"loading-spinner\"}),\"Checking Available Subsidies...\"]}):/*#__PURE__*/_jsx(_Fragment,{children:\"Check Available Subsidies\"})})}),showSubsidies&&/*#__PURE__*/_jsx(\"div\",{className:\"subsidies-results\",children:subsidies.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"no-subsidies-message\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"No Current Subsidies Available\"}),/*#__PURE__*/_jsx(\"p\",{children:\"There are currently no government subsidies available for your configuration. Check back periodically as new schemes may become available.\"})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"subsidies-list\",children:[/*#__PURE__*/_jsxs(\"h4\",{children:[\"Available Subsidies (\",subsidies.length,\")\"]}),subsidies.map(subsidy=>/*#__PURE__*/_jsxs(\"div\",{className:\"subsidy-card \".concat(subsidy.isEligible?'eligible':'not-eligible',\" \").concat(isSubsidyApplied(subsidy.subsidyId)?'applied':''),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"subsidy-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"subsidy-title\",children:[/*#__PURE__*/_jsx(\"h5\",{children:subsidy.name}),/*#__PURE__*/_jsx(\"span\",{className:\"eligibility-badge \".concat(subsidy.isEligible?'eligible':'not-eligible'),children:subsidy.isEligible?'✓ Eligible':'✗ Not Eligible'})]}),subsidy.isEligible&&subsidy.estimatedAmount&&/*#__PURE__*/_jsxs(\"div\",{className:\"subsidy-amount\",children:[\"\\xA3\",subsidy.estimatedAmount.toFixed(0)]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"subsidy-content\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"subsidy-description\",children:subsidy.shortDescription}),subsidy.isEligible?/*#__PURE__*/_jsxs(\"div\",{className:\"subsidy-details\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"eligibility-conditions\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Please confirm you meet these requirements:\"}),getEligibilityConditions(subsidy.name).map((condition,index)=>{var _conditionsChecked$su;return/*#__PURE__*/_jsxs(\"label\",{className:\"condition-checkbox\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:((_conditionsChecked$su=conditionsChecked[subsidy.subsidyId])===null||_conditionsChecked$su===void 0?void 0:_conditionsChecked$su[index])||false,onChange:e=>handleConditionChange(subsidy.subsidyId,index,e.target.checked)}),/*#__PURE__*/_jsx(\"span\",{className:\"condition-text\",children:condition})]},index);})]}),subsidy.deadline&&/*#__PURE__*/_jsxs(\"p\",{className:\"deadline\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Application Deadline:\"}),\" \",new Date(subsidy.deadline).toLocaleDateString()]})]}):/*#__PURE__*/_jsx(\"div\",{className:\"ineligibility-reason\",children:/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Why not eligible:\"}),\" \",subsidy.ineligibilityReason]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"subsidy-actions\",children:[subsidy.applicationUrl&&/*#__PURE__*/_jsx(\"a\",{href:subsidy.applicationUrl,target:\"_blank\",rel:\"noopener noreferrer\",className:\"learn-more-btn\",children:\"Learn More & Apply\"}),subsidy.isEligible&&!isSubsidyApplied(subsidy.subsidyId)&&/*#__PURE__*/_jsx(\"button\",{className:\"apply-subsidy-btn\",onClick:()=>applySubsidy(subsidy),disabled:!areAllConditionsMet(subsidy.subsidyId),children:\"Apply to Calculations\"}),isSubsidyApplied(subsidy.subsidyId)&&/*#__PURE__*/_jsx(\"button\",{className:\"remove-subsidy-btn\",onClick:()=>removeSubsidy(subsidy.subsidyId),children:\"\\u2715 Remove from Calculations\"})]})]})]},subsidy.subsidyId))]})})]});};export default SubsidyChecker;","map":{"version":3,"names":["React","useState","getGovernmentSubsidies","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","SubsidyChecker","_ref","userData","systemConfiguration","onSubsidyApplied","subsidies","setSubsidies","loading","setLoading","showSubsidies","setShowSubsidies","appliedSubsidies","setAppliedSubsidies","totalSubsidyAmount","setTotalSubsidyAmount","conditionsChecked","setConditionsChecked","getEligibilityConditions","subsidyName","areAllConditionsMet","subsidyId","subsidy","find","s","conditions","name","checkedConditions","every","_","index","handleConditionChange","conditionIndex","checked","prev","_objectSpread","checkSubsidies","_systemConfiguration$","_systemConfiguration$2","_systemConfiguration$3","request","hasSolarPanels","selectedEquipment","solarPanels","hasHeatPump","heatPump","hasBattery","batteryStorage","houseType","propertyType","epcRating","regionCode","postcode","solarCapacityKw","totalSystemCapacity","heatPumpCapacityKw","batteryCapacityKwh","totalInstallationCost","solarInstallationCost","heatPumpInstallationCost","batteryInstallationCost","console","log","response","result","data","availableSubsidies","error","applySubsidy","newApplied","newTotal","reduce","sum","estimatedAmount","removeSubsidy","filter","isSubsidyApplied","some","className","children","length","toFixed","onClick","disabled","map","concat","isEligible","shortDescription","condition","_conditionsChecked$su","type","onChange","e","target","deadline","Date","toLocaleDateString","ineligibilityReason","applicationUrl","href","rel"],"sources":["/Users/xuefei/renewables/calculator/renewableCalculator.ui/src/components/SubsidyChecker.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { getGovernmentSubsidies } from '../api';\nimport './SubsidyChecker.css';\n\nconst SubsidyChecker = ({ userData, systemConfiguration, onSubsidyApplied }) => {\n  const [subsidies, setSubsidies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [showSubsidies, setShowSubsidies] = useState(false);\n  const [appliedSubsidies, setAppliedSubsidies] = useState([]);\n  const [totalSubsidyAmount, setTotalSubsidyAmount] = useState(0);\n  const [conditionsChecked, setConditionsChecked] = useState({}); // Track which conditions are checked for each subsidy\n\n  // Define eligibility conditions for each subsidy\n  const getEligibilityConditions = (subsidyName) => {\n    switch (subsidyName) {\n      case 'Boiler Upgrade Scheme':\n        return [\n          'My property is located in England or Wales',\n          'I am replacing an existing heating system (not new build)',\n          'I will use an MCS certified installer'\n        ];\n      default:\n        return [];\n    }\n  };\n\n  // Check if all conditions are met for a subsidy\n  const areAllConditionsMet = (subsidyId) => {\n    const subsidy = subsidies.find(s => s.subsidyId === subsidyId);\n    if (!subsidy) return false;\n    \n    const conditions = getEligibilityConditions(subsidy.name);\n    const checkedConditions = conditionsChecked[subsidyId] || {};\n    \n    return conditions.every((_, index) => checkedConditions[index] === true);\n  };\n\n  // Handle condition checkbox change\n  const handleConditionChange = (subsidyId, conditionIndex, checked) => {\n    setConditionsChecked(prev => ({\n      ...prev,\n      [subsidyId]: {\n        ...prev[subsidyId],\n        [conditionIndex]: checked\n      }\n    }));\n  };\n\n  const checkSubsidies = async () => {\n    setLoading(true);\n    try {\n      const request = {\n        hasSolarPanels: systemConfiguration.selectedEquipment?.solarPanels || false,\n        hasHeatPump: systemConfiguration.selectedEquipment?.heatPump || false,\n        hasBattery: systemConfiguration.selectedEquipment?.batteryStorage || false,\n        houseType: userData.propertyType || userData.houseType,\n        epcRating: userData.epcRating || 'D',\n        regionCode: 'UK',\n        postcode: userData.postcode,\n        solarCapacityKw: systemConfiguration.totalSystemCapacity || 5.0,\n        heatPumpCapacityKw: 8.0, // Estimated average\n        batteryCapacityKwh: 10.0, // Estimated average\n        totalInstallationCost: systemConfiguration.totalInstallationCost || 25000,\n        solarInstallationCost: systemConfiguration.solarInstallationCost || 15000,\n        heatPumpInstallationCost: systemConfiguration.heatPumpInstallationCost || 8000,\n        batteryInstallationCost: systemConfiguration.batteryInstallationCost || 8000\n      };\n\n      console.log('Sending subsidy check request:', request);\n\n      const response = await getGovernmentSubsidies(request);\n      const result = response.data;\n      console.log('Subsidy check result:', result);\n      setSubsidies(result.availableSubsidies || []);\n      setShowSubsidies(true);\n    } catch (error) {\n      console.error('Error checking subsidies:', error);\n      setSubsidies([]);\n      setShowSubsidies(true);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const applySubsidy = (subsidy) => {\n    const newApplied = [...appliedSubsidies, subsidy];\n    const newTotal = newApplied.reduce((sum, s) => sum + (s.estimatedAmount || 0), 0);\n    \n    setAppliedSubsidies(newApplied);\n    setTotalSubsidyAmount(newTotal);\n    \n    // Notify parent component about the subsidy application\n    if (onSubsidyApplied) {\n      onSubsidyApplied(newApplied, newTotal);\n    }\n  };\n\n  const removeSubsidy = (subsidyId) => {\n    const newApplied = appliedSubsidies.filter(s => s.subsidyId !== subsidyId);\n    const newTotal = newApplied.reduce((sum, s) => sum + (s.estimatedAmount || 0), 0);\n    \n    setAppliedSubsidies(newApplied);\n    setTotalSubsidyAmount(newTotal);\n    \n    // Notify parent component about the subsidy removal\n    if (onSubsidyApplied) {\n      onSubsidyApplied(newApplied, newTotal);\n    }\n  };\n\n  const isSubsidyApplied = (subsidyId) => {\n    return appliedSubsidies.some(s => s.subsidyId === subsidyId);\n  };\n\n  return (\n    <div className=\"subsidy-checker\">\n      <div className=\"subsidy-checker-header\">\n        <h3>Government Subsidies & Grants</h3>\n        <p>Check for available government support schemes that could reduce your installation costs</p>\n        \n        {appliedSubsidies.length > 0 && (\n          <div className=\"applied-subsidies-summary\">\n            <span className=\"subsidy-badge\">\n              {appliedSubsidies.length} subsidy{appliedSubsidies.length !== 1 ? 'ies' : ''} applied\n            </span>\n            <span className=\"total-subsidy-amount\">\n              Total savings: £{totalSubsidyAmount.toFixed(0)}\n            </span>\n          </div>\n        )}\n      </div>\n\n      <div className=\"subsidy-actions\">\n        <button \n          className=\"check-subsidies-btn\"\n          onClick={checkSubsidies}\n          disabled={loading}\n        >\n          {loading ? (\n            <>\n              <span className=\"loading-spinner\"></span>\n              Checking Available Subsidies...\n            </>\n          ) : (\n            <>\n              Check Available Subsidies\n            </>\n          )}\n        </button>\n      </div>\n\n      {showSubsidies && (\n        <div className=\"subsidies-results\">\n          {subsidies.length === 0 ? (\n            <div className=\"no-subsidies-message\">\n              <h4>No Current Subsidies Available</h4>\n              <p>There are currently no government subsidies available for your configuration. \n                 Check back periodically as new schemes may become available.</p>\n            </div>\n          ) : (\n            <div className=\"subsidies-list\">\n              <h4>Available Subsidies ({subsidies.length})</h4>\n              {subsidies.map(subsidy => (\n                <div \n                  key={subsidy.subsidyId} \n                  className={`subsidy-card ${subsidy.isEligible ? 'eligible' : 'not-eligible'} ${isSubsidyApplied(subsidy.subsidyId) ? 'applied' : ''}`}\n                >\n                  <div className=\"subsidy-header\">\n                    <div className=\"subsidy-title\">\n                      <h5>{subsidy.name}</h5>\n                      <span className={`eligibility-badge ${subsidy.isEligible ? 'eligible' : 'not-eligible'}`}>\n                        {subsidy.isEligible ? '✓ Eligible' : '✗ Not Eligible'}\n                      </span>\n                    </div>\n                    {subsidy.isEligible && subsidy.estimatedAmount && (\n                      <div className=\"subsidy-amount\">\n                        £{subsidy.estimatedAmount.toFixed(0)}\n                      </div>\n                    )}\n                  </div>\n\n                  <div className=\"subsidy-content\">\n                    <p className=\"subsidy-description\">{subsidy.shortDescription}</p>\n                    \n                    {subsidy.isEligible ? (\n                      <div className=\"subsidy-details\">\n                        <div className=\"eligibility-conditions\">\n                          <strong>Please confirm you meet these requirements:</strong>\n                          {getEligibilityConditions(subsidy.name).map((condition, index) => (\n                            <label key={index} className=\"condition-checkbox\">\n                              <input\n                                type=\"checkbox\"\n                                checked={conditionsChecked[subsidy.subsidyId]?.[index] || false}\n                                onChange={(e) => handleConditionChange(subsidy.subsidyId, index, e.target.checked)}\n                              />\n                              <span className=\"condition-text\">{condition}</span>\n                            </label>\n                          ))}\n                        </div>\n                        {subsidy.deadline && (\n                          <p className=\"deadline\">\n                            <strong>Application Deadline:</strong> {new Date(subsidy.deadline).toLocaleDateString()}\n                          </p>\n                        )}\n                      </div>\n                    ) : (\n                      <div className=\"ineligibility-reason\">\n                        <p><strong>Why not eligible:</strong> {subsidy.ineligibilityReason}</p>\n                      </div>\n                    )}\n\n                    <div className=\"subsidy-actions\">\n                      {subsidy.applicationUrl && (\n                        <a \n                          href={subsidy.applicationUrl} \n                          target=\"_blank\" \n                          rel=\"noopener noreferrer\"\n                          className=\"learn-more-btn\"\n                        >\n                          Learn More & Apply\n                        </a>\n                      )}\n                      \n                      {subsidy.isEligible && !isSubsidyApplied(subsidy.subsidyId) && (\n                        <button \n                          className=\"apply-subsidy-btn\"\n                          onClick={() => applySubsidy(subsidy)}\n                          disabled={!areAllConditionsMet(subsidy.subsidyId)}\n                        >\n                          Apply to Calculations\n                        </button>\n                      )}\n                      \n                      {isSubsidyApplied(subsidy.subsidyId) && (\n                        <button \n                          className=\"remove-subsidy-btn\"\n                          onClick={() => removeSubsidy(subsidy.subsidyId)}\n                        >\n                          ✕ Remove from Calculations\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SubsidyChecker; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}