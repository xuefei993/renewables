{"ast":null,"code":"var _jsxFileName = \"/Users/xuefei/Desktop/calculator00/calculator/renewableCalculator.ui/src/components/steps/UpgradePlan.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpgradePlan = ({\n  data,\n  onDataChange,\n  onNext,\n  onBack\n}) => {\n  _s();\n  // Initialize plans data structure\n  const initializePlans = () => {\n    if (data.upgradePlans && Array.isArray(data.upgradePlans)) {\n      return data.upgradePlans;\n    } else if (data.selectedProducts || data.productConfigurations) {\n      // Convert old format to new format\n      return [{\n        id: 1,\n        name: \"Plan 1\",\n        selectedProducts: data.selectedProducts || [],\n        productConfigurations: data.productConfigurations || {}\n      }];\n    } else {\n      return [{\n        id: 1,\n        name: \"Plan 1\",\n        selectedProducts: [],\n        productConfigurations: {}\n      }];\n    }\n  };\n  const [plans, setPlans] = useState(initializePlans());\n  const [currentPlanIndex, setCurrentPlanIndex] = useState(0);\n  const currentPlan = plans[currentPlanIndex] || {\n    selectedProducts: [],\n    productConfigurations: {}\n  };\n\n  // Available products\n  const availableProducts = [{\n    value: 'solar-panels',\n    label: 'Solar Panels'\n  }, {\n    value: 'heat-pump',\n    label: 'Heat Pump'\n  }, {\n    value: 'battery-storage',\n    label: 'Battery Storage'\n  }];\n\n  // Pre-defined models for each product type\n  const productModels = {\n    'solar-panels': [{\n      id: 'sp1',\n      brand: 'SunPower',\n      model: 'Maxeon 3-400W',\n      capacity: '400W',\n      price: '£300'\n    }, {\n      id: 'sp2',\n      brand: 'Tesla',\n      model: 'Solar Roof Tiles',\n      capacity: '340W',\n      price: '£280'\n    }, {\n      id: 'sp3',\n      brand: 'LG',\n      model: 'NeON R-365W',\n      capacity: '365W',\n      price: '£250'\n    }, {\n      id: 'sp4',\n      brand: 'Panasonic',\n      model: 'HIT-330W',\n      capacity: '330W',\n      price: '£220'\n    }, {\n      id: 'sp5',\n      brand: 'JinkoSolar',\n      model: 'Tiger Pro-540W',\n      capacity: '540W',\n      price: '£180'\n    }],\n    'heat-pump': [{\n      id: 'hp1',\n      brand: 'Daikin',\n      model: 'Altherma 3-11kW',\n      capacity: '11kW',\n      price: '£8,500'\n    }, {\n      id: 'hp2',\n      brand: 'Mitsubishi',\n      model: 'Ecodan-14kW',\n      capacity: '14kW',\n      price: '£9,200'\n    }, {\n      id: 'hp3',\n      brand: 'Vaillant',\n      model: 'arotherm plus-12kW',\n      capacity: '12kW',\n      price: '£8,800'\n    }, {\n      id: 'hp4',\n      brand: 'Samsung',\n      model: 'EHS-16kW',\n      capacity: '16kW',\n      price: '£10,500'\n    }, {\n      id: 'hp5',\n      brand: 'Worcester Bosch',\n      model: 'Greenstar-13kW',\n      capacity: '13kW',\n      price: '£9,000'\n    }],\n    'battery-storage': [{\n      id: 'bs1',\n      brand: 'Tesla',\n      model: 'Powerwall 2',\n      capacity: '13.5kWh',\n      price: '£7,500'\n    }, {\n      id: 'bs2',\n      brand: 'LG Chem',\n      model: 'RESU-10kWh',\n      capacity: '10kWh',\n      price: '£6,200'\n    }, {\n      id: 'bs3',\n      brand: 'BYD',\n      model: 'Battery-Box Premium-13.8kWh',\n      capacity: '13.8kWh',\n      price: '£7,800'\n    }, {\n      id: 'bs4',\n      brand: 'Sonnen',\n      model: 'batterie eco-15kWh',\n      capacity: '15kWh',\n      price: '£8,500'\n    }, {\n      id: 'bs5',\n      brand: 'Pylontech',\n      model: 'US3000C-7.2kWh',\n      capacity: '7.2kWh',\n      price: '£4,800'\n    }]\n  };\n\n  // Update plans data and notify parent\n  const updatePlansData = newPlans => {\n    var _newPlans$currentPlan, _newPlans$currentPlan2;\n    setPlans(newPlans);\n    onDataChange({\n      upgradePlans: newPlans,\n      // Keep backward compatibility\n      selectedProducts: ((_newPlans$currentPlan = newPlans[currentPlanIndex]) === null || _newPlans$currentPlan === void 0 ? void 0 : _newPlans$currentPlan.selectedProducts) || [],\n      productConfigurations: ((_newPlans$currentPlan2 = newPlans[currentPlanIndex]) === null || _newPlans$currentPlan2 === void 0 ? void 0 : _newPlans$currentPlan2.productConfigurations) || {}\n    });\n  };\n  const handleProductSelection = productValue => {\n    const updatedPlans = [...plans];\n    const plan = updatedPlans[currentPlanIndex];\n    const currentProducts = plan.selectedProducts || [];\n    let updatedProducts;\n    if (currentProducts.includes(productValue)) {\n      // Remove product\n      updatedProducts = currentProducts.filter(p => p !== productValue);\n      // Remove its configuration\n      const updatedConfigurations = {\n        ...(plan.productConfigurations || {})\n      };\n      delete updatedConfigurations[productValue];\n      plan.selectedProducts = updatedProducts;\n      plan.productConfigurations = updatedConfigurations;\n    } else {\n      // Add product\n      updatedProducts = [...currentProducts, productValue];\n      plan.selectedProducts = updatedProducts;\n    }\n    updatePlansData(updatedPlans);\n  };\n  const handleConfigurationChange = (productType, field, value) => {\n    var _plan$productConfigur;\n    const updatedPlans = [...plans];\n    const plan = updatedPlans[currentPlanIndex];\n    const updatedConfigurations = {\n      ...(plan.productConfigurations || {}),\n      [productType]: {\n        ...(((_plan$productConfigur = plan.productConfigurations) === null || _plan$productConfigur === void 0 ? void 0 : _plan$productConfigur[productType]) || {}),\n        [field]: value\n      }\n    };\n    plan.productConfigurations = updatedConfigurations;\n    updatePlansData(updatedPlans);\n  };\n  const handleModelSelection = (productType, selectedModel) => {\n    if (selectedModel === 'system-recommendation') {\n      // System recommendation\n      const recommendations = getSystemRecommendation(productType);\n      handleConfigurationChange(productType, 'selectionType', 'system-recommendation');\n      handleConfigurationChange(productType, 'recommendedModel', recommendations);\n    } else if (selectedModel === 'custom') {\n      // Custom model\n      handleConfigurationChange(productType, 'selectionType', 'custom');\n    } else if (selectedModel) {\n      // Pre-defined model\n      const models = productModels[productType];\n      const model = models.find(m => m.id === selectedModel);\n      if (model) {\n        handleConfigurationChange(productType, 'selectionType', 'predefined');\n        handleConfigurationChange(productType, 'selectedModel', model);\n      }\n    }\n  };\n  const getSystemRecommendation = productType => {\n    // Simple recommendation logic based on house data\n    const houseType = data.houseType;\n    const bedrooms = data.bedrooms;\n    const monthlyElectricityBill = data.monthlyElectricityBill;\n    switch (productType) {\n      case 'solar-panels':\n        if (monthlyElectricityBill === '300+' || monthlyElectricityBill === '200-300') {\n          return productModels['solar-panels'][0]; // High consumption - SunPower\n        } else if (monthlyElectricityBill === '150-200' || monthlyElectricityBill === '100-150') {\n          return productModels['solar-panels'][2]; // Medium consumption - LG\n        } else {\n          return productModels['solar-panels'][4]; // Low consumption - JinkoSolar\n        }\n      case 'heat-pump':\n        if (houseType === 'detached' || bedrooms >= 4) {\n          return productModels['heat-pump'][1]; // Large house - Mitsubishi 14kW\n        } else if (houseType === 'semi-detached' || bedrooms >= 3) {\n          return productModels['heat-pump'][2]; // Medium house - Vaillant 12kW\n        } else {\n          return productModels['heat-pump'][0]; // Small house - Daikin 11kW\n        }\n      case 'battery-storage':\n        if (monthlyElectricityBill === '300+' || monthlyElectricityBill === '200-300') {\n          return productModels['battery-storage'][3]; // High usage - Sonnen 15kWh\n        } else if (monthlyElectricityBill === '150-200' || monthlyElectricityBill === '100-150') {\n          return productModels['battery-storage'][0]; // Medium usage - Tesla Powerwall\n        } else {\n          return productModels['battery-storage'][1]; // Low usage - LG Chem 10kWh\n        }\n      default:\n        return productModels[productType][0];\n    }\n  };\n  const handleAddPlan = () => {\n    const newPlan = {\n      id: plans.length + 1,\n      name: `Plan ${plans.length + 1}`,\n      selectedProducts: [],\n      productConfigurations: {}\n    };\n    const updatedPlans = [...plans, newPlan];\n    setCurrentPlanIndex(updatedPlans.length - 1);\n    updatePlansData(updatedPlans);\n  };\n  const handlePlanNameChange = (planIndex, newName) => {\n    const updatedPlans = [...plans];\n    updatedPlans[planIndex].name = newName;\n    updatePlansData(updatedPlans);\n  };\n  const handleRemovePlan = planIndex => {\n    if (plans.length > 1) {\n      const updatedPlans = plans.filter((_, index) => index !== planIndex);\n      // Update IDs to maintain sequence\n      updatedPlans.forEach((plan, index) => {\n        plan.id = index + 1;\n      });\n\n      // Adjust current plan index\n      if (currentPlanIndex >= updatedPlans.length) {\n        setCurrentPlanIndex(updatedPlans.length - 1);\n      } else if (currentPlanIndex > planIndex) {\n        setCurrentPlanIndex(currentPlanIndex - 1);\n      }\n      updatePlansData(updatedPlans);\n    }\n  };\n  const handleNext = () => {\n    const hasValidPlan = plans.some(plan => Array.isArray(plan.selectedProducts) && plan.selectedProducts.length > 0);\n    if (hasValidPlan) {\n      onNext();\n    }\n  };\n  const isFormValid = plans.some(plan => Array.isArray(plan.selectedProducts) && plan.selectedProducts.length > 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"step-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"step-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Upgrade Plan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Create and compare different renewable energy configurations to find the best solution for your needs.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"plan-selector\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plan-tabs\",\n        children: plans.map((plan, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `plan-tab ${index === currentPlanIndex ? 'active' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: plan.name,\n            onChange: e => handlePlanNameChange(index, e.target.value),\n            className: \"plan-name-input\",\n            onClick: () => setCurrentPlanIndex(index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this), plans.length > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"remove-plan-btn\",\n            onClick: () => handleRemovePlan(index),\n            title: \"Remove this plan\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 17\n          }, this), index !== currentPlanIndex && /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"switch-plan-btn\",\n            onClick: () => setCurrentPlanIndex(index),\n            children: \"Switch to this plan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 17\n          }, this)]\n        }, plan.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-outline add-plan-btn\",\n        onClick: handleAddPlan,\n        children: \"Add Another Plan to Compare\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"current-plan-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plan-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Configuring: \", currentPlan.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), plans.length > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"plan-summary\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Plan \", currentPlanIndex + 1, \" of \", plans.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Products to Install\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"Select all products you want to add to this renewable energy plan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"checkbox-group\",\n          children: availableProducts.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"checkbox-item\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"checkbox-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: Array.isArray(currentPlan.selectedProducts) && currentPlan.selectedProducts.includes(product.value),\n                onChange: () => handleProductSelection(product.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"checkmark\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 19\n              }, this), product.label]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 17\n            }, this)\n          }, product.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), Array.isArray(currentPlan.selectedProducts) && currentPlan.selectedProducts.map(productType => {\n        var _config$selectedModel;\n        const product = availableProducts.find(p => p.value === productType);\n        const config = currentPlan.productConfigurations && currentPlan.productConfigurations[productType] || {};\n        const models = productModels[productType] || [];\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"product-configuration\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [product.label, \" Configuration\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `${productType}-selection-${currentPlanIndex}`,\n              children: \"Choose Model\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: `${productType}-selection-${currentPlanIndex}`,\n              value: config.selectionType === 'predefined' ? (_config$selectedModel = config.selectedModel) === null || _config$selectedModel === void 0 ? void 0 : _config$selectedModel.id : config.selectionType || '',\n              onChange: e => handleModelSelection(productType, e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select an option\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n                label: \"Pre-defined Models\",\n                children: models.map((model, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: model.id,\n                  children: [model.brand, \" \", model.model, \" - \", model.capacity, \" (\", model.price, \")\"]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n                label: \"Other Options\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"system-recommendation\",\n                  children: \"System Recommendation\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"custom\",\n                  children: \"Add Custom Model\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 15\n          }, this), config.selectionType === 'system-recommendation' && config.recommendedModel && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recommendation-display\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"System Recommendation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"recommended-model\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"model-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"model-name\",\n                  children: [config.recommendedModel.brand, \" \", config.recommendedModel.model]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"model-specs\",\n                  children: [config.recommendedModel.capacity, \" - \", config.recommendedModel.price]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"recommendation-reason\",\n                children: \"Recommended based on your house type, energy consumption, and typical requirements.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 17\n          }, this), config.selectionType === 'custom' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom-model-inputs\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Custom Model Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"device-input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Brand\",\n                value: config.customBrand || '',\n                onChange: e => handleConfigurationChange(productType, 'customBrand', e.target.value),\n                className: \"device-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Model\",\n                value: config.customModel || '',\n                onChange: e => handleConfigurationChange(productType, 'customModel', e.target.value),\n                className: \"device-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"device-input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Capacity/Size\",\n                value: config.customCapacity || '',\n                onChange: e => handleConfigurationChange(productType, 'customCapacity', e.target.value),\n                className: \"device-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Estimated Price\",\n                value: config.customPrice || '',\n                onChange: e => handleConfigurationChange(productType, 'customPrice', e.target.value),\n                className: \"device-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 17\n          }, this), (config.selectionType === 'predefined' || config.selectionType === 'system-recommendation' || config.selectionType === 'custom') && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `${productType}-quantity-${currentPlanIndex}`,\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: `${productType}-quantity-${currentPlanIndex}`,\n              value: config.quantity || '1',\n              onChange: e => handleConfigurationChange(productType, 'quantity', e.target.value),\n              children: [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(num => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: num,\n                children: num\n              }, num, false, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 23\n              }, this)), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"custom\",\n                children: \"Custom quantity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 19\n            }, this), config.quantity === 'custom' && /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              placeholder: \"Enter quantity\",\n              value: config.customQuantity || '',\n              onChange: e => handleConfigurationChange(productType, 'customQuantity', e.target.value),\n              className: \"device-input\",\n              style: {\n                marginTop: '0.5rem'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 17\n          }, this)]\n        }, productType, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }, this);\n      }), (!Array.isArray(currentPlan.selectedProducts) || currentPlan.selectedProducts.length === 0) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-products-selected\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please select at least one product for this plan to continue.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this), plans.length > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"plans-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Plans Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-grid\",\n        children: plans.map((plan, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `plan-summary-card ${index === currentPlanIndex ? 'current' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: plan.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"plan-products\",\n            children: plan.selectedProducts && plan.selectedProducts.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: plan.selectedProducts.map(product => {\n                var _availableProducts$fi;\n                const productLabel = ((_availableProducts$fi = availableProducts.find(p => p.value === product)) === null || _availableProducts$fi === void 0 ? void 0 : _availableProducts$fi.label) || product;\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: productLabel\n                }, product, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 442,\n                  columnNumber: 32\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"no-products\",\n              children: \"No products selected\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 17\n          }, this)]\n        }, plan.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary\",\n        onClick: onBack,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: `btn btn-primary ${!isFormValid ? 'disabled' : ''}`,\n        onClick: handleNext,\n        disabled: !isFormValid,\n        children: [\"Next: Tariffs \", plans.length > 1 ? `(${plans.filter(p => p.selectedProducts && p.selectedProducts.length > 0).length} plans configured)` : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 225,\n    columnNumber: 5\n  }, this);\n};\n_s(UpgradePlan, \"h6wG7UD8DAU255CSikdPNU4b2KY=\");\n_c = UpgradePlan;\nexport default UpgradePlan;\nvar _c;\n$RefreshReg$(_c, \"UpgradePlan\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UpgradePlan","data","onDataChange","onNext","onBack","_s","initializePlans","upgradePlans","Array","isArray","selectedProducts","productConfigurations","id","name","plans","setPlans","currentPlanIndex","setCurrentPlanIndex","currentPlan","availableProducts","value","label","productModels","brand","model","capacity","price","updatePlansData","newPlans","_newPlans$currentPlan","_newPlans$currentPlan2","handleProductSelection","productValue","updatedPlans","plan","currentProducts","updatedProducts","includes","filter","p","updatedConfigurations","handleConfigurationChange","productType","field","_plan$productConfigur","handleModelSelection","selectedModel","recommendations","getSystemRecommendation","models","find","m","houseType","bedrooms","monthlyElectricityBill","handleAddPlan","newPlan","length","handlePlanNameChange","planIndex","newName","handleRemovePlan","_","index","forEach","handleNext","hasValidPlan","some","isFormValid","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","type","onChange","e","target","onClick","title","product","checked","_config$selectedModel","config","htmlFor","selectionType","recommendedModel","placeholder","customBrand","customModel","customCapacity","customPrice","quantity","num","customQuantity","style","marginTop","_availableProducts$fi","productLabel","disabled","_c","$RefreshReg$"],"sources":["/Users/xuefei/Desktop/calculator00/calculator/renewableCalculator.ui/src/components/steps/UpgradePlan.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst UpgradePlan = ({ data, onDataChange, onNext, onBack }) => {\n  // Initialize plans data structure\n  const initializePlans = () => {\n    if (data.upgradePlans && Array.isArray(data.upgradePlans)) {\n      return data.upgradePlans;\n    } else if (data.selectedProducts || data.productConfigurations) {\n      // Convert old format to new format\n      return [{\n        id: 1,\n        name: \"Plan 1\",\n        selectedProducts: data.selectedProducts || [],\n        productConfigurations: data.productConfigurations || {}\n      }];\n    } else {\n      return [{\n        id: 1,\n        name: \"Plan 1\",\n        selectedProducts: [],\n        productConfigurations: {}\n      }];\n    }\n  };\n\n  const [plans, setPlans] = useState(initializePlans());\n  const [currentPlanIndex, setCurrentPlanIndex] = useState(0);\n\n  const currentPlan = plans[currentPlanIndex] || { selectedProducts: [], productConfigurations: {} };\n\n  // Available products\n  const availableProducts = [\n    { value: 'solar-panels', label: 'Solar Panels' },\n    { value: 'heat-pump', label: 'Heat Pump' },\n    { value: 'battery-storage', label: 'Battery Storage' }\n  ];\n\n  // Pre-defined models for each product type\n  const productModels = {\n    'solar-panels': [\n      { id: 'sp1', brand: 'SunPower', model: 'Maxeon 3-400W', capacity: '400W', price: '£300' },\n      { id: 'sp2', brand: 'Tesla', model: 'Solar Roof Tiles', capacity: '340W', price: '£280' },\n      { id: 'sp3', brand: 'LG', model: 'NeON R-365W', capacity: '365W', price: '£250' },\n      { id: 'sp4', brand: 'Panasonic', model: 'HIT-330W', capacity: '330W', price: '£220' },\n      { id: 'sp5', brand: 'JinkoSolar', model: 'Tiger Pro-540W', capacity: '540W', price: '£180' }\n    ],\n    'heat-pump': [\n      { id: 'hp1', brand: 'Daikin', model: 'Altherma 3-11kW', capacity: '11kW', price: '£8,500' },\n      { id: 'hp2', brand: 'Mitsubishi', model: 'Ecodan-14kW', capacity: '14kW', price: '£9,200' },\n      { id: 'hp3', brand: 'Vaillant', model: 'arotherm plus-12kW', capacity: '12kW', price: '£8,800' },\n      { id: 'hp4', brand: 'Samsung', model: 'EHS-16kW', capacity: '16kW', price: '£10,500' },\n      { id: 'hp5', brand: 'Worcester Bosch', model: 'Greenstar-13kW', capacity: '13kW', price: '£9,000' }\n    ],\n    'battery-storage': [\n      { id: 'bs1', brand: 'Tesla', model: 'Powerwall 2', capacity: '13.5kWh', price: '£7,500' },\n      { id: 'bs2', brand: 'LG Chem', model: 'RESU-10kWh', capacity: '10kWh', price: '£6,200' },\n      { id: 'bs3', brand: 'BYD', model: 'Battery-Box Premium-13.8kWh', capacity: '13.8kWh', price: '£7,800' },\n      { id: 'bs4', brand: 'Sonnen', model: 'batterie eco-15kWh', capacity: '15kWh', price: '£8,500' },\n      { id: 'bs5', brand: 'Pylontech', model: 'US3000C-7.2kWh', capacity: '7.2kWh', price: '£4,800' }\n    ]\n  };\n\n  // Update plans data and notify parent\n  const updatePlansData = (newPlans) => {\n    setPlans(newPlans);\n    onDataChange({ \n      upgradePlans: newPlans,\n      // Keep backward compatibility\n      selectedProducts: newPlans[currentPlanIndex]?.selectedProducts || [],\n      productConfigurations: newPlans[currentPlanIndex]?.productConfigurations || {}\n    });\n  };\n\n  const handleProductSelection = (productValue) => {\n    const updatedPlans = [...plans];\n    const plan = updatedPlans[currentPlanIndex];\n    const currentProducts = plan.selectedProducts || [];\n    \n    let updatedProducts;\n    \n    if (currentProducts.includes(productValue)) {\n      // Remove product\n      updatedProducts = currentProducts.filter(p => p !== productValue);\n      // Remove its configuration\n      const updatedConfigurations = { ...(plan.productConfigurations || {}) };\n      delete updatedConfigurations[productValue];\n      \n      plan.selectedProducts = updatedProducts;\n      plan.productConfigurations = updatedConfigurations;\n    } else {\n      // Add product\n      updatedProducts = [...currentProducts, productValue];\n      plan.selectedProducts = updatedProducts;\n    }\n    \n    updatePlansData(updatedPlans);\n  };\n\n  const handleConfigurationChange = (productType, field, value) => {\n    const updatedPlans = [...plans];\n    const plan = updatedPlans[currentPlanIndex];\n    \n    const updatedConfigurations = {\n      ...(plan.productConfigurations || {}),\n      [productType]: {\n        ...(plan.productConfigurations?.[productType] || {}),\n        [field]: value\n      }\n    };\n    \n    plan.productConfigurations = updatedConfigurations;\n    updatePlansData(updatedPlans);\n  };\n\n  const handleModelSelection = (productType, selectedModel) => {\n    if (selectedModel === 'system-recommendation') {\n      // System recommendation\n      const recommendations = getSystemRecommendation(productType);\n      handleConfigurationChange(productType, 'selectionType', 'system-recommendation');\n      handleConfigurationChange(productType, 'recommendedModel', recommendations);\n    } else if (selectedModel === 'custom') {\n      // Custom model\n      handleConfigurationChange(productType, 'selectionType', 'custom');\n    } else if (selectedModel) {\n      // Pre-defined model\n      const models = productModels[productType];\n      const model = models.find(m => m.id === selectedModel);\n      if (model) {\n        handleConfigurationChange(productType, 'selectionType', 'predefined');\n        handleConfigurationChange(productType, 'selectedModel', model);\n      }\n    }\n  };\n\n  const getSystemRecommendation = (productType) => {\n    // Simple recommendation logic based on house data\n    const houseType = data.houseType;\n    const bedrooms = data.bedrooms;\n    const monthlyElectricityBill = data.monthlyElectricityBill;\n    \n    switch (productType) {\n      case 'solar-panels':\n        if (monthlyElectricityBill === '300+' || monthlyElectricityBill === '200-300') {\n          return productModels['solar-panels'][0]; // High consumption - SunPower\n        } else if (monthlyElectricityBill === '150-200' || monthlyElectricityBill === '100-150') {\n          return productModels['solar-panels'][2]; // Medium consumption - LG\n        } else {\n          return productModels['solar-panels'][4]; // Low consumption - JinkoSolar\n        }\n      \n      case 'heat-pump':\n        if (houseType === 'detached' || bedrooms >= 4) {\n          return productModels['heat-pump'][1]; // Large house - Mitsubishi 14kW\n        } else if (houseType === 'semi-detached' || bedrooms >= 3) {\n          return productModels['heat-pump'][2]; // Medium house - Vaillant 12kW\n        } else {\n          return productModels['heat-pump'][0]; // Small house - Daikin 11kW\n        }\n      \n      case 'battery-storage':\n        if (monthlyElectricityBill === '300+' || monthlyElectricityBill === '200-300') {\n          return productModels['battery-storage'][3]; // High usage - Sonnen 15kWh\n        } else if (monthlyElectricityBill === '150-200' || monthlyElectricityBill === '100-150') {\n          return productModels['battery-storage'][0]; // Medium usage - Tesla Powerwall\n        } else {\n          return productModels['battery-storage'][1]; // Low usage - LG Chem 10kWh\n        }\n      \n      default:\n        return productModels[productType][0];\n    }\n  };\n\n  const handleAddPlan = () => {\n    const newPlan = {\n      id: plans.length + 1,\n      name: `Plan ${plans.length + 1}`,\n      selectedProducts: [],\n      productConfigurations: {}\n    };\n    const updatedPlans = [...plans, newPlan];\n    setCurrentPlanIndex(updatedPlans.length - 1);\n    updatePlansData(updatedPlans);\n  };\n\n  const handlePlanNameChange = (planIndex, newName) => {\n    const updatedPlans = [...plans];\n    updatedPlans[planIndex].name = newName;\n    updatePlansData(updatedPlans);\n  };\n\n  const handleRemovePlan = (planIndex) => {\n    if (plans.length > 1) {\n      const updatedPlans = plans.filter((_, index) => index !== planIndex);\n      // Update IDs to maintain sequence\n      updatedPlans.forEach((plan, index) => {\n        plan.id = index + 1;\n      });\n      \n      // Adjust current plan index\n      if (currentPlanIndex >= updatedPlans.length) {\n        setCurrentPlanIndex(updatedPlans.length - 1);\n      } else if (currentPlanIndex > planIndex) {\n        setCurrentPlanIndex(currentPlanIndex - 1);\n      }\n      \n      updatePlansData(updatedPlans);\n    }\n  };\n\n  const handleNext = () => {\n    const hasValidPlan = plans.some(plan => \n      Array.isArray(plan.selectedProducts) && plan.selectedProducts.length > 0\n    );\n    if (hasValidPlan) {\n      onNext();\n    }\n  };\n\n  const isFormValid = plans.some(plan => \n    Array.isArray(plan.selectedProducts) && plan.selectedProducts.length > 0\n  );\n\n  return (\n    <div className=\"step-container\">\n      <div className=\"step-header\">\n        <h2>Upgrade Plan</h2>\n        <p>Create and compare different renewable energy configurations to find the best solution for your needs.</p>\n      </div>\n\n      {/* Plan Selector */}\n      <div className=\"plan-selector\">\n        <div className=\"plan-tabs\">\n          {plans.map((plan, index) => (\n            <div key={plan.id} className={`plan-tab ${index === currentPlanIndex ? 'active' : ''}`}>\n              <input\n                type=\"text\"\n                value={plan.name}\n                onChange={(e) => handlePlanNameChange(index, e.target.value)}\n                className=\"plan-name-input\"\n                onClick={() => setCurrentPlanIndex(index)}\n              />\n              {plans.length > 1 && (\n                <button \n                  type=\"button\"\n                  className=\"remove-plan-btn\"\n                  onClick={() => handleRemovePlan(index)}\n                  title=\"Remove this plan\"\n                >\n                  ×\n                </button>\n              )}\n              {index !== currentPlanIndex && (\n                <button\n                  type=\"button\"\n                  className=\"switch-plan-btn\"\n                  onClick={() => setCurrentPlanIndex(index)}\n                >\n                  Switch to this plan\n                </button>\n              )}\n            </div>\n          ))}\n        </div>\n        \n        <button \n          type=\"button\" \n          className=\"btn btn-outline add-plan-btn\"\n          onClick={handleAddPlan}\n        >\n          Add Another Plan to Compare\n        </button>\n      </div>\n\n      <div className=\"current-plan-content\">\n        <div className=\"plan-header\">\n          <h3>Configuring: {currentPlan.name}</h3>\n          {plans.length > 1 && (\n            <div className=\"plan-summary\">\n              <span>Plan {currentPlanIndex + 1} of {plans.length}</span>\n            </div>\n          )}\n        </div>\n\n        <div className=\"form-group\">\n          <label>Products to Install</label>\n          <small>Select all products you want to add to this renewable energy plan</small>\n          <div className=\"checkbox-group\">\n            {availableProducts.map((product) => (\n              <div key={product.value} className=\"checkbox-item\">\n                <label className=\"checkbox-label\">\n                  <input\n                    type=\"checkbox\"\n                    checked={Array.isArray(currentPlan.selectedProducts) && currentPlan.selectedProducts.includes(product.value)}\n                    onChange={() => handleProductSelection(product.value)}\n                  />\n                  <span className=\"checkmark\"></span>\n                  {product.label}\n                </label>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Configuration for each selected product */}\n        {Array.isArray(currentPlan.selectedProducts) && currentPlan.selectedProducts.map((productType) => {\n          const product = availableProducts.find(p => p.value === productType);\n          const config = (currentPlan.productConfigurations && currentPlan.productConfigurations[productType]) || {};\n          const models = productModels[productType] || [];\n          \n          return (\n            <div key={productType} className=\"product-configuration\">\n              <h3>{product.label} Configuration</h3>\n              \n              <div className=\"form-group\">\n                <label htmlFor={`${productType}-selection-${currentPlanIndex}`}>Choose Model</label>\n                <select\n                  id={`${productType}-selection-${currentPlanIndex}`}\n                  value={config.selectionType === 'predefined' ? config.selectedModel?.id : config.selectionType || ''}\n                  onChange={(e) => handleModelSelection(productType, e.target.value)}\n                >\n                  <option value=\"\">Select an option</option>\n                  <optgroup label=\"Pre-defined Models\">\n                    {models.map((model, index) => (\n                      <option key={index} value={model.id}>\n                        {model.brand} {model.model} - {model.capacity} ({model.price})\n                      </option>\n                    ))}\n                  </optgroup>\n                  <optgroup label=\"Other Options\">\n                    <option value=\"system-recommendation\">System Recommendation</option>\n                    <option value=\"custom\">Add Custom Model</option>\n                  </optgroup>\n                </select>\n              </div>\n\n              {/* System Recommendation Display */}\n              {config.selectionType === 'system-recommendation' && config.recommendedModel && (\n                <div className=\"recommendation-display\">\n                  <h4>System Recommendation</h4>\n                  <div className=\"recommended-model\">\n                    <div className=\"model-info\">\n                      <span className=\"model-name\">{config.recommendedModel.brand} {config.recommendedModel.model}</span>\n                      <span className=\"model-specs\">{config.recommendedModel.capacity} - {config.recommendedModel.price}</span>\n                    </div>\n                    <p className=\"recommendation-reason\">\n                      Recommended based on your house type, energy consumption, and typical requirements.\n                    </p>\n                  </div>\n                </div>\n              )}\n\n              {/* Custom Model Input */}\n              {config.selectionType === 'custom' && (\n                <div className=\"custom-model-inputs\">\n                  <h4>Custom Model Details</h4>\n                  <div className=\"device-input-group\">\n                    <input\n                      type=\"text\"\n                      placeholder=\"Brand\"\n                      value={config.customBrand || ''}\n                      onChange={(e) => handleConfigurationChange(productType, 'customBrand', e.target.value)}\n                      className=\"device-input\"\n                    />\n                    <input\n                      type=\"text\"\n                      placeholder=\"Model\"\n                      value={config.customModel || ''}\n                      onChange={(e) => handleConfigurationChange(productType, 'customModel', e.target.value)}\n                      className=\"device-input\"\n                    />\n                  </div>\n                  <div className=\"device-input-group\">\n                    <input\n                      type=\"text\"\n                      placeholder=\"Capacity/Size\"\n                      value={config.customCapacity || ''}\n                      onChange={(e) => handleConfigurationChange(productType, 'customCapacity', e.target.value)}\n                      className=\"device-input\"\n                    />\n                    <input\n                      type=\"text\"\n                      placeholder=\"Estimated Price\"\n                      value={config.customPrice || ''}\n                      onChange={(e) => handleConfigurationChange(productType, 'customPrice', e.target.value)}\n                      className=\"device-input\"\n                    />\n                  </div>\n                </div>\n              )}\n\n              {/* Quantity Selection */}\n              {(config.selectionType === 'predefined' || config.selectionType === 'system-recommendation' || config.selectionType === 'custom') && (\n                <div className=\"form-group\">\n                  <label htmlFor={`${productType}-quantity-${currentPlanIndex}`}>Quantity</label>\n                  <select\n                    id={`${productType}-quantity-${currentPlanIndex}`}\n                    value={config.quantity || '1'}\n                    onChange={(e) => handleConfigurationChange(productType, 'quantity', e.target.value)}\n                  >\n                    {[1,2,3,4,5,6,7,8,9,10].map(num => (\n                      <option key={num} value={num}>{num}</option>\n                    ))}\n                    <option value=\"custom\">Custom quantity</option>\n                  </select>\n                  {config.quantity === 'custom' && (\n                    <input\n                      type=\"number\"\n                      placeholder=\"Enter quantity\"\n                      value={config.customQuantity || ''}\n                      onChange={(e) => handleConfigurationChange(productType, 'customQuantity', e.target.value)}\n                      className=\"device-input\"\n                      style={{ marginTop: '0.5rem' }}\n                    />\n                  )}\n                </div>\n              )}\n            </div>\n          );\n        })}\n\n        {(!Array.isArray(currentPlan.selectedProducts) || currentPlan.selectedProducts.length === 0) && (\n          <div className=\"no-products-selected\">\n            <p>Please select at least one product for this plan to continue.</p>\n          </div>\n        )}\n      </div>\n\n      {/* Plans Summary */}\n      {plans.length > 1 && (\n        <div className=\"plans-summary\">\n          <h3>Plans Summary</h3>\n          <div className=\"summary-grid\">\n            {plans.map((plan, index) => (\n              <div key={plan.id} className={`plan-summary-card ${index === currentPlanIndex ? 'current' : ''}`}>\n                <h4>{plan.name}</h4>\n                <div className=\"plan-products\">\n                  {plan.selectedProducts && plan.selectedProducts.length > 0 ? (\n                    <ul>\n                      {plan.selectedProducts.map(product => {\n                        const productLabel = availableProducts.find(p => p.value === product)?.label || product;\n                        return <li key={product}>{productLabel}</li>;\n                      })}\n                    </ul>\n                  ) : (\n                    <p className=\"no-products\">No products selected</p>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      <div className=\"button-group\">\n        <button \n          type=\"button\" \n          className=\"btn btn-secondary\"\n          onClick={onBack}\n        >\n          Back\n        </button>\n        <button \n          type=\"button\" \n          className={`btn btn-primary ${!isFormValid ? 'disabled' : ''}`}\n          onClick={handleNext}\n          disabled={!isFormValid}\n        >\n          Next: Tariffs {plans.length > 1 ? `(${plans.filter(p => p.selectedProducts && p.selectedProducts.length > 0).length} plans configured)` : ''}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default UpgradePlan; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}