{"ast":null,"code":"// 电费服务 - 根据地区提供电费数据\n// \n// 这个服务使用Ofgem官方的配电网地区划分系统（GSP Groups）\n// 数据来源: https://www.ofgem.gov.uk/get-energy-price-cap-standing-charges-and-unit-rates-region\n//\n// 目前使用基于Ofgem 2024年价格上限的默认数据\n// 未来可以集成官方API来获取实时数据\n//\nexport const tariffService = {\n  // Ofgem 官方API端点\n  OFGEM_API_BASE: 'https://www.ofgem.gov.uk',\n  // 英国电网地区划分 (基于Ofgem官方分区)\n  // 这些是Ofgem官方认可的14个配电网地区\n  DNO_REGIONS: {\n    // 英格兰和威尔士地区\n    10: {\n      name: 'Eastern England',\n      operator: 'UK Power Networks'\n    },\n    11: {\n      name: 'East Midlands',\n      operator: 'Western Power Distribution'\n    },\n    12: {\n      name: 'London',\n      operator: 'UK Power Networks'\n    },\n    13: {\n      name: 'Merseyside and Northern Wales',\n      operator: 'Scottish Power'\n    },\n    14: {\n      name: 'West Midlands',\n      operator: 'Western Power Distribution'\n    },\n    15: {\n      name: 'North Eastern England',\n      operator: 'Northern Power Grid'\n    },\n    16: {\n      name: 'North Western England',\n      operator: 'Electricity North West'\n    },\n    17: {\n      name: 'Northern Scotland',\n      operator: 'Scottish and Southern Electricity'\n    },\n    18: {\n      name: 'Southern Scotland',\n      operator: 'Scottish Power'\n    },\n    19: {\n      name: 'South Eastern England',\n      operator: 'UK Power Networks'\n    },\n    20: {\n      name: 'Southern England',\n      operator: 'Scottish and Southern Electricity'\n    },\n    21: {\n      name: 'South Wales',\n      operator: 'Western Power Distribution'\n    },\n    22: {\n      name: 'South Western England',\n      operator: 'Western Power Distribution'\n    },\n    23: {\n      name: 'Yorkshire',\n      operator: 'Northern Power Grid'\n    }\n  },\n  // 临时默认费率（来源：Ofgem价格上限数据）\n  // 注意：这些应该通过API获取最新数据\n  defaultRegionTariffs: {\n    // 基于Ofgem 2024年价格上限的典型费率\n    electricity: {\n      standardRate: 24.50,\n      // 便士/kWh\n      standingCharge: 60.10,\n      // 便士/天\n      economy7Day: 25.79,\n      economy7Night: 20.47\n    },\n    gas: {\n      standardRate: 6.04,\n      // 便士/kWh  \n      standingCharge: 31.43 // 便士/天\n    }\n  },\n  // 邮编前缀到Ofgem配电网地区的映射\n  postcodeToGSP: {\n    // 伦敦地区 (GSP: _C - London)\n    'E': 12,\n    'EC': 12,\n    'N': 12,\n    'NW': 12,\n    'SE': 12,\n    'SW': 12,\n    'W': 12,\n    'WC': 12,\n    // 东英格兰 (GSP: _A - Eastern England)  \n    'CB': 10,\n    'CM': 10,\n    'CO': 10,\n    'IP': 10,\n    'NR': 10,\n    'PE': 10,\n    'SG': 10,\n    // 东南英格兰 (GSP: _J - South Eastern England)\n    'BR': 19,\n    'CR': 19,\n    'CT': 19,\n    'DA': 19,\n    'ME': 19,\n    'RH': 19,\n    'SM': 19,\n    'TN': 19,\n    'BN': 19,\n    'GU': 19,\n    'KT': 19,\n    'PO': 19,\n    // 南英格兰 (GSP: _H - Southern England)\n    'AL': 20,\n    'HP': 20,\n    'LU': 20,\n    'MK': 20,\n    'OX': 20,\n    'RG': 20,\n    'SL': 20,\n    'SO': 20,\n    'SP': 20,\n    'UB': 20,\n    'WD': 20,\n    // 西南英格兰 (GSP: _K - South Western England)\n    'BA': 22,\n    'BS': 22,\n    'DT': 22,\n    'EX': 22,\n    'GL': 22,\n    'PL': 22,\n    'TA': 22,\n    'TQ': 22,\n    'TR': 22,\n    // 西米德兰兹 (GSP: _G - West Midlands)\n    'B': 14,\n    'CV': 14,\n    'DY': 14,\n    'HR': 14,\n    'ST': 14,\n    'TF': 14,\n    'WR': 14,\n    'WS': 14,\n    'WV': 14,\n    // 东米德兰兹 (GSP: _F - East Midlands)\n    'DE': 11,\n    'LE': 11,\n    'LN': 11,\n    'NG': 11,\n    'NN': 11,\n    'S': 11,\n    // 约克郡 (GSP: _M - Yorkshire)\n    'BD': 23,\n    'DN': 23,\n    'HD': 23,\n    'HG': 23,\n    'HU': 23,\n    'HX': 23,\n    'LS': 23,\n    'WF': 23,\n    'YO': 23,\n    // 西北英格兰 (GSP: _D - North Western England)\n    'BB': 16,\n    'BL': 16,\n    'CA': 16,\n    'CH': 16,\n    'CW': 16,\n    'FY': 16,\n    'L': 16,\n    'LA': 16,\n    'M': 16,\n    'OL': 16,\n    'PR': 16,\n    'SK': 16,\n    'WA': 16,\n    'WN': 16,\n    // 东北英格兰 (GSP: _E - North Eastern England)\n    'DH': 15,\n    'DL': 15,\n    'NE': 15,\n    'SR': 15,\n    'TS': 15,\n    // 北威尔士和默西赛德 (GSP: _B - Merseyside and Northern Wales)\n    'LL': 13,\n    'SY': 13,\n    // 南威尔士 (GSP: _L - South Wales)\n    'CF': 21,\n    'LD': 21,\n    'NP': 21,\n    'SA': 21,\n    // 南苏格兰 (GSP: _P - Southern Scotland)\n    'DG': 18,\n    'EH': 18,\n    'G': 18,\n    'KA': 18,\n    'ML': 18,\n    'TD': 18,\n    // 北苏格兰 (GSP: _N - Northern Scotland)\n    'AB': 17,\n    'DD': 17,\n    'FK': 17,\n    'HS': 17,\n    'IV': 17,\n    'KW': 17,\n    'KY': 17,\n    'PA': 17,\n    'PH': 17,\n    'ZE': 17,\n    // 北爱尔兰（不在Ofgem管辖范围内，使用特殊标识）\n    'BT': 'NI'\n  },\n  // 尝试从Ofgem获取实时电费数据（带fallback）\n  async fetchOfgemTariffs(gspGroup) {\n    try {\n      // 注意：这是一个示例，实际的Ofgem API可能需要不同的端点\n      // 目前Ofgem没有提供公开的API，所以我们使用默认值\n      console.log('尝试获取GSP Group', gspGroup, '的Ofgem官方数据...');\n\n      // 这里可以在将来集成真正的Ofgem API\n      // const response = await fetch(`${this.OFGEM_API_BASE}/api/tariffs/${gspGroup}`);\n      // if (response.ok) {\n      //   return await response.json();\n      // }\n\n      throw new Error('Ofgem API暂不可用');\n    } catch (error) {\n      console.log('使用默认电费数据，原因:', error.message);\n      return this.getDefaultTariffs();\n    }\n  },\n  // 获取默认电费（基于Ofgem价格上限）\n  getDefaultTariffs() {\n    return {\n      electricityRate: this.defaultRegionTariffs.electricity.standardRate.toString(),\n      electricityStandingCharge: this.defaultRegionTariffs.electricity.standingCharge.toString(),\n      gasRate: this.defaultRegionTariffs.gas.standardRate.toString(),\n      gasStandingCharge: this.defaultRegionTariffs.gas.standingCharge.toString(),\n      economy7NightRate: this.defaultRegionTariffs.electricity.economy7Night.toString(),\n      economy7DayRate: this.defaultRegionTariffs.electricity.economy7Day.toString(),\n      // 估算的分时电价\n      peakRate: (this.defaultRegionTariffs.electricity.standardRate * 1.15).toFixed(2),\n      // 高峰期+15%\n      offPeakRate: (this.defaultRegionTariffs.electricity.standardRate * 0.85).toFixed(2),\n      // 低谷期-15%\n      nightRate: (this.defaultRegionTariffs.electricity.standardRate * 0.70).toFixed(2),\n      // 夜间-30%\n      feedInTariffRate: '4.10',\n      // 固定的入网电价\n      smartExportGuarantee: '4.10' // 智能出口保证\n    };\n  },\n  // 根据邮编获取GSP地区\n  getGSPFromPostcode(postcode) {\n    var _cleanPostcode$match;\n    if (!postcode) return 12; // 默认为伦敦\n\n    const cleanPostcode = postcode.replace(/\\s+/g, '').toUpperCase();\n\n    // 提取邮编前缀\n    const prefix = (_cleanPostcode$match = cleanPostcode.match(/^[A-Z]+/)) === null || _cleanPostcode$match === void 0 ? void 0 : _cleanPostcode$match[0];\n    if (!prefix) return 12;\n\n    // 首先检查完整前缀\n    if (this.postcodeToGSP[prefix]) {\n      return this.postcodeToGSP[prefix];\n    }\n\n    // 然后检查单字母前缀\n    const singleLetter = prefix.charAt(0);\n    if (this.postcodeToGSP[singleLetter]) {\n      return this.postcodeToGSP[singleLetter];\n    }\n    return 12; // 默认为伦敦地区\n  },\n  // 根据位置数据获取地区电费\n  async getTariffsForLocation(locationData) {\n    var _this$DNO_REGIONS$gsp;\n    let gspGroup = 12; // 默认为伦敦\n    let regionName = 'London';\n\n    // 根据邮编确定GSP地区\n    if (locationData.postcode) {\n      gspGroup = this.getGSPFromPostcode(locationData.postcode);\n    }\n\n    // 处理北爱尔兰特殊情况\n    if (gspGroup === 'NI') {\n      return {\n        ...this.getDefaultTariffs(),\n        detectedRegion: 'Northern Ireland',\n        gspGroup: 'NI',\n        source: 'northern_ireland_estimate',\n        regionName: '北爱尔兰',\n        note: '北爱尔兰不在Ofgem管辖范围内，使用估算数据'\n      };\n    }\n\n    // 获取地区名称\n    regionName = ((_this$DNO_REGIONS$gsp = this.DNO_REGIONS[gspGroup]) === null || _this$DNO_REGIONS$gsp === void 0 ? void 0 : _this$DNO_REGIONS$gsp.name) || 'London';\n    try {\n      // 尝试获取官方数据（目前会fallback到默认值）\n      const tariffs = await this.fetchOfgemTariffs(gspGroup);\n      return {\n        ...tariffs,\n        detectedRegion: regionName,\n        gspGroup: gspGroup,\n        source: 'ofgem_price_cap',\n        regionName: this.getRegionDisplayName(gspGroup)\n      };\n    } catch (error) {\n      // fallback到默认数据\n      return {\n        ...this.getDefaultTariffs(),\n        detectedRegion: regionName,\n        gspGroup: gspGroup,\n        source: 'default_estimate',\n        regionName: this.getRegionDisplayName(gspGroup)\n      };\n    }\n  },\n  // 获取地区显示名称（中文）\n  getRegionDisplayName(gspGroup) {\n    const regionNames = {\n      10: '东英格兰',\n      11: '东米德兰兹',\n      12: '伦敦',\n      13: '默西赛德和北威尔士',\n      14: '西米德兰兹',\n      15: '东北英格兰',\n      16: '西北英格兰',\n      17: '北苏格兰',\n      18: '南苏格兰',\n      19: '东南英格兰',\n      20: '南英格兰',\n      21: '南威尔士',\n      22: '西南英格兰',\n      23: '约克郡',\n      'NI': '北爱尔兰'\n    };\n    return regionNames[gspGroup] || '未知地区';\n  },\n  // 获取地区详细信息\n  getRegionInfo(gspGroup) {\n    const regionInfo = this.DNO_REGIONS[gspGroup];\n    if (!regionInfo) {\n      return {\n        name: '未知地区',\n        description: '使用默认电费数据',\n        operator: 'Unknown'\n      };\n    }\n    return {\n      name: this.getRegionDisplayName(gspGroup),\n      description: `${regionInfo.name}地区电费（配电网运营商：${regionInfo.operator}）`,\n      operator: regionInfo.operator,\n      officialName: regionInfo.name\n    };\n  }\n};","map":{"version":3,"names":["tariffService","OFGEM_API_BASE","DNO_REGIONS","name","operator","defaultRegionTariffs","electricity","standardRate","standingCharge","economy7Day","economy7Night","gas","postcodeToGSP","fetchOfgemTariffs","gspGroup","console","log","Error","error","message","getDefaultTariffs","electricityRate","toString","electricityStandingCharge","gasRate","gasStandingCharge","economy7NightRate","economy7DayRate","peakRate","toFixed","offPeakRate","nightRate","feedInTariffRate","smartExportGuarantee","getGSPFromPostcode","postcode","_cleanPostcode$match","cleanPostcode","replace","toUpperCase","prefix","match","singleLetter","charAt","getTariffsForLocation","locationData","_this$DNO_REGIONS$gsp","regionName","detectedRegion","source","note","tariffs","getRegionDisplayName","regionNames","getRegionInfo","regionInfo","description","officialName"],"sources":["/Users/xuefei/Desktop/calculator00/calculator/renewableCalculator.ui/src/services/tariffService.js"],"sourcesContent":["// 电费服务 - 根据地区提供电费数据\n// \n// 这个服务使用Ofgem官方的配电网地区划分系统（GSP Groups）\n// 数据来源: https://www.ofgem.gov.uk/get-energy-price-cap-standing-charges-and-unit-rates-region\n//\n// 目前使用基于Ofgem 2024年价格上限的默认数据\n// 未来可以集成官方API来获取实时数据\n//\nexport const tariffService = {\n  // Ofgem 官方API端点\n  OFGEM_API_BASE: 'https://www.ofgem.gov.uk',\n  \n  // 英国电网地区划分 (基于Ofgem官方分区)\n  // 这些是Ofgem官方认可的14个配电网地区\n  DNO_REGIONS: {\n    // 英格兰和威尔士地区\n    10: { name: 'Eastern England', operator: 'UK Power Networks' },\n    11: { name: 'East Midlands', operator: 'Western Power Distribution' },\n    12: { name: 'London', operator: 'UK Power Networks' },\n    13: { name: 'Merseyside and Northern Wales', operator: 'Scottish Power' },\n    14: { name: 'West Midlands', operator: 'Western Power Distribution' },\n    15: { name: 'North Eastern England', operator: 'Northern Power Grid' },\n    16: { name: 'North Western England', operator: 'Electricity North West' },\n    17: { name: 'Northern Scotland', operator: 'Scottish and Southern Electricity' },\n    18: { name: 'Southern Scotland', operator: 'Scottish Power' },\n    19: { name: 'South Eastern England', operator: 'UK Power Networks' },\n    20: { name: 'Southern England', operator: 'Scottish and Southern Electricity' },\n    21: { name: 'South Wales', operator: 'Western Power Distribution' },\n    22: { name: 'South Western England', operator: 'Western Power Distribution' },\n    23: { name: 'Yorkshire', operator: 'Northern Power Grid' }\n  },\n\n  // 临时默认费率（来源：Ofgem价格上限数据）\n  // 注意：这些应该通过API获取最新数据\n  defaultRegionTariffs: {\n    // 基于Ofgem 2024年价格上限的典型费率\n    electricity: {\n      standardRate: 24.50, // 便士/kWh\n      standingCharge: 60.10, // 便士/天\n      economy7Day: 25.79,\n      economy7Night: 20.47\n    },\n    gas: {\n      standardRate: 6.04, // 便士/kWh  \n      standingCharge: 31.43 // 便士/天\n    }\n  },\n\n  // 邮编前缀到Ofgem配电网地区的映射\n  postcodeToGSP: {\n    // 伦敦地区 (GSP: _C - London)\n    'E': 12, 'EC': 12, 'N': 12, 'NW': 12, 'SE': 12, 'SW': 12, 'W': 12, 'WC': 12,\n    \n    // 东英格兰 (GSP: _A - Eastern England)  \n    'CB': 10, 'CM': 10, 'CO': 10, 'IP': 10, 'NR': 10, 'PE': 10, 'SG': 10,\n    \n    // 东南英格兰 (GSP: _J - South Eastern England)\n    'BR': 19, 'CR': 19, 'CT': 19, 'DA': 19, 'ME': 19, 'RH': 19, 'SM': 19, 'TN': 19,\n    'BN': 19, 'GU': 19, 'KT': 19, 'PO': 19,\n    \n    // 南英格兰 (GSP: _H - Southern England)\n    'AL': 20, 'HP': 20, 'LU': 20, 'MK': 20, 'OX': 20, 'RG': 20, 'SL': 20, 'SO': 20,\n    'SP': 20, 'UB': 20, 'WD': 20,\n    \n    // 西南英格兰 (GSP: _K - South Western England)\n    'BA': 22, 'BS': 22, 'DT': 22, 'EX': 22, 'GL': 22, 'PL': 22, 'TA': 22, 'TQ': 22, 'TR': 22,\n    \n    // 西米德兰兹 (GSP: _G - West Midlands)\n    'B': 14, 'CV': 14, 'DY': 14, 'HR': 14, 'ST': 14, 'TF': 14, 'WR': 14, 'WS': 14, 'WV': 14,\n    \n    // 东米德兰兹 (GSP: _F - East Midlands)\n    'DE': 11, 'LE': 11, 'LN': 11, 'NG': 11, 'NN': 11, 'S': 11,\n    \n    // 约克郡 (GSP: _M - Yorkshire)\n    'BD': 23, 'DN': 23, 'HD': 23, 'HG': 23, 'HU': 23, 'HX': 23, 'LS': 23, 'WF': 23, 'YO': 23,\n    \n    // 西北英格兰 (GSP: _D - North Western England)\n    'BB': 16, 'BL': 16, 'CA': 16, 'CH': 16, 'CW': 16, 'FY': 16, 'L': 16, 'LA': 16, 'M': 16,\n    'OL': 16, 'PR': 16, 'SK': 16, 'WA': 16, 'WN': 16,\n    \n    // 东北英格兰 (GSP: _E - North Eastern England)\n    'DH': 15, 'DL': 15, 'NE': 15, 'SR': 15, 'TS': 15,\n    \n    // 北威尔士和默西赛德 (GSP: _B - Merseyside and Northern Wales)\n    'LL': 13, 'SY': 13,\n    \n    // 南威尔士 (GSP: _L - South Wales)\n    'CF': 21, 'LD': 21, 'NP': 21, 'SA': 21,\n    \n    // 南苏格兰 (GSP: _P - Southern Scotland)\n    'DG': 18, 'EH': 18, 'G': 18, 'KA': 18, 'ML': 18, 'TD': 18,\n    \n    // 北苏格兰 (GSP: _N - Northern Scotland)\n    'AB': 17, 'DD': 17, 'FK': 17, 'HS': 17, 'IV': 17, 'KW': 17, 'KY': 17, 'PA': 17, 'PH': 17, 'ZE': 17,\n    \n    // 北爱尔兰（不在Ofgem管辖范围内，使用特殊标识）\n    'BT': 'NI'\n  },\n\n  // 尝试从Ofgem获取实时电费数据（带fallback）\n  async fetchOfgemTariffs(gspGroup) {\n    try {\n      // 注意：这是一个示例，实际的Ofgem API可能需要不同的端点\n      // 目前Ofgem没有提供公开的API，所以我们使用默认值\n      console.log('尝试获取GSP Group', gspGroup, '的Ofgem官方数据...');\n      \n      // 这里可以在将来集成真正的Ofgem API\n      // const response = await fetch(`${this.OFGEM_API_BASE}/api/tariffs/${gspGroup}`);\n      // if (response.ok) {\n      //   return await response.json();\n      // }\n      \n      throw new Error('Ofgem API暂不可用');\n    } catch (error) {\n      console.log('使用默认电费数据，原因:', error.message);\n      return this.getDefaultTariffs();\n    }\n  },\n\n  // 获取默认电费（基于Ofgem价格上限）\n  getDefaultTariffs() {\n    return {\n      electricityRate: this.defaultRegionTariffs.electricity.standardRate.toString(),\n      electricityStandingCharge: this.defaultRegionTariffs.electricity.standingCharge.toString(),\n      gasRate: this.defaultRegionTariffs.gas.standardRate.toString(),\n      gasStandingCharge: this.defaultRegionTariffs.gas.standingCharge.toString(),\n      economy7NightRate: this.defaultRegionTariffs.electricity.economy7Night.toString(),\n      economy7DayRate: this.defaultRegionTariffs.electricity.economy7Day.toString(),\n      // 估算的分时电价\n      peakRate: (this.defaultRegionTariffs.electricity.standardRate * 1.15).toFixed(2), // 高峰期+15%\n      offPeakRate: (this.defaultRegionTariffs.electricity.standardRate * 0.85).toFixed(2), // 低谷期-15%\n      nightRate: (this.defaultRegionTariffs.electricity.standardRate * 0.70).toFixed(2), // 夜间-30%\n      feedInTariffRate: '4.10', // 固定的入网电价\n      smartExportGuarantee: '4.10' // 智能出口保证\n    };\n  },\n\n  // 根据邮编获取GSP地区\n  getGSPFromPostcode(postcode) {\n    if (!postcode) return 12; // 默认为伦敦\n    \n    const cleanPostcode = postcode.replace(/\\s+/g, '').toUpperCase();\n    \n    // 提取邮编前缀\n    const prefix = cleanPostcode.match(/^[A-Z]+/)?.[0];\n    if (!prefix) return 12;\n    \n    // 首先检查完整前缀\n    if (this.postcodeToGSP[prefix]) {\n      return this.postcodeToGSP[prefix];\n    }\n    \n    // 然后检查单字母前缀\n    const singleLetter = prefix.charAt(0);\n    if (this.postcodeToGSP[singleLetter]) {\n      return this.postcodeToGSP[singleLetter];\n    }\n    \n    return 12; // 默认为伦敦地区\n  },\n\n  // 根据位置数据获取地区电费\n  async getTariffsForLocation(locationData) {\n    let gspGroup = 12; // 默认为伦敦\n    let regionName = 'London';\n    \n    // 根据邮编确定GSP地区\n    if (locationData.postcode) {\n      gspGroup = this.getGSPFromPostcode(locationData.postcode);\n    }\n    \n    // 处理北爱尔兰特殊情况\n    if (gspGroup === 'NI') {\n      return {\n        ...this.getDefaultTariffs(),\n        detectedRegion: 'Northern Ireland',\n        gspGroup: 'NI',\n        source: 'northern_ireland_estimate',\n        regionName: '北爱尔兰',\n        note: '北爱尔兰不在Ofgem管辖范围内，使用估算数据'\n      };\n    }\n    \n    // 获取地区名称\n    regionName = this.DNO_REGIONS[gspGroup]?.name || 'London';\n    \n    try {\n      // 尝试获取官方数据（目前会fallback到默认值）\n      const tariffs = await this.fetchOfgemTariffs(gspGroup);\n      \n      return {\n        ...tariffs,\n        detectedRegion: regionName,\n        gspGroup: gspGroup,\n        source: 'ofgem_price_cap',\n        regionName: this.getRegionDisplayName(gspGroup)\n      };\n    } catch (error) {\n      // fallback到默认数据\n      return {\n        ...this.getDefaultTariffs(),\n        detectedRegion: regionName,\n        gspGroup: gspGroup,\n        source: 'default_estimate',\n        regionName: this.getRegionDisplayName(gspGroup)\n      };\n    }\n  },\n\n  // 获取地区显示名称（中文）\n  getRegionDisplayName(gspGroup) {\n    const regionNames = {\n      10: '东英格兰',\n      11: '东米德兰兹',\n      12: '伦敦',\n      13: '默西赛德和北威尔士',\n      14: '西米德兰兹',\n      15: '东北英格兰',\n      16: '西北英格兰',\n      17: '北苏格兰',\n      18: '南苏格兰',\n      19: '东南英格兰',\n      20: '南英格兰',\n      21: '南威尔士',\n      22: '西南英格兰',\n      23: '约克郡',\n      'NI': '北爱尔兰'\n    };\n    \n    return regionNames[gspGroup] || '未知地区';\n  },\n\n  // 获取地区详细信息\n  getRegionInfo(gspGroup) {\n    const regionInfo = this.DNO_REGIONS[gspGroup];\n    \n    if (!regionInfo) {\n      return {\n        name: '未知地区',\n        description: '使用默认电费数据',\n        operator: 'Unknown'\n      };\n    }\n\n    return {\n      name: this.getRegionDisplayName(gspGroup),\n      description: `${regionInfo.name}地区电费（配电网运营商：${regionInfo.operator}）`,\n      operator: regionInfo.operator,\n      officialName: regionInfo.name\n    };\n  }\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}