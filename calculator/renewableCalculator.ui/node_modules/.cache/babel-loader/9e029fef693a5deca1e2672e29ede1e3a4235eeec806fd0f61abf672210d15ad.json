{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Line}from'react-chartjs-2';import{Chart as ChartJS,CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend}from'chart.js';import{calculateElectricityDemand,calculateGasDemand}from'../api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend);const EnergyDemandChart=_ref=>{let{userData}=_ref;const[electricityChartData,setElectricityChartData]=useState(null);const[gasChartData,setGasChartData]=useState(null);const[summaryData,setSummaryData]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const months=['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];useEffect(()=>{const fetchEnergyDemandData=async()=>{try{setLoading(true);setError(null);// Prepare electricity demand request\nconst electricityRequest={needsEstimation:true,occupants:userData.occupants||3,hotWaterType:userData.hotWaterType||'gas-boiler',heatingType:userData.heatingType||'gas',houseArea:userData.houseArea||100,buildYear:userData.buildYear||'1981-2002',wallType:userData.wallType||'modern',// Updated default to match new options\nwindowType:userData.windowType||'double',houseType:userData.houseType||'semi-detached',epcRating:userData.epcRating||'D',roofInsulation:userData.roofInsulation||'no',floorInsulation:userData.floorInsulation||'no',latitude:userData.latitude,longitude:userData.longitude};// Prepare gas demand request\nconst gasRequest={needsEstimation:true,occupants:userData.occupants||3,hotWaterType:userData.hotWaterType||'gas-boiler',heatingType:userData.heatingType||'gas',houseArea:userData.houseArea||100,buildYear:userData.buildYear||'1981-2002',wallType:userData.wallType||'modern',// Updated default to match new options\nwindowType:userData.windowType||'double',houseType:userData.houseType||'semi-detached',epcRating:userData.epcRating||'D',roofInsulation:userData.roofInsulation||'no',floorInsulation:userData.floorInsulation||'no',latitude:userData.latitude,longitude:userData.longitude};// Fetch both electricity and gas demand data\nconst[electricityResponse,gasResponse]=await Promise.all([calculateElectricityDemand(electricityRequest),calculateGasDemand(gasRequest)]);const electricityData=electricityResponse.data;const gasData=gasResponse.data;// Extract monthly data\nconst electricityMonthly=[];const gasMonthly=[];for(let month=1;month<=12;month++){electricityMonthly.push(electricityData.monthlyElectricityDemand[month]||0);gasMonthly.push(gasData.monthlyGasDemand[month]||0);}// Prepare separate chart data for electricity\nconst electricityChartConfig={labels:months,datasets:[{label:'Electricity Demand (kWh)',data:electricityMonthly,borderColor:'rgb(75, 192, 192)',backgroundColor:'rgba(75, 192, 192, 0.2)',tension:0.1,pointRadius:5,pointHoverRadius:7,fill:true}]};// Prepare separate chart data for gas\nconst gasChartConfig={labels:months,datasets:[{label:'Gas Demand (kWh)',data:gasMonthly,borderColor:'rgb(255, 99, 132)',backgroundColor:'rgba(255, 99, 132, 0.2)',tension:0.1,pointRadius:5,pointHoverRadius:7,fill:true}]};setElectricityChartData(electricityChartConfig);setGasChartData(gasChartConfig);// Set summary data\nsetSummaryData({electricity:{annual:electricityData.annualElectricityDemand,peak:electricityData.peakMonthDemand,peakMonth:months[electricityData.peakMonth-1],low:electricityData.lowMonthDemand,lowMonth:months[electricityData.lowMonth-1],method:electricityData.calculationMethod},gas:{annual:gasData.annualGasDemand,peak:gasData.peakMonthDemand,peakMonth:months[gasData.peakMonth-1],low:gasData.lowMonthDemand,lowMonth:months[gasData.lowMonth-1],method:gasData.calculationMethod}});}catch(error){console.error('Error fetching energy demand data:',error);setError('Failed to load energy demand data. Please try again.');}finally{setLoading(false);}};if(userData){fetchEnergyDemandData();}},[userData]);const electricityChartOptions={responsive:true,plugins:{legend:{position:'top'},title:{display:true,text:'Monthly Electricity Demand'},tooltip:{mode:'index',intersect:false,callbacks:{label:function(context){return\"\".concat(context.dataset.label,\": \").concat(context.parsed.y.toFixed(1),\" kWh\");}}}},scales:{x:{display:true,title:{display:true,text:'Month'}},y:{display:true,title:{display:true,text:'Electricity Demand (kWh)'},beginAtZero:true}},interaction:{mode:'nearest',axis:'x',intersect:false}};const gasChartOptions={responsive:true,plugins:{legend:{position:'top'},title:{display:true,text:'Monthly Gas Demand'},tooltip:{mode:'index',intersect:false,callbacks:{label:function(context){return\"\".concat(context.dataset.label,\": \").concat(context.parsed.y.toFixed(1),\" kWh\");}}}},scales:{x:{display:true,title:{display:true,text:'Month'}},y:{display:true,title:{display:true,text:'Gas Demand (kWh)'},beginAtZero:true}},interaction:{mode:'nearest',axis:'x',intersect:false}};if(loading){return/*#__PURE__*/_jsxs(\"div\",{className:\"energy-demand-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Energy Demand\"}),/*#__PURE__*/_jsx(\"div\",{className:\"loading-state\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Loading energy demand data...\"})})]});}if(error){return/*#__PURE__*/_jsxs(\"div\",{className:\"energy-demand-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Energy Demand\"}),/*#__PURE__*/_jsx(\"div\",{className:\"error-state\",children:/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:error})})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"energy-demand-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Energy Demand\"}),summaryData&&/*#__PURE__*/_jsx(\"div\",{className:\"energy-summary\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"energy-summary-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"energy-type-summary electricity-summary\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Electricity\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Annual Demand\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value\",children:[summaryData.electricity.annual.toFixed(0),\" kWh\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Peak Month\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value\",children:[summaryData.electricity.peakMonth,\": \",summaryData.electricity.peak.toFixed(0),\" kWh\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Low Month\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value\",children:[summaryData.electricity.lowMonth,\": \",summaryData.electricity.low.toFixed(0),\" kWh\"]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"energy-type-summary gas-summary\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Gas\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Annual Demand\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value\",children:[summaryData.gas.annual.toFixed(0),\" kWh\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Peak Month\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value\",children:[summaryData.gas.peakMonth,\": \",summaryData.gas.peak.toFixed(0),\" kWh\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Low Month\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value\",children:[summaryData.gas.lowMonth,\": \",summaryData.gas.low.toFixed(0),\" kWh\"]})]})]})]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"charts-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chart-container electricity-chart\",children:electricityChartData&&/*#__PURE__*/_jsx(Line,{data:electricityChartData,options:electricityChartOptions})}),/*#__PURE__*/_jsx(\"div\",{className:\"chart-container gas-chart\",children:gasChartData&&/*#__PURE__*/_jsx(Line,{data:gasChartData,options:gasChartOptions})})]}),summaryData&&/*#__PURE__*/_jsx(\"div\",{className:\"calculation-info\",children:/*#__PURE__*/_jsx(\"p\",{className:\"calculation-method\",children:\"Data calculated using estimation method based on your house characteristics and occupancy.\"})})]});};export default EnergyDemandChart;","map":{"version":3,"names":["React","useState","useEffect","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","calculateElectricityDemand","calculateGasDemand","jsx","_jsx","jsxs","_jsxs","register","EnergyDemandChart","_ref","userData","electricityChartData","setElectricityChartData","gasChartData","setGasChartData","summaryData","setSummaryData","loading","setLoading","error","setError","months","fetchEnergyDemandData","electricityRequest","needsEstimation","occupants","hotWaterType","heatingType","houseArea","buildYear","wallType","windowType","houseType","epcRating","roofInsulation","floorInsulation","latitude","longitude","gasRequest","electricityResponse","gasResponse","Promise","all","electricityData","data","gasData","electricityMonthly","gasMonthly","month","push","monthlyElectricityDemand","monthlyGasDemand","electricityChartConfig","labels","datasets","label","borderColor","backgroundColor","tension","pointRadius","pointHoverRadius","fill","gasChartConfig","electricity","annual","annualElectricityDemand","peak","peakMonthDemand","peakMonth","low","lowMonthDemand","lowMonth","method","calculationMethod","gas","annualGasDemand","console","electricityChartOptions","responsive","plugins","legend","position","title","display","text","tooltip","mode","intersect","callbacks","context","concat","dataset","parsed","y","toFixed","scales","x","beginAtZero","interaction","axis","gasChartOptions","className","children","options"],"sources":["/Users/xuefei/Desktop/calculator00/calculator/renewableCalculator.ui/src/components/EnergyDemandChart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { calculateElectricityDemand, calculateGasDemand } from '../api';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst EnergyDemandChart = ({ userData }) => {\n  const [electricityChartData, setElectricityChartData] = useState(null);\n  const [gasChartData, setGasChartData] = useState(null);\n  const [summaryData, setSummaryData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\n  useEffect(() => {\n    const fetchEnergyDemandData = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        // Prepare electricity demand request\n        const electricityRequest = {\n          needsEstimation: true,\n          occupants: userData.occupants || 3,\n          hotWaterType: userData.hotWaterType || 'gas-boiler',\n          heatingType: userData.heatingType || 'gas',\n          houseArea: userData.houseArea || 100,\n          buildYear: userData.buildYear || '1981-2002',\n          wallType: userData.wallType || 'modern',  // Updated default to match new options\n          windowType: userData.windowType || 'double',\n          houseType: userData.houseType || 'semi-detached',\n          epcRating: userData.epcRating || 'D',\n          roofInsulation: userData.roofInsulation || 'no',\n          floorInsulation: userData.floorInsulation || 'no',\n          latitude: userData.latitude,\n          longitude: userData.longitude\n        };\n\n        // Prepare gas demand request\n        const gasRequest = {\n          needsEstimation: true,\n          occupants: userData.occupants || 3,\n          hotWaterType: userData.hotWaterType || 'gas-boiler',\n          heatingType: userData.heatingType || 'gas',\n          houseArea: userData.houseArea || 100,\n          buildYear: userData.buildYear || '1981-2002',\n          wallType: userData.wallType || 'modern',  // Updated default to match new options\n          windowType: userData.windowType || 'double',\n          houseType: userData.houseType || 'semi-detached',\n          epcRating: userData.epcRating || 'D',\n          roofInsulation: userData.roofInsulation || 'no',\n          floorInsulation: userData.floorInsulation || 'no',\n          latitude: userData.latitude,\n          longitude: userData.longitude\n        };\n\n        // Fetch both electricity and gas demand data\n        const [electricityResponse, gasResponse] = await Promise.all([\n          calculateElectricityDemand(electricityRequest),\n          calculateGasDemand(gasRequest)\n        ]);\n\n        const electricityData = electricityResponse.data;\n        const gasData = gasResponse.data;\n\n        // Extract monthly data\n        const electricityMonthly = [];\n        const gasMonthly = [];\n\n        for (let month = 1; month <= 12; month++) {\n          electricityMonthly.push(electricityData.monthlyElectricityDemand[month] || 0);\n          gasMonthly.push(gasData.monthlyGasDemand[month] || 0);\n        }\n\n        // Prepare separate chart data for electricity\n        const electricityChartConfig = {\n          labels: months,\n          datasets: [\n            {\n              label: 'Electricity Demand (kWh)',\n              data: electricityMonthly,\n              borderColor: 'rgb(75, 192, 192)',\n              backgroundColor: 'rgba(75, 192, 192, 0.2)',\n              tension: 0.1,\n              pointRadius: 5,\n              pointHoverRadius: 7,\n              fill: true,\n            }\n          ]\n        };\n\n        // Prepare separate chart data for gas\n        const gasChartConfig = {\n          labels: months,\n          datasets: [\n            {\n              label: 'Gas Demand (kWh)',\n              data: gasMonthly,\n              borderColor: 'rgb(255, 99, 132)',\n              backgroundColor: 'rgba(255, 99, 132, 0.2)',\n              tension: 0.1,\n              pointRadius: 5,\n              pointHoverRadius: 7,\n              fill: true,\n            }\n          ]\n        };\n\n        setElectricityChartData(electricityChartConfig);\n        setGasChartData(gasChartConfig);\n\n        // Set summary data\n        setSummaryData({\n          electricity: {\n            annual: electricityData.annualElectricityDemand,\n            peak: electricityData.peakMonthDemand,\n            peakMonth: months[electricityData.peakMonth - 1],\n            low: electricityData.lowMonthDemand,\n            lowMonth: months[electricityData.lowMonth - 1],\n            method: electricityData.calculationMethod\n          },\n          gas: {\n            annual: gasData.annualGasDemand,\n            peak: gasData.peakMonthDemand,\n            peakMonth: months[gasData.peakMonth - 1],\n            low: gasData.lowMonthDemand,\n            lowMonth: months[gasData.lowMonth - 1],\n            method: gasData.calculationMethod\n          }\n        });\n\n      } catch (error) {\n        console.error('Error fetching energy demand data:', error);\n        setError('Failed to load energy demand data. Please try again.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (userData) {\n      fetchEnergyDemandData();\n    }\n  }, [userData]);\n\n  const electricityChartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: 'Monthly Electricity Demand'\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false,\n        callbacks: {\n          label: function(context) {\n            return `${context.dataset.label}: ${context.parsed.y.toFixed(1)} kWh`;\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        display: true,\n        title: {\n          display: true,\n          text: 'Month'\n        }\n      },\n      y: {\n        display: true,\n        title: {\n          display: true,\n          text: 'Electricity Demand (kWh)'\n        },\n        beginAtZero: true\n      }\n    },\n    interaction: {\n      mode: 'nearest',\n      axis: 'x',\n      intersect: false\n    }\n  };\n\n  const gasChartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: 'Monthly Gas Demand'\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false,\n        callbacks: {\n          label: function(context) {\n            return `${context.dataset.label}: ${context.parsed.y.toFixed(1)} kWh`;\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        display: true,\n        title: {\n          display: true,\n          text: 'Month'\n        }\n      },\n      y: {\n        display: true,\n        title: {\n          display: true,\n          text: 'Gas Demand (kWh)'\n        },\n        beginAtZero: true\n      }\n    },\n    interaction: {\n      mode: 'nearest',\n      axis: 'x',\n      intersect: false\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"energy-demand-section\">\n        <h3>Energy Demand</h3>\n        <div className=\"loading-state\">\n          <p>Loading energy demand data...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"energy-demand-section\">\n        <h3>Energy Demand</h3>\n        <div className=\"error-state\">\n          <p className=\"error-message\">{error}</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"energy-demand-section\">\n      <h3>Energy Demand</h3>\n      \n      {/* Summary Statistics */}\n      {summaryData && (\n        <div className=\"energy-summary\">\n          <div className=\"energy-summary-grid\">\n            <div className=\"energy-type-summary electricity-summary\">\n              <h4>Electricity</h4>\n              <div className=\"summary-stats\">\n                <div className=\"stat-item\">\n                  <span className=\"stat-label\">Annual Demand</span>\n                  <span className=\"stat-value\">{summaryData.electricity.annual.toFixed(0)} kWh</span>\n                </div>\n                <div className=\"stat-item\">\n                  <span className=\"stat-label\">Peak Month</span>\n                  <span className=\"stat-value\">{summaryData.electricity.peakMonth}: {summaryData.electricity.peak.toFixed(0)} kWh</span>\n                </div>\n                <div className=\"stat-item\">\n                  <span className=\"stat-label\">Low Month</span>\n                  <span className=\"stat-value\">{summaryData.electricity.lowMonth}: {summaryData.electricity.low.toFixed(0)} kWh</span>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"energy-type-summary gas-summary\">\n              <h4>Gas</h4>\n              <div className=\"summary-stats\">\n                <div className=\"stat-item\">\n                  <span className=\"stat-label\">Annual Demand</span>\n                  <span className=\"stat-value\">{summaryData.gas.annual.toFixed(0)} kWh</span>\n                </div>\n                <div className=\"stat-item\">\n                  <span className=\"stat-label\">Peak Month</span>\n                  <span className=\"stat-value\">{summaryData.gas.peakMonth}: {summaryData.gas.peak.toFixed(0)} kWh</span>\n                </div>\n                <div className=\"stat-item\">\n                  <span className=\"stat-label\">Low Month</span>\n                  <span className=\"stat-value\">{summaryData.gas.lowMonth}: {summaryData.gas.low.toFixed(0)} kWh</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Separate Charts */}\n      <div className=\"charts-container\">\n        {/* Electricity Chart */}\n        <div className=\"chart-container electricity-chart\">\n          {electricityChartData && (\n            <Line data={electricityChartData} options={electricityChartOptions} />\n          )}\n        </div>\n\n        {/* Gas Chart */}\n        <div className=\"chart-container gas-chart\">\n          {gasChartData && (\n            <Line data={gasChartData} options={gasChartOptions} />\n          )}\n        </div>\n      </div>\n\n      {/* Method Information */}\n      {summaryData && (\n        <div className=\"calculation-info\">\n          <p className=\"calculation-method\">\n            Data calculated using estimation method based on your house characteristics and occupancy.\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default EnergyDemandChart; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}