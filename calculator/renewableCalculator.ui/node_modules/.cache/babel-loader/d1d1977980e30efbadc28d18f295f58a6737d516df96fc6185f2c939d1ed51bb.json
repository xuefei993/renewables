{"ast":null,"code":"var _jsxFileName = \"/Users/xuefei/Desktop/calculator00/calculator/renewableCalculator.ui/src/components/steps/roof-condition/SolarPotentialCalculation.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SolarPotentialCalculation = ({\n  isReadyForCalculation,\n  onCalculate,\n  showResults,\n  result,\n  currentRoofNumber,\n  onAddRoof,\n  isCalculating = false\n}) => {\n  // Function to get solar potential rating based on percentage\n  const getSolarPotentialRating = percentage => {\n    if (percentage > 95) {\n      return {\n        rating: 'Excellent',\n        className: 'excellent',\n        recommended: true\n      };\n    } else if (percentage >= 90) {\n      return {\n        rating: 'Very Good',\n        className: 'very-good',\n        recommended: true\n      };\n    } else if (percentage >= 80) {\n      return {\n        rating: 'Good',\n        className: 'good',\n        recommended: true\n      };\n    } else if (percentage >= 60) {\n      return {\n        rating: 'Medium',\n        className: 'medium',\n        recommended: true\n      };\n    } else {\n      return {\n        rating: 'Poor',\n        className: 'poor',\n        recommended: false\n      };\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isReadyForCalculation && !showResults && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"solar-potential-section\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-calculate\",\n        onClick: onCalculate,\n        disabled: isCalculating,\n        children: isCalculating ? 'Calculating...' : 'Calculate Solar Potential'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), showResults && result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"solar-potential-results\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"potential-result-header\",\n        children: [(() => {\n          const percentage = parseFloat(result.solarPotential);\n          const rating = getSolarPotentialRating(percentage);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"solar-potential-display\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"Roof \", currentRoofNumber, \"'s solar potential: \", result.solarPotential.toFixed(2), \"%\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `rating-badge ${rating.className}`,\n                children: rating.rating\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"panel-count-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Estimated solar panels: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [result.solarPanelCount || 0, \" panels\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 48\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"panel-calculation-note\",\n                children: \"(Based on 2m\\xB2 per panel)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 19\n            }, this), !rating.recommended && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"not-recommended-warning\",\n              children: \"Not recommended for solar installation due to low solar potential\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this);\n        })(), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-add-roof\",\n          onClick: onAddRoof,\n          children: \"Add this roof\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_c = SolarPotentialCalculation;\nexport default SolarPotentialCalculation;\nvar _c;\n$RefreshReg$(_c, \"SolarPotentialCalculation\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","SolarPotentialCalculation","isReadyForCalculation","onCalculate","showResults","result","currentRoofNumber","onAddRoof","isCalculating","getSolarPotentialRating","percentage","rating","className","recommended","children","type","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","parseFloat","solarPotential","toFixed","solarPanelCount","_c","$RefreshReg$"],"sources":["/Users/xuefei/Desktop/calculator00/calculator/renewableCalculator.ui/src/components/steps/roof-condition/SolarPotentialCalculation.js"],"sourcesContent":["import React from 'react';\n\nconst SolarPotentialCalculation = ({ \n  isReadyForCalculation, \n  onCalculate, \n  showResults, \n  result, \n  currentRoofNumber, \n  onAddRoof,\n  isCalculating = false\n}) => {\n  \n  // Function to get solar potential rating based on percentage\n  const getSolarPotentialRating = (percentage) => {\n    if (percentage > 95) {\n      return { rating: 'Excellent', className: 'excellent', recommended: true };\n    } else if (percentage >= 90) {\n      return { rating: 'Very Good', className: 'very-good', recommended: true };\n    } else if (percentage >= 80) {\n      return { rating: 'Good', className: 'good', recommended: true };\n    } else if (percentage >= 60) {\n      return { rating: 'Medium', className: 'medium', recommended: true };\n    } else {\n      return { rating: 'Poor', className: 'poor', recommended: false };\n    }\n  };\n\n  return (\n    <>\n      {/* Solar Potential Calculation Section */}\n      {isReadyForCalculation && !showResults && (\n        <div className=\"solar-potential-section\">\n          <button \n            type=\"button\"\n            className=\"btn btn-calculate\"\n            onClick={onCalculate}\n            disabled={isCalculating}\n          >\n            {isCalculating ? 'Calculating...' : 'Calculate Solar Potential'}\n          </button>\n        </div>\n      )}\n\n      {/* Solar Potential Results */}\n      {showResults && result && (\n        <div className=\"solar-potential-results\">\n          <div className=\"potential-result-header\">\n            {(() => {\n              const percentage = parseFloat(result.solarPotential);\n              const rating = getSolarPotentialRating(percentage);\n              \n              return (\n                <div className=\"solar-potential-display\">\n                  <h4>\n                    Roof {currentRoofNumber}'s solar potential: {result.solarPotential.toFixed(2)}%\n                    <span className={`rating-badge ${rating.className}`}>\n                      {rating.rating}\n                    </span>\n                  </h4>\n                  <div className=\"panel-count-info\">\n                    <p>Estimated solar panels: <strong>{result.solarPanelCount || 0} panels</strong></p>\n                    <p className=\"panel-calculation-note\">(Based on 2mÂ² per panel)</p>\n                  </div>\n                  {!rating.recommended && (\n                    <p className=\"not-recommended-warning\">\n                       Not recommended for solar installation due to low solar potential\n                    </p>\n                  )}\n                </div>\n              );\n            })()}\n            \n            <button \n              type=\"button\"\n              className=\"btn btn-add-roof\"\n              onClick={onAddRoof}\n            >\n              Add this roof\n            </button>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default SolarPotentialCalculation; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}