{"ast":null,"code":"// Roof label conversion utilities\nexport const getOrientationLabel=orientation=>{const labels={'n':'North','ne':'Northeast','ene':'East-Northeast','e':'East','ese':'East-Southeast','se':'Southeast','s':'South','sw':'Southwest','wsw':'West-Southwest','w':'West','wnw':'West-Northwest','nw':'Northwest'};return labels[orientation]||orientation;};export const getShadingLabel=shading=>{const labels={'no-shading':'No Shading','light':'Light','moderate':'Moderate','heavy':'Heavy','extreme':'Extreme'};return labels[shading]||shading;};export const getUtilisationLabel=utilisation=>{const labels={'minimal-obstacles':'Minimal Obstacles','slightly-complex':'Slightly Complex','moderately-complex':'Moderately Complex','highly-complex':'Highly Complex','extremely-complex':'Extremely Complex'};return labels[utilisation]||utilisation;};// Generate roof angle options from 0 to 90 in increments of 10\nexport const getRoofAngleOptions=()=>Array.from({length:10},(_,i)=>i*10);// Get next roof number (highest existing ID + 1)\nexport const getNextRoofNumber=addedRoofs=>{if(addedRoofs.length===0)return 1;return Math.max(...addedRoofs.map(roof=>roof.id))+1;};","map":{"version":3,"names":["getOrientationLabel","orientation","labels","getShadingLabel","shading","getUtilisationLabel","utilisation","getRoofAngleOptions","Array","from","length","_","i","getNextRoofNumber","addedRoofs","Math","max","map","roof","id"],"sources":["/Users/xuefei/Desktop/calculator00/calculator/renewableCalculator.ui/src/components/steps/roof-condition/roofLabelUtils.js"],"sourcesContent":["// Roof label conversion utilities\n\nexport const getOrientationLabel = (orientation) => {\n  const labels = {\n    'n': 'North', 'ne': 'Northeast', 'ene': 'East-Northeast',\n    'e': 'East', 'ese': 'East-Southeast', 'se': 'Southeast',\n    's': 'South', 'sw': 'Southwest', 'wsw': 'West-Southwest',\n    'w': 'West', 'wnw': 'West-Northwest', 'nw': 'Northwest'\n  };\n  return labels[orientation] || orientation;\n};\n\nexport const getShadingLabel = (shading) => {\n  const labels = {\n    'no-shading': 'No Shading', 'light': 'Light', 'moderate': 'Moderate',\n    'heavy': 'Heavy', 'extreme': 'Extreme'\n  };\n  return labels[shading] || shading;\n};\n\nexport const getUtilisationLabel = (utilisation) => {\n  const labels = {\n    'minimal-obstacles': 'Minimal Obstacles', 'slightly-complex': 'Slightly Complex',\n    'moderately-complex': 'Moderately Complex', 'highly-complex': 'Highly Complex',\n    'extremely-complex': 'Extremely Complex'\n  };\n  return labels[utilisation] || utilisation;\n};\n\n// Generate roof angle options from 0 to 90 in increments of 10\nexport const getRoofAngleOptions = () => Array.from({ length: 10 }, (_, i) => i * 10);\n\n// Get next roof number (highest existing ID + 1)\nexport const getNextRoofNumber = (addedRoofs) => {\n  if (addedRoofs.length === 0) return 1;\n  return Math.max(...addedRoofs.map(roof => roof.id)) + 1;\n}; "],"mappings":"AAAA;AAEA,MAAO,MAAM,CAAAA,mBAAmB,CAAIC,WAAW,EAAK,CAClD,KAAM,CAAAC,MAAM,CAAG,CACb,GAAG,CAAE,OAAO,CAAE,IAAI,CAAE,WAAW,CAAE,KAAK,CAAE,gBAAgB,CACxD,GAAG,CAAE,MAAM,CAAE,KAAK,CAAE,gBAAgB,CAAE,IAAI,CAAE,WAAW,CACvD,GAAG,CAAE,OAAO,CAAE,IAAI,CAAE,WAAW,CAAE,KAAK,CAAE,gBAAgB,CACxD,GAAG,CAAE,MAAM,CAAE,KAAK,CAAE,gBAAgB,CAAE,IAAI,CAAE,WAC9C,CAAC,CACD,MAAO,CAAAA,MAAM,CAACD,WAAW,CAAC,EAAIA,WAAW,CAC3C,CAAC,CAED,MAAO,MAAM,CAAAE,eAAe,CAAIC,OAAO,EAAK,CAC1C,KAAM,CAAAF,MAAM,CAAG,CACb,YAAY,CAAE,YAAY,CAAE,OAAO,CAAE,OAAO,CAAE,UAAU,CAAE,UAAU,CACpE,OAAO,CAAE,OAAO,CAAE,SAAS,CAAE,SAC/B,CAAC,CACD,MAAO,CAAAA,MAAM,CAACE,OAAO,CAAC,EAAIA,OAAO,CACnC,CAAC,CAED,MAAO,MAAM,CAAAC,mBAAmB,CAAIC,WAAW,EAAK,CAClD,KAAM,CAAAJ,MAAM,CAAG,CACb,mBAAmB,CAAE,mBAAmB,CAAE,kBAAkB,CAAE,kBAAkB,CAChF,oBAAoB,CAAE,oBAAoB,CAAE,gBAAgB,CAAE,gBAAgB,CAC9E,mBAAmB,CAAE,mBACvB,CAAC,CACD,MAAO,CAAAA,MAAM,CAACI,WAAW,CAAC,EAAIA,WAAW,CAC3C,CAAC,CAED;AACA,MAAO,MAAM,CAAAC,mBAAmB,CAAGA,CAAA,GAAMC,KAAK,CAACC,IAAI,CAAC,CAAEC,MAAM,CAAE,EAAG,CAAC,CAAE,CAACC,CAAC,CAAEC,CAAC,GAAKA,CAAC,CAAG,EAAE,CAAC,CAErF;AACA,MAAO,MAAM,CAAAC,iBAAiB,CAAIC,UAAU,EAAK,CAC/C,GAAIA,UAAU,CAACJ,MAAM,GAAK,CAAC,CAAE,MAAO,EAAC,CACrC,MAAO,CAAAK,IAAI,CAACC,GAAG,CAAC,GAAGF,UAAU,CAACG,GAAG,CAACC,IAAI,EAAIA,IAAI,CAACC,EAAE,CAAC,CAAC,CAAG,CAAC,CACzD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}