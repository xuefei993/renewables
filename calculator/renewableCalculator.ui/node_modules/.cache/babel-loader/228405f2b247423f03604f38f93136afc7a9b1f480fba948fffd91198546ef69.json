{"ast":null,"code":"var _jsxFileName = \"/Users/xuefei/Desktop/calculator00 copy 3/calculator/renewableCalculator.ui/src/components/steps/address-input/chart/chartUtils.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// 图表工具函数\n\n/**\n * 创建平滑曲线路径的辅助函数\n * @param {Array} points - 包含 {x, y} 坐标的点数组\n * @returns {string} SVG 路径字符串\n */\nexport const createSmoothPath = points => {\n  if (points.length < 2) return '';\n  let path = `M ${points[0].x} ${points[0].y}`;\n  for (let i = 1; i < points.length; i++) {\n    const prev = points[i - 1];\n    const curr = points[i];\n    const next = points[i + 1];\n    if (i === 1) {\n      // 第一个曲线段\n      const cp1x = prev.x + (curr.x - prev.x) / 3;\n      const cp1y = prev.y;\n      const cp2x = curr.x - (next ? (next.x - prev.x) / 6 : (curr.x - prev.x) / 3);\n      const cp2y = curr.y - (next ? (next.y - prev.y) / 6 : 0);\n      path += ` C ${cp1x} ${cp1y}, ${cp2x} ${cp2y}, ${curr.x} ${curr.y}`;\n    } else if (i === points.length - 1) {\n      // 最后一个曲线段\n      const prevPrev = points[i - 2];\n      const cp1x = prev.x + (curr.x - prevPrev.x) / 6;\n      const cp1y = prev.y + (curr.y - prevPrev.y) / 6;\n      const cp2x = curr.x - (curr.x - prev.x) / 3;\n      const cp2y = curr.y;\n      path += ` C ${cp1x} ${cp1y}, ${cp2x} ${cp2y}, ${curr.x} ${curr.y}`;\n    } else {\n      // 中间的曲线段\n      const cp1x = prev.x + (curr.x - points[i - 2].x) / 6;\n      const cp1y = prev.y + (curr.y - points[i - 2].y) / 6;\n      const cp2x = curr.x - (next.x - prev.x) / 6;\n      const cp2y = curr.y - (next.y - prev.y) / 6;\n      path += ` C ${cp1x} ${cp1y}, ${cp2x} ${cp2y}, ${curr.x} ${curr.y}`;\n    }\n  }\n  return path;\n};\n\n/**\n * 计算数据的范围和比例\n * @param {Array} data - 数据数组\n * @param {Function} valueExtractor - 值提取函数\n * @returns {Object} 包含 min, max, range, values 的对象\n */\nexport const calculateDataRange = (data, valueExtractor = d => d.value) => {\n  const values = data.map(valueExtractor).filter(v => !isNaN(v) && v !== null && v !== undefined);\n  if (values.length === 0) {\n    return {\n      min: 0,\n      max: 1,\n      range: 1,\n      values: []\n    };\n  }\n  const min = Math.min(...values);\n  const max = Math.max(...values);\n  const range = max - min || 1; // 避免除零\n\n  return {\n    min,\n    max,\n    range,\n    values\n  };\n};\n\n/**\n * 生成图表数据点坐标\n * @param {Array} data - 原始数据\n * @param {Object} params - 参数对象\n * @returns {Array} 包含坐标和数据的点数组\n */\nexport const generateChartPoints = (data, {\n  chartWidth,\n  chartHeight,\n  padding,\n  dataMin,\n  dataRange\n}) => {\n  return data.map((item, index) => {\n    const x = padding + index * (chartWidth - 2 * padding) / (data.length - 1);\n    const y = chartHeight - padding - (item.value - dataMin) / dataRange * (chartHeight - 2 * padding);\n    return {\n      x,\n      y,\n      value: item.value,\n      month: item.month\n    };\n  });\n};\n\n/**\n * 验证图表数据完整性\n * @param {Object} climateData - 气候数据对象\n * @returns {Object} 验证结果\n */\nexport const validateChartData = climateData => {\n  if (!(climateData !== null && climateData !== void 0 && climateData.solar) || !(climateData !== null && climateData !== void 0 && climateData.temperature)) {\n    return {\n      isValid: false,\n      error: 'Missing climate data',\n      errorComponent: null\n    };\n  }\n  const solarLength = climateData.solar.length;\n  const tempLength = climateData.temperature.length;\n  if (solarLength === 0 || tempLength === 0) {\n    return {\n      isValid: false,\n      error: 'Insufficient data to display chart',\n      errorComponent: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-error\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Insufficient data to display chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\"Solar: \", solarLength, \" points, Temperature: \", tempLength, \" points\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    };\n  }\n\n  // 验证太阳辐射数据\n  const solarValues = climateData.solar.map(d => d.value).filter(v => !isNaN(v) && v > 0);\n  if (solarValues.length === 0) {\n    return {\n      isValid: false,\n      error: 'No valid solar radiation data',\n      errorComponent: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-error\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No valid solar radiation data available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\"Raw data points: \", solarLength]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    };\n  }\n\n  // 验证温度数据\n  const tempValues = climateData.temperature.map(d => d.value).filter(v => !isNaN(v));\n  if (tempValues.length === 0) {\n    return {\n      isValid: false,\n      error: 'No valid temperature data',\n      errorComponent: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-error\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No valid temperature data available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\"Raw data points: \", tempLength]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    };\n  }\n  return {\n    isValid: true,\n    error: null,\n    errorComponent: null\n  };\n};\n\n/**\n * 图表配置常量\n */\nexport const CHART_CONFIG = {\n  width: 700,\n  height: 400,\n  padding: 80,\n  colors: {\n    solar: '#f1c40f',\n    // 更亮的黄色，从 '#f39c12' 改为 '#f1c40f'\n    temperature: '#3498db',\n    // 从 '#e74c3c' 改为蓝色\n    grid: '#e8e8e8',\n    verticalGrid: '#f0f0f0'\n  },\n  gradients: {\n    solar: 'solarGradient',\n    temperature: 'tempGradient'\n  }\n};\n\n/**\n * 计算统计数据\n * @param {Array} values - 数值数组\n * @param {Array} data - 原始数据数组\n * @returns {Object} 统计信息\n */\nexport const calculateStats = (values, data) => {\n  var _data$maxIndex;\n  if (values.length === 0) return null;\n  const average = values.reduce((sum, val) => sum + val, 0) / values.length;\n  const maxValue = Math.max(...values);\n  const maxIndex = values.indexOf(maxValue);\n  const peakMonth = ((_data$maxIndex = data[maxIndex]) === null || _data$maxIndex === void 0 ? void 0 : _data$maxIndex.month) || 'Unknown';\n  return {\n    average: average.toFixed(1),\n    peakMonth,\n    dataPoints: values.length\n  };\n};","map":{"version":3,"names":["createSmoothPath","points","length","path","x","y","i","prev","curr","next","cp1x","cp1y","cp2x","cp2y","prevPrev","calculateDataRange","data","valueExtractor","d","value","values","map","filter","v","isNaN","undefined","min","max","range","Math","generateChartPoints","chartWidth","chartHeight","padding","dataMin","dataRange","item","index","month","validateChartData","climateData","solar","temperature","isValid","error","errorComponent","solarLength","tempLength","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","solarValues","tempValues","CHART_CONFIG","width","height","colors","grid","verticalGrid","gradients","calculateStats","_data$maxIndex","average","reduce","sum","val","maxValue","maxIndex","indexOf","peakMonth","toFixed","dataPoints"],"sources":["/Users/xuefei/Desktop/calculator00 copy 3/calculator/renewableCalculator.ui/src/components/steps/address-input/chart/chartUtils.js"],"sourcesContent":["// 图表工具函数\n\n/**\n * 创建平滑曲线路径的辅助函数\n * @param {Array} points - 包含 {x, y} 坐标的点数组\n * @returns {string} SVG 路径字符串\n */\nexport const createSmoothPath = (points) => {\n  if (points.length < 2) return '';\n  \n  let path = `M ${points[0].x} ${points[0].y}`;\n  \n  for (let i = 1; i < points.length; i++) {\n    const prev = points[i - 1];\n    const curr = points[i];\n    const next = points[i + 1];\n    \n    if (i === 1) {\n      // 第一个曲线段\n      const cp1x = prev.x + (curr.x - prev.x) / 3;\n      const cp1y = prev.y;\n      const cp2x = curr.x - (next ? (next.x - prev.x) / 6 : (curr.x - prev.x) / 3);\n      const cp2y = curr.y - (next ? (next.y - prev.y) / 6 : 0);\n      path += ` C ${cp1x} ${cp1y}, ${cp2x} ${cp2y}, ${curr.x} ${curr.y}`;\n    } else if (i === points.length - 1) {\n      // 最后一个曲线段\n      const prevPrev = points[i - 2];\n      const cp1x = prev.x + (curr.x - prevPrev.x) / 6;\n      const cp1y = prev.y + (curr.y - prevPrev.y) / 6;\n      const cp2x = curr.x - (curr.x - prev.x) / 3;\n      const cp2y = curr.y;\n      path += ` C ${cp1x} ${cp1y}, ${cp2x} ${cp2y}, ${curr.x} ${curr.y}`;\n    } else {\n      // 中间的曲线段\n      const cp1x = prev.x + (curr.x - points[i - 2].x) / 6;\n      const cp1y = prev.y + (curr.y - points[i - 2].y) / 6;\n      const cp2x = curr.x - (next.x - prev.x) / 6;\n      const cp2y = curr.y - (next.y - prev.y) / 6;\n      path += ` C ${cp1x} ${cp1y}, ${cp2x} ${cp2y}, ${curr.x} ${curr.y}`;\n    }\n  }\n  \n  return path;\n};\n\n/**\n * 计算数据的范围和比例\n * @param {Array} data - 数据数组\n * @param {Function} valueExtractor - 值提取函数\n * @returns {Object} 包含 min, max, range, values 的对象\n */\nexport const calculateDataRange = (data, valueExtractor = d => d.value) => {\n  const values = data.map(valueExtractor).filter(v => !isNaN(v) && v !== null && v !== undefined);\n  \n  if (values.length === 0) {\n    return { min: 0, max: 1, range: 1, values: [] };\n  }\n  \n  const min = Math.min(...values);\n  const max = Math.max(...values);\n  const range = max - min || 1; // 避免除零\n  \n  return { min, max, range, values };\n};\n\n/**\n * 生成图表数据点坐标\n * @param {Array} data - 原始数据\n * @param {Object} params - 参数对象\n * @returns {Array} 包含坐标和数据的点数组\n */\nexport const generateChartPoints = (data, { chartWidth, chartHeight, padding, dataMin, dataRange }) => {\n  return data.map((item, index) => {\n    const x = padding + (index * (chartWidth - 2 * padding)) / (data.length - 1);\n    const y = chartHeight - padding - ((item.value - dataMin) / dataRange) * (chartHeight - 2 * padding);\n    return { x, y, value: item.value, month: item.month };\n  });\n};\n\n/**\n * 验证图表数据完整性\n * @param {Object} climateData - 气候数据对象\n * @returns {Object} 验证结果\n */\nexport const validateChartData = (climateData) => {\n  if (!climateData?.solar || !climateData?.temperature) {\n    return { \n      isValid: false, \n      error: 'Missing climate data',\n      errorComponent: null\n    };\n  }\n\n  const solarLength = climateData.solar.length;\n  const tempLength = climateData.temperature.length;\n\n  if (solarLength === 0 || tempLength === 0) {\n    return {\n      isValid: false,\n      error: 'Insufficient data to display chart',\n      errorComponent: (\n        <div className=\"chart-error\">\n          <p>Insufficient data to display chart</p>\n          <small>Solar: {solarLength} points, Temperature: {tempLength} points</small>\n        </div>\n      )\n    };\n  }\n\n  // 验证太阳辐射数据\n  const solarValues = climateData.solar.map(d => d.value).filter(v => !isNaN(v) && v > 0);\n  if (solarValues.length === 0) {\n    return {\n      isValid: false,\n      error: 'No valid solar radiation data',\n      errorComponent: (\n        <div className=\"chart-error\">\n          <p>No valid solar radiation data available</p>\n          <small>Raw data points: {solarLength}</small>\n        </div>\n      )\n    };\n  }\n\n  // 验证温度数据\n  const tempValues = climateData.temperature.map(d => d.value).filter(v => !isNaN(v));\n  if (tempValues.length === 0) {\n    return {\n      isValid: false,\n      error: 'No valid temperature data',\n      errorComponent: (\n        <div className=\"chart-error\">\n          <p>No valid temperature data available</p>\n          <small>Raw data points: {tempLength}</small>\n        </div>\n      )\n    };\n  }\n\n  return { isValid: true, error: null, errorComponent: null };\n};\n\n/**\n * 图表配置常量\n */\nexport const CHART_CONFIG = {\n  width: 700,\n  height: 400,\n  padding: 80,\n  colors: {\n    solar: '#f1c40f', // 更亮的黄色，从 '#f39c12' 改为 '#f1c40f'\n    temperature: '#3498db', // 从 '#e74c3c' 改为蓝色\n    grid: '#e8e8e8',\n    verticalGrid: '#f0f0f0'\n  },\n  gradients: {\n    solar: 'solarGradient',\n    temperature: 'tempGradient'\n  }\n};\n\n/**\n * 计算统计数据\n * @param {Array} values - 数值数组\n * @param {Array} data - 原始数据数组\n * @returns {Object} 统计信息\n */\nexport const calculateStats = (values, data) => {\n  if (values.length === 0) return null;\n  \n  const average = values.reduce((sum, val) => sum + val, 0) / values.length;\n  const maxValue = Math.max(...values);\n  const maxIndex = values.indexOf(maxValue);\n  const peakMonth = data[maxIndex]?.month || 'Unknown';\n  \n  return {\n    average: average.toFixed(1),\n    peakMonth,\n    dataPoints: values.length\n  };\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}