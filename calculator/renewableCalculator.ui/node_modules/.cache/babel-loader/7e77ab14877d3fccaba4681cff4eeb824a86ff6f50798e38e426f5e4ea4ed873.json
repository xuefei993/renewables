{"ast":null,"code":"import _objectSpread from\"/Users/xuefei/Desktop/calculator00/calculator/renewableCalculator.ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from\"react\";import ElectricityUsageSection from\"./energy-demand/ElectricityUsageSection\";import HeatingSection from\"./energy-demand/HeatingSection\";import HotWaterSection from\"./energy-demand/HotWaterSection\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const EnergyDemand=_ref=>{let{data,onDataChange,onNext,onBack}=_ref;const[formData,setFormData]=useState(_objectSpread({householdSize:data.householdSize||\"\",knowsMonthlyUsage:data.knowsMonthlyUsage||\"\",monthlyElectricityUsage:data.monthlyElectricityUsage||{january:\"\",february:\"\",march:\"\",april:\"\",may:\"\",june:\"\",july:\"\",august:\"\",september:\"\",october:\"\",november:\"\",december:\"\"},knowsAnnualUsage:data.knowsAnnualUsage||\"\",annualElectricityUsage:data.annualElectricityUsage||\"\",floorArea:data.floorArea||\"\",heatingMethod:data.heatingMethod||\"\",hotWaterMethod:data.hotWaterMethod||\"\",knowsMonthlyGasUsage:data.knowsMonthlyGasUsage||\"\",monthlyGasUsage:data.monthlyGasUsage||{january:\"\",february:\"\",march:\"\",april:\"\",may:\"\",june:\"\",july:\"\",august:\"\",september:\"\",october:\"\",november:\"\",december:\"\"},knowsAnnualGasUsage:data.knowsAnnualGasUsage||\"\",annualGasUsage:data.annualGasUsage||\"\",heatPumpCOP:data.heatPumpCOP||\"3.0\",hotWaterHeatPumpCOP:data.hotWaterHeatPumpCOP||\"3.0\"},data));// Helper function to check if gas is needed for either heating or hot water\nconst needsGasUsage=()=>{return formData.heatingMethod===\"gas boiler\"||formData.hotWaterMethod===\"gas boiler\";};const updateFormData=updates=>{setFormData(prev=>_objectSpread(_objectSpread({},prev),updates));onDataChange(updates);};// Basic form handlers\nconst handleChange=e=>{const{name,value}=e.target;updateFormData({[name]:value});};// Electricity usage handlers\nconst handleKnowsMonthlyUsageChange=e=>{const value=e.target.value;let updates={knowsMonthlyUsage:value};if(value===\"yes\"){updates.knowsAnnualUsage=\"\";updates.annualElectricityUsage=\"\";}else if(value===\"no\"){updates.monthlyElectricityUsage={january:\"\",february:\"\",march:\"\",april:\"\",may:\"\",june:\"\",july:\"\",august:\"\",september:\"\",october:\"\",november:\"\",december:\"\"};}updateFormData(updates);};const handleKnowsAnnualUsageChange=e=>{const value=e.target.value;let updates={knowsAnnualUsage:value};if(value===\"yes\"){updates.monthlyElectricityUsage={january:\"\",february:\"\",march:\"\",april:\"\",may:\"\",june:\"\",july:\"\",august:\"\",september:\"\",october:\"\",november:\"\",december:\"\"};}updateFormData(updates);};const handleMonthlyElectricityChange=(month,value)=>{const updatedMonthlyUsage=_objectSpread(_objectSpread({},formData.monthlyElectricityUsage),{},{[month]:value});updateFormData({monthlyElectricityUsage:updatedMonthlyUsage});};const handleAnnualElectricityChange=e=>{updateFormData({annualElectricityUsage:e.target.value});};// Heating method handlers\nconst handleHeatingMethodChange=e=>{const value=e.target.value;let updates={heatingMethod:value};// If neither heating nor hot water will need gas after this change, clear gas data\nif(value!==\"gas boiler\"&&formData.hotWaterMethod!==\"gas boiler\"){updates=_objectSpread(_objectSpread({},updates),{},{knowsMonthlyGasUsage:\"\",monthlyGasUsage:{january:\"\",february:\"\",march:\"\",april:\"\",may:\"\",june:\"\",july:\"\",august:\"\",september:\"\",october:\"\",november:\"\",december:\"\"},knowsAnnualGasUsage:\"\",annualGasUsage:\"\"});}if(value!==\"heat pumps\"){updates.heatPumpCOP=\"3.0\";}updateFormData(updates);};// Hot water method handlers\nconst handleHotWaterMethodChange=e=>{const value=e.target.value;let updates={hotWaterMethod:value};// If neither heating nor hot water will need gas after this change, clear gas data\nif(value!==\"gas boiler\"&&formData.heatingMethod!==\"gas boiler\"){updates=_objectSpread(_objectSpread({},updates),{},{knowsMonthlyGasUsage:\"\",monthlyGasUsage:{january:\"\",february:\"\",march:\"\",april:\"\",may:\"\",june:\"\",july:\"\",august:\"\",september:\"\",october:\"\",november:\"\",december:\"\"},knowsAnnualGasUsage:\"\",annualGasUsage:\"\"});}if(value!==\"heat pumps\"){updates.hotWaterHeatPumpCOP=\"3.0\";}updateFormData(updates);};const handleKnowsMonthlyGasUsageChange=e=>{const value=e.target.value;let updates={knowsMonthlyGasUsage:value};if(value===\"yes\"){updates.knowsAnnualGasUsage=\"\";updates.annualGasUsage=\"\";}else if(value===\"no\"){updates.monthlyGasUsage={january:\"\",february:\"\",march:\"\",april:\"\",may:\"\",june:\"\",july:\"\",august:\"\",september:\"\",october:\"\",november:\"\",december:\"\"};}updateFormData(updates);};const handleKnowsAnnualGasUsageChange=e=>{const value=e.target.value;let updates={knowsAnnualGasUsage:value};if(value===\"yes\"){updates.monthlyGasUsage={january:\"\",february:\"\",march:\"\",april:\"\",may:\"\",june:\"\",july:\"\",august:\"\",september:\"\",october:\"\",november:\"\",december:\"\"};}updateFormData(updates);};const handleMonthlyGasChange=(month,value)=>{const updatedMonthlyGasUsage=_objectSpread(_objectSpread({},formData.monthlyGasUsage),{},{[month]:value});updateFormData({monthlyGasUsage:updatedMonthlyGasUsage});};const handleAnnualGasUsageChange=e=>{updateFormData({annualGasUsage:e.target.value});};const handleHeatPumpCOPChange=e=>{updateFormData({heatPumpCOP:e.target.value});};const handleHotWaterHeatPumpCOPChange=e=>{updateFormData({hotWaterHeatPumpCOP:e.target.value});};const handleNext=()=>{onNext();};const isFormValid=()=>{if(!formData.householdSize||!formData.knowsMonthlyUsage||!formData.floorArea||!formData.heatingMethod||!formData.hotWaterMethod){return false;}// Validate electricity usage\nif(formData.knowsMonthlyUsage===\"yes\"){const months=[\"january\",\"february\",\"march\",\"april\",\"may\",\"june\",\"july\",\"august\",\"september\",\"october\",\"november\",\"december\"];const electricityValid=months.every(month=>formData.monthlyElectricityUsage[month]&&formData.monthlyElectricityUsage[month].trim()!==\"\");if(!electricityValid)return false;}else if(formData.knowsMonthlyUsage===\"no\"){if(!formData.knowsAnnualUsage){return false;}if(formData.knowsAnnualUsage===\"yes\"&&!formData.annualElectricityUsage){return false;}}// Validate gas usage if needed for either heating or hot water\nif(needsGasUsage()){if(!formData.knowsMonthlyGasUsage){return false;}if(formData.knowsMonthlyGasUsage===\"yes\"){const months=[\"january\",\"february\",\"march\",\"april\",\"may\",\"june\",\"july\",\"august\",\"september\",\"october\",\"november\",\"december\"];return months.every(month=>formData.monthlyGasUsage[month]&&formData.monthlyGasUsage[month].trim()!==\"\");}else if(formData.knowsMonthlyGasUsage===\"no\"){if(!formData.knowsAnnualGasUsage){return false;}if(formData.knowsAnnualGasUsage===\"yes\"&&!formData.annualGasUsage){return false;}}}return true;};return/*#__PURE__*/_jsxs(\"div\",{className:\"step-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"step-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Energy Demand\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Tell us about your household's energy usage patterns to calculate accurate renewable energy recommendations.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"householdSize\",children:\"How many people live in your household regularly?\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"householdSize\",name:\"householdSize\",value:formData.householdSize,onChange:handleChange,placeholder:\"Enter number of people\",min:\"1\",max:\"20\",className:\"form-input\",required:true})]}),/*#__PURE__*/_jsx(ElectricityUsageSection,{formData:formData,onKnowsMonthlyUsageChange:handleKnowsMonthlyUsageChange,onKnowsAnnualUsageChange:handleKnowsAnnualUsageChange,onMonthlyElectricityChange:handleMonthlyElectricityChange,onAnnualElectricityChange:handleAnnualElectricityChange}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"floorArea\",children:\"What is your approximate floor area? (m\\xB2)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"floorArea\",name:\"floorArea\",value:formData.floorArea,onChange:handleChange,placeholder:\"Enter floor area in square metres\",min:\"1\",step:\"0.1\",className:\"form-input\",required:true})]}),/*#__PURE__*/_jsx(HeatingSection,{formData:formData,onHeatingMethodChange:handleHeatingMethodChange,onHeatPumpCOPChange:handleHeatPumpCOPChange,needsGasUsage:needsGasUsage()}),/*#__PURE__*/_jsx(HotWaterSection,{formData:formData,onHotWaterMethodChange:handleHotWaterMethodChange,onHotWaterHeatPumpCOPChange:handleHotWaterHeatPumpCOPChange,needsGasUsage:needsGasUsage(),onKnowsMonthlyGasUsageChange:handleKnowsMonthlyGasUsageChange,onKnowsAnnualGasUsageChange:handleKnowsAnnualGasUsageChange,onMonthlyGasChange:handleMonthlyGasChange,onAnnualGasUsageChange:handleAnnualGasUsageChange}),/*#__PURE__*/_jsxs(\"div\",{className:\"button-group\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-secondary\",onClick:onBack,children:\"Back\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-primary \".concat(!isFormValid()?'disabled':''),onClick:handleNext,disabled:!isFormValid(),children:\"Next: Solar Configuration\"})]})]});};export default EnergyDemand;","map":{"version":3,"names":["React","useState","ElectricityUsageSection","HeatingSection","HotWaterSection","jsx","_jsx","jsxs","_jsxs","EnergyDemand","_ref","data","onDataChange","onNext","onBack","formData","setFormData","_objectSpread","householdSize","knowsMonthlyUsage","monthlyElectricityUsage","january","february","march","april","may","june","july","august","september","october","november","december","knowsAnnualUsage","annualElectricityUsage","floorArea","heatingMethod","hotWaterMethod","knowsMonthlyGasUsage","monthlyGasUsage","knowsAnnualGasUsage","annualGasUsage","heatPumpCOP","hotWaterHeatPumpCOP","needsGasUsage","updateFormData","updates","prev","handleChange","e","name","value","target","handleKnowsMonthlyUsageChange","handleKnowsAnnualUsageChange","handleMonthlyElectricityChange","month","updatedMonthlyUsage","handleAnnualElectricityChange","handleHeatingMethodChange","handleHotWaterMethodChange","handleKnowsMonthlyGasUsageChange","handleKnowsAnnualGasUsageChange","handleMonthlyGasChange","updatedMonthlyGasUsage","handleAnnualGasUsageChange","handleHeatPumpCOPChange","handleHotWaterHeatPumpCOPChange","handleNext","isFormValid","months","electricityValid","every","trim","className","children","htmlFor","type","id","onChange","placeholder","min","max","required","onKnowsMonthlyUsageChange","onKnowsAnnualUsageChange","onMonthlyElectricityChange","onAnnualElectricityChange","step","onHeatingMethodChange","onHeatPumpCOPChange","onHotWaterMethodChange","onHotWaterHeatPumpCOPChange","onKnowsMonthlyGasUsageChange","onKnowsAnnualGasUsageChange","onMonthlyGasChange","onAnnualGasUsageChange","onClick","concat","disabled"],"sources":["/Users/xuefei/Desktop/calculator00/calculator/renewableCalculator.ui/src/components/steps/EnergyDemand.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport ElectricityUsageSection from \"./energy-demand/ElectricityUsageSection\";\nimport HeatingSection from \"./energy-demand/HeatingSection\";\nimport HotWaterSection from \"./energy-demand/HotWaterSection\";\n\nconst EnergyDemand = ({ data, onDataChange, onNext, onBack }) => {\n  const [formData, setFormData] = useState({\n    householdSize: data.householdSize || \"\",\n    knowsMonthlyUsage: data.knowsMonthlyUsage || \"\",\n    monthlyElectricityUsage: data.monthlyElectricityUsage || {\n      january: \"\", february: \"\", march: \"\", april: \"\", may: \"\", june: \"\",\n      july: \"\", august: \"\", september: \"\", october: \"\", november: \"\", december: \"\"\n    },\n    knowsAnnualUsage: data.knowsAnnualUsage || \"\",\n    annualElectricityUsage: data.annualElectricityUsage || \"\",\n    floorArea: data.floorArea || \"\",\n    heatingMethod: data.heatingMethod || \"\",\n    hotWaterMethod: data.hotWaterMethod || \"\",\n    knowsMonthlyGasUsage: data.knowsMonthlyGasUsage || \"\",\n    monthlyGasUsage: data.monthlyGasUsage || {\n      january: \"\", february: \"\", march: \"\", april: \"\", may: \"\", june: \"\",\n      july: \"\", august: \"\", september: \"\", october: \"\", november: \"\", december: \"\"\n    },\n    knowsAnnualGasUsage: data.knowsAnnualGasUsage || \"\",\n    annualGasUsage: data.annualGasUsage || \"\",\n    heatPumpCOP: data.heatPumpCOP || \"3.0\",\n    hotWaterHeatPumpCOP: data.hotWaterHeatPumpCOP || \"3.0\",\n    ...data\n  });\n\n  // Helper function to check if gas is needed for either heating or hot water\n  const needsGasUsage = () => {\n    return formData.heatingMethod === \"gas boiler\" || formData.hotWaterMethod === \"gas boiler\";\n  };\n\n  const updateFormData = (updates) => {\n    setFormData(prev => ({\n      ...prev,\n      ...updates\n    }));\n    onDataChange(updates);\n  };\n\n  // Basic form handlers\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    updateFormData({ [name]: value });\n  };\n\n  // Electricity usage handlers\n  const handleKnowsMonthlyUsageChange = (e) => {\n    const value = e.target.value;\n    let updates = { knowsMonthlyUsage: value };\n    \n    if (value === \"yes\") {\n      updates.knowsAnnualUsage = \"\";\n      updates.annualElectricityUsage = \"\";\n    } else if (value === \"no\") {\n      updates.monthlyElectricityUsage = {\n        january: \"\", february: \"\", march: \"\", april: \"\", may: \"\", june: \"\",\n        july: \"\", august: \"\", september: \"\", october: \"\", november: \"\", december: \"\"\n      };\n    }\n    updateFormData(updates);\n  };\n\n  const handleKnowsAnnualUsageChange = (e) => {\n    const value = e.target.value;\n    let updates = { knowsAnnualUsage: value };\n    \n    if (value === \"yes\") {\n      updates.monthlyElectricityUsage = {\n        january: \"\", february: \"\", march: \"\", april: \"\", may: \"\", june: \"\",\n        july: \"\", august: \"\", september: \"\", october: \"\", november: \"\", december: \"\"\n      };\n    }\n    updateFormData(updates);\n  };\n\n  const handleMonthlyElectricityChange = (month, value) => {\n    const updatedMonthlyUsage = {\n      ...formData.monthlyElectricityUsage,\n      [month]: value\n    };\n    updateFormData({ monthlyElectricityUsage: updatedMonthlyUsage });\n  };\n\n  const handleAnnualElectricityChange = (e) => {\n    updateFormData({ annualElectricityUsage: e.target.value });\n  };\n\n  // Heating method handlers\n  const handleHeatingMethodChange = (e) => {\n    const value = e.target.value;\n    let updates = { heatingMethod: value };\n    \n    // If neither heating nor hot water will need gas after this change, clear gas data\n    if (value !== \"gas boiler\" && formData.hotWaterMethod !== \"gas boiler\") {\n      updates = {\n        ...updates,\n        knowsMonthlyGasUsage: \"\",\n        monthlyGasUsage: {\n          january: \"\", february: \"\", march: \"\", april: \"\", may: \"\", june: \"\",\n          july: \"\", august: \"\", september: \"\", october: \"\", november: \"\", december: \"\"\n        },\n        knowsAnnualGasUsage: \"\",\n        annualGasUsage: \"\"\n      };\n    }\n    \n    if (value !== \"heat pumps\") {\n      updates.heatPumpCOP = \"3.0\";\n    }\n    updateFormData(updates);\n  };\n\n  // Hot water method handlers\n  const handleHotWaterMethodChange = (e) => {\n    const value = e.target.value;\n    let updates = { hotWaterMethod: value };\n    \n    // If neither heating nor hot water will need gas after this change, clear gas data\n    if (value !== \"gas boiler\" && formData.heatingMethod !== \"gas boiler\") {\n      updates = {\n        ...updates,\n        knowsMonthlyGasUsage: \"\",\n        monthlyGasUsage: {\n          january: \"\", february: \"\", march: \"\", april: \"\", may: \"\", june: \"\",\n          july: \"\", august: \"\", september: \"\", october: \"\", november: \"\", december: \"\"\n        },\n        knowsAnnualGasUsage: \"\",\n        annualGasUsage: \"\"\n      };\n    }\n    \n    if (value !== \"heat pumps\") {\n      updates.hotWaterHeatPumpCOP = \"3.0\";\n    }\n    updateFormData(updates);\n  };\n\n  const handleKnowsMonthlyGasUsageChange = (e) => {\n    const value = e.target.value;\n    let updates = { knowsMonthlyGasUsage: value };\n    \n    if (value === \"yes\") {\n      updates.knowsAnnualGasUsage = \"\";\n      updates.annualGasUsage = \"\";\n    } else if (value === \"no\") {\n      updates.monthlyGasUsage = {\n        january: \"\", february: \"\", march: \"\", april: \"\", may: \"\", june: \"\",\n        july: \"\", august: \"\", september: \"\", october: \"\", november: \"\", december: \"\"\n      };\n    }\n    updateFormData(updates);\n  };\n\n  const handleKnowsAnnualGasUsageChange = (e) => {\n    const value = e.target.value;\n    let updates = { knowsAnnualGasUsage: value };\n    \n    if (value === \"yes\") {\n      updates.monthlyGasUsage = {\n        january: \"\", february: \"\", march: \"\", april: \"\", may: \"\", june: \"\",\n        july: \"\", august: \"\", september: \"\", october: \"\", november: \"\", december: \"\"\n      };\n    }\n    updateFormData(updates);\n  };\n\n  const handleMonthlyGasChange = (month, value) => {\n    const updatedMonthlyGasUsage = {\n      ...formData.monthlyGasUsage,\n      [month]: value\n    };\n    updateFormData({ monthlyGasUsage: updatedMonthlyGasUsage });\n  };\n\n  const handleAnnualGasUsageChange = (e) => {\n    updateFormData({ annualGasUsage: e.target.value });\n  };\n\n  const handleHeatPumpCOPChange = (e) => {\n    updateFormData({ heatPumpCOP: e.target.value });\n  };\n\n  const handleHotWaterHeatPumpCOPChange = (e) => {\n    updateFormData({ hotWaterHeatPumpCOP: e.target.value });\n  };\n\n  const handleNext = () => {\n    onNext();\n  };\n\n  const isFormValid = () => {\n    if (!formData.householdSize || !formData.knowsMonthlyUsage || !formData.floorArea || !formData.heatingMethod || !formData.hotWaterMethod) {\n      return false;\n    }\n    \n    // Validate electricity usage\n    if (formData.knowsMonthlyUsage === \"yes\") {\n      const months = [\"january\", \"february\", \"march\", \"april\", \"may\", \"june\", \n                     \"july\", \"august\", \"september\", \"october\", \"november\", \"december\"];\n      const electricityValid = months.every(month => formData.monthlyElectricityUsage[month] && \n                                   formData.monthlyElectricityUsage[month].trim() !== \"\");\n      if (!electricityValid) return false;\n    } else if (formData.knowsMonthlyUsage === \"no\") {\n      if (!formData.knowsAnnualUsage) {\n        return false;\n      }\n      if (formData.knowsAnnualUsage === \"yes\" && !formData.annualElectricityUsage) {\n        return false;\n      }\n    }\n    \n    // Validate gas usage if needed for either heating or hot water\n    if (needsGasUsage()) {\n      if (!formData.knowsMonthlyGasUsage) {\n        return false;\n      }\n      if (formData.knowsMonthlyGasUsage === \"yes\") {\n        const months = [\"january\", \"february\", \"march\", \"april\", \"may\", \"june\", \n                       \"july\", \"august\", \"september\", \"october\", \"november\", \"december\"];\n        return months.every(month => formData.monthlyGasUsage[month] && \n                                     formData.monthlyGasUsage[month].trim() !== \"\");\n      } else if (formData.knowsMonthlyGasUsage === \"no\") {\n        if (!formData.knowsAnnualGasUsage) {\n          return false;\n        }\n        if (formData.knowsAnnualGasUsage === \"yes\" && !formData.annualGasUsage) {\n          return false;\n        }\n      }\n    }\n    \n    return true;\n  };\n\n  return (\n    <div className=\"step-container\">\n      <div className=\"step-header\">\n        <h2>Energy Demand</h2>\n        <p>Tell us about your household's energy usage patterns to calculate accurate renewable energy recommendations.</p>\n      </div>\n\n      <div className=\"form-group\">\n        <label htmlFor=\"householdSize\">How many people live in your household regularly?</label>\n        <input\n          type=\"number\"\n          id=\"householdSize\"\n          name=\"householdSize\"\n          value={formData.householdSize}\n          onChange={handleChange}\n          placeholder=\"Enter number of people\"\n          min=\"1\"\n          max=\"20\"\n          className=\"form-input\"\n          required\n        />\n      </div>\n\n      <ElectricityUsageSection\n        formData={formData}\n        onKnowsMonthlyUsageChange={handleKnowsMonthlyUsageChange}\n        onKnowsAnnualUsageChange={handleKnowsAnnualUsageChange}\n        onMonthlyElectricityChange={handleMonthlyElectricityChange}\n        onAnnualElectricityChange={handleAnnualElectricityChange}\n      />\n\n      <div className=\"form-group\">\n        <label htmlFor=\"floorArea\">What is your approximate floor area? (m²)</label>\n        <input\n          type=\"number\"\n          id=\"floorArea\"\n          name=\"floorArea\"\n          value={formData.floorArea}\n          onChange={handleChange}\n          placeholder=\"Enter floor area in square metres\"\n          min=\"1\"\n          step=\"0.1\"\n          className=\"form-input\"\n          required\n        />\n      </div>\n\n      <HeatingSection\n        formData={formData}\n        onHeatingMethodChange={handleHeatingMethodChange}\n        onHeatPumpCOPChange={handleHeatPumpCOPChange}\n        needsGasUsage={needsGasUsage()}\n      />\n\n      <HotWaterSection\n        formData={formData}\n        onHotWaterMethodChange={handleHotWaterMethodChange}\n        onHotWaterHeatPumpCOPChange={handleHotWaterHeatPumpCOPChange}\n        needsGasUsage={needsGasUsage()}\n        onKnowsMonthlyGasUsageChange={handleKnowsMonthlyGasUsageChange}\n        onKnowsAnnualGasUsageChange={handleKnowsAnnualGasUsageChange}\n        onMonthlyGasChange={handleMonthlyGasChange}\n        onAnnualGasUsageChange={handleAnnualGasUsageChange}\n      />\n\n      <div className=\"button-group\">\n        <button \n          type=\"button\" \n          className=\"btn btn-secondary\"\n          onClick={onBack}\n        >\n          Back\n        </button>\n        <button \n          type=\"button\" \n          className={`btn btn-primary ${!isFormValid() ? 'disabled' : ''}`}\n          onClick={handleNext}\n          disabled={!isFormValid()}\n        >\n          Next: Solar Configuration\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default EnergyDemand; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}