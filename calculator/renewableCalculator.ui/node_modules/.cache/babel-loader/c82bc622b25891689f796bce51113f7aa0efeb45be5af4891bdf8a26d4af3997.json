{"ast":null,"code":"import React,{useState,useEffect,useRef,forwardRef,useImperativeHandle}from'react';import PostcodeLocationInput from'./PostcodeLocationInput';import Compass from'./Compass';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const GoogleMapsPolygonDrawer=/*#__PURE__*/forwardRef((_ref,ref)=>{let{onAreaChange,userLocation,apiKey}=_ref;const mapRef=useRef(null);const[map,setMap]=useState(null);const[polygon,setPolygon]=useState(null);const[area,setArea]=useState(0);const[currentLocation,setCurrentLocation]=useState(userLocation);// Expose clearPolygon method to parent component\nuseImperativeHandle(ref,()=>({clearPolygon:()=>{if(polygon){polygon.setMap(null);setPolygon(null);setArea(0);onAreaChange(0);}}}));// Update map center when location changes\nuseEffect(()=>{if(map&&currentLocation){map.setCenter(currentLocation);map.setZoom(20);}},[currentLocation,map]);useEffect(()=>{if(mapRef.current&&!map){const newMap=new window.google.maps.Map(mapRef.current,{center:currentLocation||{lat:51.5074,lng:-0.1278},// London default\nzoom:20,mapTypeId:'satellite',tilt:0});// Enable drawing manager\nconst drawingManager=new window.google.maps.drawing.DrawingManager({drawingMode:window.google.maps.drawing.OverlayType.POLYGON,drawingControl:true,drawingControlOptions:{position:window.google.maps.ControlPosition.TOP_CENTER,drawingModes:[window.google.maps.drawing.OverlayType.POLYGON]},polygonOptions:{fillColor:'#FF6B35',fillOpacity:0.5,strokeColor:'#FF6B35',strokeWeight:2,editable:true,draggable:true}});drawingManager.setMap(newMap);// Handle polygon completion\ndrawingManager.addListener('polygoncomplete',newPolygon=>{// Remove previous polygon if exists\nif(polygon){polygon.setMap(null);}setPolygon(newPolygon);calculateArea(newPolygon);// Add listener for polygon changes\nnewPolygon.getPath().addListener('set_at',()=>calculateArea(newPolygon));newPolygon.getPath().addListener('insert_at',()=>calculateArea(newPolygon));newPolygon.getPath().addListener('remove_at',()=>calculateArea(newPolygon));// Disable drawing after polygon is created\ndrawingManager.setDrawingMode(null);});setMap(newMap);}},[mapRef.current,map,currentLocation]);const calculateArea=polygon=>{const path=polygon.getPath();const areaInSquareMeters=window.google.maps.geometry.spherical.computeArea(path);setArea(areaInSquareMeters);onAreaChange(areaInSquareMeters);};const clearPolygon=()=>{if(polygon){polygon.setMap(null);setPolygon(null);setArea(0);onAreaChange(0);}};const handleLocationChange=newLocation=>{setCurrentLocation(newLocation);// Clear existing polygon when location changes\nif(polygon){clearPolygon();}};return/*#__PURE__*/_jsxs(\"div\",{className:\"google-maps-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"map-location-controls\",children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Search by postcode\"}),/*#__PURE__*/_jsx(PostcodeLocationInput,{onLocationChange:handleLocationChange})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"map-with-compass\",children:[/*#__PURE__*/_jsx(\"div\",{ref:mapRef,style:{height:'500px',width:'100%'}}),/*#__PURE__*/_jsx(Compass,{})]}),/*#__PURE__*/_jsx(\"div\",{className:\"map-controls\",children:/*#__PURE__*/_jsx(\"button\",{onClick:clearPolygon,className:\"btn btn-secondary\",disabled:!polygon,children:\"Clear Roof Area\"})})]});});GoogleMapsPolygonDrawer.displayName='GoogleMapsPolygonDrawer';export default GoogleMapsPolygonDrawer;","map":{"version":3,"names":["React","useState","useEffect","useRef","forwardRef","useImperativeHandle","PostcodeLocationInput","Compass","jsx","_jsx","jsxs","_jsxs","GoogleMapsPolygonDrawer","_ref","ref","onAreaChange","userLocation","apiKey","mapRef","map","setMap","polygon","setPolygon","area","setArea","currentLocation","setCurrentLocation","clearPolygon","setCenter","setZoom","current","newMap","window","google","maps","Map","center","lat","lng","zoom","mapTypeId","tilt","drawingManager","drawing","DrawingManager","drawingMode","OverlayType","POLYGON","drawingControl","drawingControlOptions","position","ControlPosition","TOP_CENTER","drawingModes","polygonOptions","fillColor","fillOpacity","strokeColor","strokeWeight","editable","draggable","addListener","newPolygon","calculateArea","getPath","setDrawingMode","path","areaInSquareMeters","geometry","spherical","computeArea","handleLocationChange","newLocation","className","children","onLocationChange","style","height","width","onClick","disabled","displayName"],"sources":["/Users/xuefei/renewables/calculator/renewableCalculator.ui/src/components/steps/roof-condition/GoogleMapsPolygonDrawer.js"],"sourcesContent":["import React, { useState, useEffect, useRef, forwardRef, useImperativeHandle } from 'react';\nimport PostcodeLocationInput from './PostcodeLocationInput';\nimport Compass from './Compass';\n\nconst GoogleMapsPolygonDrawer = forwardRef(({ onAreaChange, userLocation, apiKey }, ref) => {\n  const mapRef = useRef(null);\n  const [map, setMap] = useState(null);\n  const [polygon, setPolygon] = useState(null);\n  const [area, setArea] = useState(0);\n  const [currentLocation, setCurrentLocation] = useState(userLocation);\n\n  // Expose clearPolygon method to parent component\n  useImperativeHandle(ref, () => ({\n    clearPolygon: () => {\n      if (polygon) {\n        polygon.setMap(null);\n        setPolygon(null);\n        setArea(0);\n        onAreaChange(0);\n      }\n    }\n  }));\n\n  // Update map center when location changes\n  useEffect(() => {\n    if (map && currentLocation) {\n      map.setCenter(currentLocation);\n      map.setZoom(20);\n    }\n  }, [currentLocation, map]);\n\n  useEffect(() => {\n    if (mapRef.current && !map) {\n      const newMap = new window.google.maps.Map(mapRef.current, {\n        center: currentLocation || { lat: 51.5074, lng: -0.1278 }, // London default\n        zoom: 20,\n        mapTypeId: 'satellite',\n        tilt: 0,\n      });\n\n      // Enable drawing manager\n      const drawingManager = new window.google.maps.drawing.DrawingManager({\n        drawingMode: window.google.maps.drawing.OverlayType.POLYGON,\n        drawingControl: true,\n        drawingControlOptions: {\n          position: window.google.maps.ControlPosition.TOP_CENTER,\n          drawingModes: [window.google.maps.drawing.OverlayType.POLYGON],\n        },\n        polygonOptions: {\n          fillColor: '#FF6B35',\n          fillOpacity: 0.5,\n          strokeColor: '#FF6B35',\n          strokeWeight: 2,\n          editable: true,\n          draggable: true,\n        },\n      });\n\n      drawingManager.setMap(newMap);\n\n      // Handle polygon completion\n      drawingManager.addListener('polygoncomplete', (newPolygon) => {\n        // Remove previous polygon if exists\n        if (polygon) {\n          polygon.setMap(null);\n        }\n\n        setPolygon(newPolygon);\n        calculateArea(newPolygon);\n\n        // Add listener for polygon changes\n        newPolygon.getPath().addListener('set_at', () => calculateArea(newPolygon));\n        newPolygon.getPath().addListener('insert_at', () => calculateArea(newPolygon));\n        newPolygon.getPath().addListener('remove_at', () => calculateArea(newPolygon));\n\n        // Disable drawing after polygon is created\n        drawingManager.setDrawingMode(null);\n      });\n\n      setMap(newMap);\n    }\n  }, [mapRef.current, map, currentLocation]);\n\n  const calculateArea = (polygon) => {\n    const path = polygon.getPath();\n    const areaInSquareMeters = window.google.maps.geometry.spherical.computeArea(path);\n    setArea(areaInSquareMeters);\n    onAreaChange(areaInSquareMeters);\n  };\n\n  const clearPolygon = () => {\n    if (polygon) {\n      polygon.setMap(null);\n      setPolygon(null);\n      setArea(0);\n      onAreaChange(0);\n    }\n  };\n\n  const handleLocationChange = (newLocation) => {\n    setCurrentLocation(newLocation);\n    // Clear existing polygon when location changes\n    if (polygon) {\n      clearPolygon();\n    }\n  };\n\n  return (\n    <div className=\"google-maps-container\">\n      <div className=\"map-location-controls\">\n        <h5>Search by postcode</h5>\n        <PostcodeLocationInput onLocationChange={handleLocationChange} />\n      </div>\n      \n      <div className=\"map-with-compass\">\n        <div ref={mapRef} style={{ height: '500px', width: '100%' }} />\n        <Compass />\n      </div>\n      \n      <div className=\"map-controls\">\n        <button onClick={clearPolygon} className=\"btn btn-secondary\" disabled={!polygon}>\n          Clear Roof Area\n        </button>\n      </div>\n    </div>\n  );\n});\n\nGoogleMapsPolygonDrawer.displayName = 'GoogleMapsPolygonDrawer';\n\nexport default GoogleMapsPolygonDrawer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}