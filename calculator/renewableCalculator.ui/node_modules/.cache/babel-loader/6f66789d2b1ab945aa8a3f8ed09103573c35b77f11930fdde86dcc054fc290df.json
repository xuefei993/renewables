{"ast":null,"code":"import _objectSpread from\"/Users/xuefei/renewables/calculator/renewableCalculator.ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from\"react\";import ElectricityUsageSection from\"./energy-demand/ElectricityUsageSection\";import HeatingSection from\"./energy-demand/HeatingSection\";import HotWaterSection from\"./energy-demand/HotWaterSection\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const EnergyDemand=_ref=>{let{data,onDataChange,onNext,onBack}=_ref;const[formData,setFormData]=useState(_objectSpread({householdSize:data.householdSize||\"\",knowsMonthlyUsage:data.knowsMonthlyUsage||\"\",monthlyElectricityUsage:data.monthlyElectricityUsage||{january:\"\",february:\"\",march:\"\",april:\"\",may:\"\",june:\"\",july:\"\",august:\"\",september:\"\",october:\"\",november:\"\",december:\"\"},knowsAnnualUsage:data.knowsAnnualUsage||\"\",annualElectricityUsage:data.annualElectricityUsage||\"\",floorArea:data.floorArea||\"\",heatingMethod:data.heatingMethod||\"\",hotWaterMethod:data.hotWaterMethod||\"\",daytimeHomeHabits:data.daytimeHomeHabits||\"\",knowsMonthlyGasUsage:data.knowsMonthlyGasUsage||\"\",monthlyGasUsage:data.monthlyGasUsage||{january:\"\",february:\"\",march:\"\",april:\"\",may:\"\",june:\"\",july:\"\",august:\"\",september:\"\",october:\"\",november:\"\",december:\"\"},knowsAnnualGasUsage:data.knowsAnnualGasUsage||\"\",annualGasUsage:data.annualGasUsage||\"\",heatPumpCOP:data.heatPumpCOP||\"3.0\",hotWaterHeatPumpCOP:data.hotWaterHeatPumpCOP||\"3.0\",boilerEfficiency:data.boilerEfficiency||\"\"},data));// Help modal state\nconst[activeHelpModal,setActiveHelpModal]=useState(null);// Helper function to check if gas is needed for either heating or hot water\nconst needsGasUsage=()=>{return formData.heatingMethod===\"gas boiler\"||formData.hotWaterMethod===\"gas boiler\";};// Helper function to check if any boiler is being used\nconst usesBoiler=()=>{return formData.heatingMethod===\"gas boiler\"||formData.hotWaterMethod===\"gas boiler\";};const updateFormData=updates=>{setFormData(prev=>_objectSpread(_objectSpread({},prev),updates));onDataChange(updates);};// Basic form handlers\nconst handleChange=e=>{const{name,value}=e.target;updateFormData({[name]:value});};// Help modal handlers\nconst openHelpModal=modalType=>{setActiveHelpModal(modalType);};const closeHelpModal=()=>{setActiveHelpModal(null);};// Electricity usage handlers\nconst handleKnowsMonthlyUsageChange=e=>{const value=e.target.value;let updates={knowsMonthlyUsage:value};if(value===\"yes\"){updates.knowsAnnualUsage=\"\";updates.annualElectricityUsage=\"\";}else if(value===\"no\"){updates.monthlyElectricityUsage={january:\"\",february:\"\",march:\"\",april:\"\",may:\"\",june:\"\",july:\"\",august:\"\",september:\"\",october:\"\",november:\"\",december:\"\"};}updateFormData(updates);};const handleKnowsAnnualUsageChange=e=>{const value=e.target.value;let updates={knowsAnnualUsage:value};if(value===\"yes\"){updates.monthlyElectricityUsage={january:\"\",february:\"\",march:\"\",april:\"\",may:\"\",june:\"\",july:\"\",august:\"\",september:\"\",october:\"\",november:\"\",december:\"\"};}updateFormData(updates);};const handleMonthlyElectricityChange=(month,value)=>{const updatedMonthlyUsage=_objectSpread(_objectSpread({},formData.monthlyElectricityUsage),{},{[month]:value});updateFormData({monthlyElectricityUsage:updatedMonthlyUsage});};const handleAnnualElectricityChange=e=>{updateFormData({annualElectricityUsage:e.target.value});};// Heating method handlers\nconst handleHeatingMethodChange=e=>{const value=e.target.value;let updates={heatingMethod:value};// If neither heating nor hot water will need gas after this change, clear gas data\nif(value!==\"gas boiler\"&&formData.hotWaterMethod!==\"gas boiler\"){updates=_objectSpread(_objectSpread({},updates),{},{knowsMonthlyGasUsage:\"\",monthlyGasUsage:{january:\"\",february:\"\",march:\"\",april:\"\",may:\"\",june:\"\",july:\"\",august:\"\",september:\"\",october:\"\",november:\"\",december:\"\"},knowsAnnualGasUsage:\"\",annualGasUsage:\"\"});}if(value!==\"heat pumps\"){updates.heatPumpCOP=\"3.0\";}updateFormData(updates);};// Hot water method handlers\nconst handleHotWaterMethodChange=e=>{const value=e.target.value;let updates={hotWaterMethod:value};// If neither heating nor hot water will need gas after this change, clear gas data\nif(value!==\"gas boiler\"&&formData.heatingMethod!==\"gas boiler\"){updates=_objectSpread(_objectSpread({},updates),{},{knowsMonthlyGasUsage:\"\",monthlyGasUsage:{january:\"\",february:\"\",march:\"\",april:\"\",may:\"\",june:\"\",july:\"\",august:\"\",september:\"\",october:\"\",november:\"\",december:\"\"},knowsAnnualGasUsage:\"\",annualGasUsage:\"\"});}if(value!==\"heat pumps\"){updates.hotWaterHeatPumpCOP=\"3.0\";}updateFormData(updates);};const handleKnowsMonthlyGasUsageChange=e=>{const value=e.target.value;let updates={knowsMonthlyGasUsage:value};if(value===\"yes\"){updates.knowsAnnualGasUsage=\"\";updates.annualGasUsage=\"\";}else if(value===\"no\"){updates.monthlyGasUsage={january:\"\",february:\"\",march:\"\",april:\"\",may:\"\",june:\"\",july:\"\",august:\"\",september:\"\",october:\"\",november:\"\",december:\"\"};}updateFormData(updates);};const handleKnowsAnnualGasUsageChange=e=>{const value=e.target.value;let updates={knowsAnnualGasUsage:value};if(value===\"yes\"){updates.monthlyGasUsage={january:\"\",february:\"\",march:\"\",april:\"\",may:\"\",june:\"\",july:\"\",august:\"\",september:\"\",october:\"\",november:\"\",december:\"\"};}updateFormData(updates);};const handleMonthlyGasChange=(month,value)=>{const updatedMonthlyGasUsage=_objectSpread(_objectSpread({},formData.monthlyGasUsage),{},{[month]:value});updateFormData({monthlyGasUsage:updatedMonthlyGasUsage});};const handleAnnualGasUsageChange=e=>{updateFormData({annualGasUsage:e.target.value});};const handleHeatPumpCOPChange=e=>{updateFormData({heatPumpCOP:e.target.value});};const handleHotWaterHeatPumpCOPChange=e=>{updateFormData({hotWaterHeatPumpCOP:e.target.value});};const handleNext=()=>{onNext();};const isFormValid=()=>{if(!formData.householdSize||!formData.knowsMonthlyUsage||!formData.floorArea||!formData.heatingMethod||!formData.hotWaterMethod||!formData.daytimeHomeHabits){return false;}// Validate electricity usage\nif(formData.knowsMonthlyUsage===\"yes\"){const months=[\"january\",\"february\",\"march\",\"april\",\"may\",\"june\",\"july\",\"august\",\"september\",\"october\",\"november\",\"december\"];const electricityValid=months.every(month=>formData.monthlyElectricityUsage[month]&&formData.monthlyElectricityUsage[month].trim()!==\"\");if(!electricityValid)return false;}else if(formData.knowsMonthlyUsage===\"no\"){if(!formData.knowsAnnualUsage){return false;}if(formData.knowsAnnualUsage===\"yes\"&&!formData.annualElectricityUsage){return false;}}// Validate gas usage if needed for either heating or hot water\nif(needsGasUsage()){if(!formData.knowsMonthlyGasUsage){return false;}if(formData.knowsMonthlyGasUsage===\"yes\"){const months=[\"january\",\"february\",\"march\",\"april\",\"may\",\"june\",\"july\",\"august\",\"september\",\"october\",\"november\",\"december\"];const gasValid=months.every(month=>formData.monthlyGasUsage[month]&&formData.monthlyGasUsage[month].trim()!==\"\");if(!gasValid)return false;}else if(formData.knowsMonthlyGasUsage===\"no\"){if(!formData.knowsAnnualGasUsage){return false;}if(formData.knowsAnnualGasUsage===\"yes\"&&!formData.annualGasUsage){return false;}}}// Validate boiler efficiency if using any boiler\nif(usesBoiler()){if(!formData.boilerEfficiency){return false;}}return true;};return/*#__PURE__*/_jsxs(\"div\",{className:\"step-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"step-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Energy Demand\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Tell us about your household's energy usage patterns to calculate accurate renewable energy recommendations.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"householdSize\",children:\"How many people live in your household regularly?\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"householdSize\",name:\"householdSize\",value:formData.householdSize,onChange:handleChange,placeholder:\"Enter number of people\",min:\"1\",max:\"20\",className:\"form-input\",required:true})]}),/*#__PURE__*/_jsx(ElectricityUsageSection,{formData:formData,onKnowsMonthlyUsageChange:handleKnowsMonthlyUsageChange,onKnowsAnnualUsageChange:handleKnowsAnnualUsageChange,onMonthlyElectricityChange:handleMonthlyElectricityChange,onAnnualElectricityChange:handleAnnualElectricityChange}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"floorArea\",children:\"What is your approximate floor area? (m\\xB2)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"floorArea\",name:\"floorArea\",value:formData.floorArea,onChange:handleChange,placeholder:\"Enter floor area in square metres\",min:\"1\",step:\"0.1\",className:\"form-input\",required:true})]}),/*#__PURE__*/_jsx(HeatingSection,{formData:formData,onHeatingMethodChange:handleHeatingMethodChange,onHeatPumpCOPChange:handleHeatPumpCOPChange,needsGasUsage:needsGasUsage()}),/*#__PURE__*/_jsx(HotWaterSection,{formData:formData,onHotWaterMethodChange:handleHotWaterMethodChange,onHotWaterHeatPumpCOPChange:handleHotWaterHeatPumpCOPChange,needsGasUsage:needsGasUsage(),onKnowsMonthlyGasUsageChange:handleKnowsMonthlyGasUsageChange,onKnowsAnnualGasUsageChange:handleKnowsAnnualGasUsageChange,onMonthlyGasChange:handleMonthlyGasChange,onAnnualGasUsageChange:handleAnnualGasUsageChange}),usesBoiler()&&/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-label-with-help\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"boilerEfficiency\",children:\"What is your boiler's efficiency? (%)\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"field-help-btn\",onClick:()=>openHelpModal('boilerEfficiency'),\"aria-label\":\"Boiler Efficiency Help\",children:\"?\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"boilerEfficiency\",name:\"boilerEfficiency\",value:formData.boilerEfficiency,onChange:handleChange,placeholder:\"If you don't know, enter 92\",min:\"50\",max:\"98\",step:\"1\",className:\"form-input\",required:true}),/*#__PURE__*/_jsx(\"small\",{className:\"input-help\",children:\"Enter the efficiency percentage (typically 60-95%). If unsure, use 92% as a standard estimate.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"daytimeHomeHabits\",children:\"What are your typical daytime home habits?\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"daytimeHomeHabits\",name:\"daytimeHomeHabits\",value:formData.daytimeHomeHabits,onChange:handleChange,className:\"form-select\",required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select your daytime habits\"}),/*#__PURE__*/_jsx(\"option\",{value:\"mostly-home\",children:\"Mostly at home\"}),/*#__PURE__*/_jsx(\"option\",{value:\"half-day-home\",children:\"At home half the day\"}),/*#__PURE__*/_jsx(\"option\",{value:\"mostly-away\",children:\"Mostly away from home\"})]})]}),activeHelpModal==='boilerEfficiency'&&/*#__PURE__*/_jsx(\"div\",{className:\"help-modal-overlay\",onClick:closeHelpModal,children:/*#__PURE__*/_jsxs(\"div\",{className:\"help-modal\",onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"help-modal-header\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Boiler Efficiency Guide\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"close-btn\",onClick:closeHelpModal,\"aria-label\":\"Close\",children:\"\\xD7\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"help-modal-content\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Boiler efficiency indicates how much of the fuel is converted into useful heat. Here's how to estimate efficiency based on your boiler's age:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"efficiency-guide\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"efficiency-item\",children:[/*#__PURE__*/_jsx(\"h5\",{children:\"New Boilers (0-5 years)\"}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Efficiency: 92-95%\"}),/*#__PURE__*/_jsx(\"br\",{}),\"Since April 2018, all new boilers sold in the UK must be A-rated, meaning they are at least 92% efficient.\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"efficiency-item\",children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Modern Boilers (6-15 years)\"}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Efficiency: 80-85%\"}),/*#__PURE__*/_jsx(\"br\",{}),\"Boilers around 15 years old might be in the 80-85% efficiency range.\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"efficiency-item\",children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Older Boilers (16-25 years)\"}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Efficiency: 75-80%\"}),/*#__PURE__*/_jsx(\"br\",{}),\"Boilers aged around 20 years may be around 75% efficient.\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"efficiency-item\",children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Very Old Boilers (25+ years)\"}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Efficiency: 60-70%\"}),/*#__PURE__*/_jsx(\"br\",{}),\"Boilers older than 25 years can be as low as 60-70% efficient and should be considered for replacement.\"]})]})]})]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"button-group\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-secondary\",onClick:onBack,children:\"Back\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-primary \".concat(!isFormValid()?'disabled':''),onClick:handleNext,disabled:!isFormValid(),children:\"Next: Solar Configuration\"})]})]});};export default EnergyDemand;","map":{"version":3,"names":["React","useState","ElectricityUsageSection","HeatingSection","HotWaterSection","jsx","_jsx","jsxs","_jsxs","EnergyDemand","_ref","data","onDataChange","onNext","onBack","formData","setFormData","_objectSpread","householdSize","knowsMonthlyUsage","monthlyElectricityUsage","january","february","march","april","may","june","july","august","september","october","november","december","knowsAnnualUsage","annualElectricityUsage","floorArea","heatingMethod","hotWaterMethod","daytimeHomeHabits","knowsMonthlyGasUsage","monthlyGasUsage","knowsAnnualGasUsage","annualGasUsage","heatPumpCOP","hotWaterHeatPumpCOP","boilerEfficiency","activeHelpModal","setActiveHelpModal","needsGasUsage","usesBoiler","updateFormData","updates","prev","handleChange","e","name","value","target","openHelpModal","modalType","closeHelpModal","handleKnowsMonthlyUsageChange","handleKnowsAnnualUsageChange","handleMonthlyElectricityChange","month","updatedMonthlyUsage","handleAnnualElectricityChange","handleHeatingMethodChange","handleHotWaterMethodChange","handleKnowsMonthlyGasUsageChange","handleKnowsAnnualGasUsageChange","handleMonthlyGasChange","updatedMonthlyGasUsage","handleAnnualGasUsageChange","handleHeatPumpCOPChange","handleHotWaterHeatPumpCOPChange","handleNext","isFormValid","months","electricityValid","every","trim","gasValid","className","children","htmlFor","type","id","onChange","placeholder","min","max","required","onKnowsMonthlyUsageChange","onKnowsAnnualUsageChange","onMonthlyElectricityChange","onAnnualElectricityChange","step","onHeatingMethodChange","onHeatPumpCOPChange","onHotWaterMethodChange","onHotWaterHeatPumpCOPChange","onKnowsMonthlyGasUsageChange","onKnowsAnnualGasUsageChange","onMonthlyGasChange","onAnnualGasUsageChange","onClick","stopPropagation","concat","disabled"],"sources":["/Users/xuefei/renewables/calculator/renewableCalculator.ui/src/components/steps/EnergyDemand.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport ElectricityUsageSection from \"./energy-demand/ElectricityUsageSection\";\nimport HeatingSection from \"./energy-demand/HeatingSection\";\nimport HotWaterSection from \"./energy-demand/HotWaterSection\";\n\nconst EnergyDemand = ({ data, onDataChange, onNext, onBack }) => {\n  const [formData, setFormData] = useState({\n    householdSize: data.householdSize || \"\",\n    knowsMonthlyUsage: data.knowsMonthlyUsage || \"\",\n    monthlyElectricityUsage: data.monthlyElectricityUsage || {\n      january: \"\", february: \"\", march: \"\", april: \"\", may: \"\", june: \"\",\n      july: \"\", august: \"\", september: \"\", october: \"\", november: \"\", december: \"\"\n    },\n    knowsAnnualUsage: data.knowsAnnualUsage || \"\",\n    annualElectricityUsage: data.annualElectricityUsage || \"\",\n    floorArea: data.floorArea || \"\",\n    heatingMethod: data.heatingMethod || \"\",\n    hotWaterMethod: data.hotWaterMethod || \"\",\n    daytimeHomeHabits: data.daytimeHomeHabits || \"\",\n    knowsMonthlyGasUsage: data.knowsMonthlyGasUsage || \"\",\n    monthlyGasUsage: data.monthlyGasUsage || {\n      january: \"\", february: \"\", march: \"\", april: \"\", may: \"\", june: \"\",\n      july: \"\", august: \"\", september: \"\", october: \"\", november: \"\", december: \"\"\n    },\n    knowsAnnualGasUsage: data.knowsAnnualGasUsage || \"\",\n    annualGasUsage: data.annualGasUsage || \"\",\n    heatPumpCOP: data.heatPumpCOP || \"3.0\",\n    hotWaterHeatPumpCOP: data.hotWaterHeatPumpCOP || \"3.0\",\n    boilerEfficiency: data.boilerEfficiency || \"\",\n    ...data\n  });\n\n  // Help modal state\n  const [activeHelpModal, setActiveHelpModal] = useState(null);\n\n  // Helper function to check if gas is needed for either heating or hot water\n  const needsGasUsage = () => {\n    return formData.heatingMethod === \"gas boiler\" || formData.hotWaterMethod === \"gas boiler\";\n  };\n\n  // Helper function to check if any boiler is being used\n  const usesBoiler = () => {\n    return formData.heatingMethod === \"gas boiler\" || formData.hotWaterMethod === \"gas boiler\";\n  };\n\n  const updateFormData = (updates) => {\n    setFormData(prev => ({\n      ...prev,\n      ...updates\n    }));\n    onDataChange(updates);\n  };\n\n  // Basic form handlers\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    updateFormData({ [name]: value });\n  };\n\n  // Help modal handlers\n  const openHelpModal = (modalType) => {\n    setActiveHelpModal(modalType);\n  };\n\n  const closeHelpModal = () => {\n    setActiveHelpModal(null);\n  };\n\n  // Electricity usage handlers\n  const handleKnowsMonthlyUsageChange = (e) => {\n    const value = e.target.value;\n    let updates = { knowsMonthlyUsage: value };\n    \n    if (value === \"yes\") {\n      updates.knowsAnnualUsage = \"\";\n      updates.annualElectricityUsage = \"\";\n    } else if (value === \"no\") {\n      updates.monthlyElectricityUsage = {\n        january: \"\", february: \"\", march: \"\", april: \"\", may: \"\", june: \"\",\n        july: \"\", august: \"\", september: \"\", october: \"\", november: \"\", december: \"\"\n      };\n    }\n    updateFormData(updates);\n  };\n\n  const handleKnowsAnnualUsageChange = (e) => {\n    const value = e.target.value;\n    let updates = { knowsAnnualUsage: value };\n    \n    if (value === \"yes\") {\n      updates.monthlyElectricityUsage = {\n        january: \"\", february: \"\", march: \"\", april: \"\", may: \"\", june: \"\",\n        july: \"\", august: \"\", september: \"\", october: \"\", november: \"\", december: \"\"\n      };\n    }\n    updateFormData(updates);\n  };\n\n  const handleMonthlyElectricityChange = (month, value) => {\n    const updatedMonthlyUsage = {\n      ...formData.monthlyElectricityUsage,\n      [month]: value\n    };\n    updateFormData({ monthlyElectricityUsage: updatedMonthlyUsage });\n  };\n\n  const handleAnnualElectricityChange = (e) => {\n    updateFormData({ annualElectricityUsage: e.target.value });\n  };\n\n  // Heating method handlers\n  const handleHeatingMethodChange = (e) => {\n    const value = e.target.value;\n    let updates = { heatingMethod: value };\n    \n    // If neither heating nor hot water will need gas after this change, clear gas data\n    if (value !== \"gas boiler\" && formData.hotWaterMethod !== \"gas boiler\") {\n      updates = {\n        ...updates,\n        knowsMonthlyGasUsage: \"\",\n        monthlyGasUsage: {\n          january: \"\", february: \"\", march: \"\", april: \"\", may: \"\", june: \"\",\n          july: \"\", august: \"\", september: \"\", october: \"\", november: \"\", december: \"\"\n        },\n        knowsAnnualGasUsage: \"\",\n        annualGasUsage: \"\"\n      };\n    }\n    \n    if (value !== \"heat pumps\") {\n      updates.heatPumpCOP = \"3.0\";\n    }\n    updateFormData(updates);\n  };\n\n  // Hot water method handlers\n  const handleHotWaterMethodChange = (e) => {\n    const value = e.target.value;\n    let updates = { hotWaterMethod: value };\n    \n    // If neither heating nor hot water will need gas after this change, clear gas data\n    if (value !== \"gas boiler\" && formData.heatingMethod !== \"gas boiler\") {\n      updates = {\n        ...updates,\n        knowsMonthlyGasUsage: \"\",\n        monthlyGasUsage: {\n          january: \"\", february: \"\", march: \"\", april: \"\", may: \"\", june: \"\",\n          july: \"\", august: \"\", september: \"\", october: \"\", november: \"\", december: \"\"\n        },\n        knowsAnnualGasUsage: \"\",\n        annualGasUsage: \"\"\n      };\n    }\n    \n    if (value !== \"heat pumps\") {\n      updates.hotWaterHeatPumpCOP = \"3.0\";\n    }\n    updateFormData(updates);\n  };\n\n  const handleKnowsMonthlyGasUsageChange = (e) => {\n    const value = e.target.value;\n    let updates = { knowsMonthlyGasUsage: value };\n    \n    if (value === \"yes\") {\n      updates.knowsAnnualGasUsage = \"\";\n      updates.annualGasUsage = \"\";\n    } else if (value === \"no\") {\n      updates.monthlyGasUsage = {\n        january: \"\", february: \"\", march: \"\", april: \"\", may: \"\", june: \"\",\n        july: \"\", august: \"\", september: \"\", october: \"\", november: \"\", december: \"\"\n      };\n    }\n    updateFormData(updates);\n  };\n\n  const handleKnowsAnnualGasUsageChange = (e) => {\n    const value = e.target.value;\n    let updates = { knowsAnnualGasUsage: value };\n    \n    if (value === \"yes\") {\n      updates.monthlyGasUsage = {\n        january: \"\", february: \"\", march: \"\", april: \"\", may: \"\", june: \"\",\n        july: \"\", august: \"\", september: \"\", october: \"\", november: \"\", december: \"\"\n      };\n    }\n    updateFormData(updates);\n  };\n\n  const handleMonthlyGasChange = (month, value) => {\n    const updatedMonthlyGasUsage = {\n      ...formData.monthlyGasUsage,\n      [month]: value\n    };\n    updateFormData({ monthlyGasUsage: updatedMonthlyGasUsage });\n  };\n\n  const handleAnnualGasUsageChange = (e) => {\n    updateFormData({ annualGasUsage: e.target.value });\n  };\n\n  const handleHeatPumpCOPChange = (e) => {\n    updateFormData({ heatPumpCOP: e.target.value });\n  };\n\n  const handleHotWaterHeatPumpCOPChange = (e) => {\n    updateFormData({ hotWaterHeatPumpCOP: e.target.value });\n  };\n\n  const handleNext = () => {\n    onNext();\n  };\n\n  const isFormValid = () => {\n    if (!formData.householdSize || !formData.knowsMonthlyUsage || !formData.floorArea || !formData.heatingMethod || !formData.hotWaterMethod || !formData.daytimeHomeHabits) {\n      return false;\n    }\n    \n    // Validate electricity usage\n    if (formData.knowsMonthlyUsage === \"yes\") {\n      const months = [\"january\", \"february\", \"march\", \"april\", \"may\", \"june\", \n                     \"july\", \"august\", \"september\", \"october\", \"november\", \"december\"];\n      const electricityValid = months.every(month => formData.monthlyElectricityUsage[month] && \n                                   formData.monthlyElectricityUsage[month].trim() !== \"\");\n      if (!electricityValid) return false;\n    } else if (formData.knowsMonthlyUsage === \"no\") {\n      if (!formData.knowsAnnualUsage) {\n        return false;\n      }\n      if (formData.knowsAnnualUsage === \"yes\" && !formData.annualElectricityUsage) {\n        return false;\n      }\n    }\n    \n    // Validate gas usage if needed for either heating or hot water\n    if (needsGasUsage()) {\n      if (!formData.knowsMonthlyGasUsage) {\n        return false;\n      }\n      if (formData.knowsMonthlyGasUsage === \"yes\") {\n        const months = [\"january\", \"february\", \"march\", \"april\", \"may\", \"june\", \n                       \"july\", \"august\", \"september\", \"october\", \"november\", \"december\"];\n        const gasValid = months.every(month => formData.monthlyGasUsage[month] && \n                                     formData.monthlyGasUsage[month].trim() !== \"\");\n        if (!gasValid) return false;\n      } else if (formData.knowsMonthlyGasUsage === \"no\") {\n        if (!formData.knowsAnnualGasUsage) {\n          return false;\n        }\n        if (formData.knowsAnnualGasUsage === \"yes\" && !formData.annualGasUsage) {\n          return false;\n        }\n      }\n    }\n\n    // Validate boiler efficiency if using any boiler\n    if (usesBoiler()) {\n      if (!formData.boilerEfficiency) {\n        return false;\n      }\n    }\n    \n    return true;\n  };\n\n  return (\n    <div className=\"step-container\">\n      <div className=\"step-header\">\n        <h2>Energy Demand</h2>\n        <p>Tell us about your household's energy usage patterns to calculate accurate renewable energy recommendations.</p>\n      </div>\n\n      <div className=\"form-group\">\n        <label htmlFor=\"householdSize\">How many people live in your household regularly?</label>\n        <input\n          type=\"number\"\n          id=\"householdSize\"\n          name=\"householdSize\"\n          value={formData.householdSize}\n          onChange={handleChange}\n          placeholder=\"Enter number of people\"\n          min=\"1\"\n          max=\"20\"\n          className=\"form-input\"\n          required\n        />\n      </div>\n\n      <ElectricityUsageSection\n        formData={formData}\n        onKnowsMonthlyUsageChange={handleKnowsMonthlyUsageChange}\n        onKnowsAnnualUsageChange={handleKnowsAnnualUsageChange}\n        onMonthlyElectricityChange={handleMonthlyElectricityChange}\n        onAnnualElectricityChange={handleAnnualElectricityChange}\n      />\n\n      <div className=\"form-group\">\n        <label htmlFor=\"floorArea\">What is your approximate floor area? (m²)</label>\n        <input\n          type=\"number\"\n          id=\"floorArea\"\n          name=\"floorArea\"\n          value={formData.floorArea}\n          onChange={handleChange}\n          placeholder=\"Enter floor area in square metres\"\n          min=\"1\"\n          step=\"0.1\"\n          className=\"form-input\"\n          required\n        />\n      </div>\n\n      <HeatingSection\n        formData={formData}\n        onHeatingMethodChange={handleHeatingMethodChange}\n        onHeatPumpCOPChange={handleHeatPumpCOPChange}\n        needsGasUsage={needsGasUsage()}\n      />\n\n      <HotWaterSection\n        formData={formData}\n        onHotWaterMethodChange={handleHotWaterMethodChange}\n        onHotWaterHeatPumpCOPChange={handleHotWaterHeatPumpCOPChange}\n        needsGasUsage={needsGasUsage()}\n        onKnowsMonthlyGasUsageChange={handleKnowsMonthlyGasUsageChange}\n        onKnowsAnnualGasUsageChange={handleKnowsAnnualGasUsageChange}\n        onMonthlyGasChange={handleMonthlyGasChange}\n        onAnnualGasUsageChange={handleAnnualGasUsageChange}\n      />\n\n      {/* Boiler Efficiency Section */}\n      {usesBoiler() && (\n        <div className=\"form-group\">\n          <div className=\"form-label-with-help\">\n            <label htmlFor=\"boilerEfficiency\">What is your boiler's efficiency? (%)</label>\n            <button \n              type=\"button\"\n              className=\"field-help-btn\"\n              onClick={() => openHelpModal('boilerEfficiency')}\n              aria-label=\"Boiler Efficiency Help\"\n            >\n              ?\n            </button>\n          </div>\n          <input\n            type=\"number\"\n            id=\"boilerEfficiency\"\n            name=\"boilerEfficiency\"\n            value={formData.boilerEfficiency}\n            onChange={handleChange}\n            placeholder=\"If you don't know, enter 92\"\n            min=\"50\"\n            max=\"98\"\n            step=\"1\"\n            className=\"form-input\"\n            required\n          />\n          <small className=\"input-help\">Enter the efficiency percentage (typically 60-95%). If unsure, use 92% as a standard estimate.</small>\n        </div>\n      )}\n\n      <div className=\"form-group\">\n        <label htmlFor=\"daytimeHomeHabits\">What are your typical daytime home habits?</label>\n        <select\n          id=\"daytimeHomeHabits\"\n          name=\"daytimeHomeHabits\"\n          value={formData.daytimeHomeHabits}\n          onChange={handleChange}\n          className=\"form-select\"\n          required\n        >\n          <option value=\"\">Select your daytime habits</option>\n          <option value=\"mostly-home\">Mostly at home</option>\n          <option value=\"half-day-home\">At home half the day</option>\n          <option value=\"mostly-away\">Mostly away from home</option>\n        </select>\n      </div>\n\n      {/* Help Modal */}\n      {activeHelpModal === 'boilerEfficiency' && (\n        <div className=\"help-modal-overlay\" onClick={closeHelpModal}>\n          <div className=\"help-modal\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"help-modal-header\">\n              <h4>Boiler Efficiency Guide</h4>\n              <button \n                type=\"button\"\n                className=\"close-btn\"\n                onClick={closeHelpModal}\n                aria-label=\"Close\"\n              >\n                ×\n              </button>\n            </div>\n            <div className=\"help-modal-content\">\n              <p>Boiler efficiency indicates how much of the fuel is converted into useful heat. Here's how to estimate efficiency based on your boiler's age:</p>\n              \n              <div className=\"efficiency-guide\">\n                <div className=\"efficiency-item\">\n                  <h5>New Boilers (0-5 years)</h5>\n                  <p><strong>Efficiency: 92-95%</strong><br />\n                  Since April 2018, all new boilers sold in the UK must be A-rated, meaning they are at least 92% efficient.</p>\n                </div>\n                \n                <div className=\"efficiency-item\">\n                  <h5>Modern Boilers (6-15 years)</h5>\n                  <p><strong>Efficiency: 80-85%</strong><br />\n                  Boilers around 15 years old might be in the 80-85% efficiency range.</p>\n                </div>\n                \n                <div className=\"efficiency-item\">\n                  <h5>Older Boilers (16-25 years)</h5>\n                  <p><strong>Efficiency: 75-80%</strong><br />\n                  Boilers aged around 20 years may be around 75% efficient.</p>\n                </div>\n                \n                <div className=\"efficiency-item\">\n                  <h5>Very Old Boilers (25+ years)</h5>\n                  <p><strong>Efficiency: 60-70%</strong><br />\n                  Boilers older than 25 years can be as low as 60-70% efficient and should be considered for replacement.</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <div className=\"button-group\">\n        <button \n          type=\"button\" \n          className=\"btn btn-secondary\"\n          onClick={onBack}\n        >\n          Back\n        </button>\n        <button \n          type=\"button\" \n          className={`btn btn-primary ${!isFormValid() ? 'disabled' : ''}`}\n          onClick={handleNext}\n          disabled={!isFormValid()}\n        >\n          Next: Solar Configuration\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default EnergyDemand; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}