{"ast":null,"code":"var _jsxFileName = \"/Users/xuefei/Desktop/calculator00/calculator/renewableCalculator.ui/src/components/steps/Results.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Results = ({\n  data,\n  calculationResult,\n  setCalculationResult,\n  onBack\n}) => {\n  _s();\n  const [results, setResults] = useState(null);\n  const [selectedPlanIndex, setSelectedPlanIndex] = useState(0);\n  useEffect(() => {\n    calculateResults();\n  }, [data]);\n  const calculateResults = () => {\n    // Handle both old and new data formats\n    let plansToCalculate = [];\n    if (data.upgradePlans && Array.isArray(data.upgradePlans)) {\n      // New format with multiple plans\n      plansToCalculate = data.upgradePlans.filter(plan => plan.selectedProducts && plan.selectedProducts.length > 0);\n    } else if (data.selectedProducts || data.productConfigurations) {\n      // Old format - convert to plan format\n      plansToCalculate = [{\n        id: 1,\n        name: \"Your Plan\",\n        selectedProducts: data.selectedProducts || [],\n        productConfigurations: data.productConfigurations || {}\n      }];\n    }\n    if (plansToCalculate.length === 0) {\n      setResults({\n        plans: [],\n        hasValidPlans: false\n      });\n      return;\n    }\n\n    // Calculate results for all plans\n    const planResults = plansToCalculate.map(plan => {\n      const selectedProducts = plan.selectedProducts || [];\n      return {\n        planId: plan.id,\n        planName: plan.name,\n        selectedProducts,\n        installationCosts: calculateInstallationCosts(selectedProducts, plan.productConfigurations || {}),\n        grantsLoans: calculateGrantsLoans(selectedProducts, calculateInstallationCosts(selectedProducts, plan.productConfigurations || {}), data),\n        monthlyData: calculateMonthlyData(selectedProducts, plan.productConfigurations || {}, data),\n        carbonImpact: calculateCarbonImpact(selectedProducts, plan.productConfigurations || {}, data)\n      };\n    });\n    setResults({\n      plans: planResults,\n      hasValidPlans: true,\n      isComparison: planResults.length > 1\n    });\n  };\n  const calculateInstallationCosts = (selectedProducts, productConfigurations) => {\n    let equipmentCosts = 0;\n    let labourCosts = 0;\n    const breakdown = [];\n    selectedProducts.forEach(product => {\n      const config = productConfigurations[product];\n      if (!config) return;\n      let unitEquipmentCost = 0;\n      let unitLabourCost = 0;\n      let systemName = \"\";\n      let capacity = 0;\n\n      // Map product names from old to new format\n      const productKey = product.replace('-', '');\n      if (product === 'solar-panels' || productKey === 'solarPanels') {\n        if (config.selectionType === 'predefined' && config.selectedModel) {\n          var _model$price, _model$capacity;\n          const model = config.selectedModel;\n          unitEquipmentCost = parseFloat((_model$price = model.price) === null || _model$price === void 0 ? void 0 : _model$price.replace(/[£,]/g, '')) || 8000;\n          capacity = parseFloat((_model$capacity = model.capacity) === null || _model$capacity === void 0 ? void 0 : _model$capacity.replace(/[kW]/g, '')) || 4;\n          systemName = `${model.brand} ${model.model}`;\n        } else if (config.selectionType === 'system-recommendation' && config.recommendedModel) {\n          var _model$price2, _model$capacity2;\n          const model = config.recommendedModel;\n          unitEquipmentCost = parseFloat((_model$price2 = model.price) === null || _model$price2 === void 0 ? void 0 : _model$price2.replace(/[£,]/g, '')) || 8000;\n          capacity = parseFloat((_model$capacity2 = model.capacity) === null || _model$capacity2 === void 0 ? void 0 : _model$capacity2.replace(/[kW]/g, '')) || 4;\n          systemName = `${model.brand} ${model.model}`;\n        } else if (config.selectionType === 'custom') {\n          var _config$customPrice, _config$customCapacit;\n          unitEquipmentCost = parseFloat((_config$customPrice = config.customPrice) === null || _config$customPrice === void 0 ? void 0 : _config$customPrice.replace(/[£,]/g, '')) || 8000;\n          capacity = parseFloat((_config$customCapacit = config.customCapacity) === null || _config$customCapacit === void 0 ? void 0 : _config$customCapacit.replace(/[kW]/g, '')) || 4;\n          systemName = `${config.customBrand || 'Custom'} ${config.customModel || 'Solar Panel'}`;\n        } else {\n          unitEquipmentCost = 8000;\n          capacity = 4;\n          systemName = \"Solar Panel System\";\n        }\n        unitLabourCost = unitEquipmentCost * 0.25; // 25% of equipment cost\n      } else if (product === 'heat-pump' || productKey === 'heatPump') {\n        if (config.selectionType === 'predefined' && config.selectedModel) {\n          var _model$price3, _model$capacity3;\n          const model = config.selectedModel;\n          unitEquipmentCost = parseFloat((_model$price3 = model.price) === null || _model$price3 === void 0 ? void 0 : _model$price3.replace(/[£,]/g, '')) || 12000;\n          capacity = parseFloat((_model$capacity3 = model.capacity) === null || _model$capacity3 === void 0 ? void 0 : _model$capacity3.replace(/[kW]/g, '')) || 12;\n          systemName = `${model.brand} ${model.model}`;\n        } else if (config.selectionType === 'system-recommendation' && config.recommendedModel) {\n          var _model$price4, _model$capacity4;\n          const model = config.recommendedModel;\n          unitEquipmentCost = parseFloat((_model$price4 = model.price) === null || _model$price4 === void 0 ? void 0 : _model$price4.replace(/[£,]/g, '')) || 12000;\n          capacity = parseFloat((_model$capacity4 = model.capacity) === null || _model$capacity4 === void 0 ? void 0 : _model$capacity4.replace(/[kW]/g, '')) || 12;\n          systemName = `${model.brand} ${model.model}`;\n        } else if (config.selectionType === 'custom') {\n          var _config$customPrice2, _config$customCapacit2;\n          unitEquipmentCost = parseFloat((_config$customPrice2 = config.customPrice) === null || _config$customPrice2 === void 0 ? void 0 : _config$customPrice2.replace(/[£,]/g, '')) || 12000;\n          capacity = parseFloat((_config$customCapacit2 = config.customCapacity) === null || _config$customCapacit2 === void 0 ? void 0 : _config$customCapacit2.replace(/[kW]/g, '')) || 12;\n          systemName = `${config.customBrand || 'Custom'} ${config.customModel || 'Heat Pump'}`;\n        } else {\n          unitEquipmentCost = 12000;\n          capacity = 12;\n          systemName = \"Heat Pump System\";\n        }\n        unitLabourCost = unitEquipmentCost * 0.3; // 30% of equipment cost\n      } else if (product === 'battery-storage' || productKey === 'batteryStorage') {\n        if (config.selectionType === 'predefined' && config.selectedModel) {\n          var _model$price5, _model$capacity5;\n          const model = config.selectedModel;\n          unitEquipmentCost = parseFloat((_model$price5 = model.price) === null || _model$price5 === void 0 ? void 0 : _model$price5.replace(/[£,]/g, '')) || 10000;\n          capacity = parseFloat((_model$capacity5 = model.capacity) === null || _model$capacity5 === void 0 ? void 0 : _model$capacity5.replace(/[kWh]/g, '')) || 13.5;\n          systemName = `${model.brand} ${model.model}`;\n        } else if (config.selectionType === 'system-recommendation' && config.recommendedModel) {\n          var _model$price6, _model$capacity6;\n          const model = config.recommendedModel;\n          unitEquipmentCost = parseFloat((_model$price6 = model.price) === null || _model$price6 === void 0 ? void 0 : _model$price6.replace(/[£,]/g, '')) || 10000;\n          capacity = parseFloat((_model$capacity6 = model.capacity) === null || _model$capacity6 === void 0 ? void 0 : _model$capacity6.replace(/[kWh]/g, '')) || 13.5;\n          systemName = `${model.brand} ${model.model}`;\n        } else if (config.selectionType === 'custom') {\n          var _config$customPrice3, _config$customCapacit3;\n          unitEquipmentCost = parseFloat((_config$customPrice3 = config.customPrice) === null || _config$customPrice3 === void 0 ? void 0 : _config$customPrice3.replace(/[£,]/g, '')) || 10000;\n          capacity = parseFloat((_config$customCapacit3 = config.customCapacity) === null || _config$customCapacit3 === void 0 ? void 0 : _config$customCapacit3.replace(/[kWh]/g, '')) || 13.5;\n          systemName = `${config.customBrand || 'Custom'} ${config.customModel || 'Battery Storage'}`;\n        } else {\n          unitEquipmentCost = 10000;\n          capacity = 13.5;\n          systemName = \"Battery Storage System\";\n        }\n        unitLabourCost = unitEquipmentCost * 0.2; // 20% of equipment cost\n      }\n      const quantity = parseInt(config.quantity === 'custom' ? config.customQuantity : config.quantity) || 1;\n      const totalEquipment = unitEquipmentCost * quantity;\n      const totalLabour = unitLabourCost * quantity;\n      equipmentCosts += totalEquipment;\n      labourCosts += totalLabour;\n      breakdown.push({\n        system: systemName,\n        capacity: `${capacity}${product === 'solar-panels' || productKey === 'solarPanels' ? 'kW' : product === 'battery-storage' || productKey === 'batteryStorage' ? 'kWh' : 'kW'}`,\n        quantity,\n        equipmentCost: totalEquipment,\n        labourCost: totalLabour,\n        total: totalEquipment + totalLabour\n      });\n    });\n    const vatRate = 0.05; // 5% VAT for renewable energy systems\n    const subtotal = equipmentCosts + labourCosts;\n    const vat = subtotal * vatRate;\n    const total = subtotal + vat;\n    return {\n      equipmentCosts,\n      labourCosts,\n      subtotal,\n      vat,\n      total,\n      breakdown\n    };\n  };\n  const calculateGrantsLoans = (selectedProducts, installationCosts, data) => {\n    var _data$houseDetails;\n    const grants = [];\n    const loans = [];\n    let totalGrantValue = 0;\n\n    // Boiler Upgrade Scheme (BUS) for heat pumps\n    if (selectedProducts.includes('heatPump')) {\n      const busGrant = {\n        name: \"Boiler Upgrade Scheme (BUS)\",\n        amount: 7500,\n        description: \"Government grant for air source heat pump installations\",\n        eligibility: \"Owner-occupied properties, replacing fossil fuel heating\",\n        status: \"Eligible\"\n      };\n      grants.push(busGrant);\n      totalGrantValue += busGrant.amount;\n    }\n\n    // Smart Export Guarantee (SEG) for solar\n    if (selectedProducts.includes('solarPanels')) {\n      grants.push({\n        name: \"Smart Export Guarantee (SEG)\",\n        amount: \"Variable\",\n        description: \"Payment for excess solar energy exported to grid\",\n        eligibility: \"Solar installations over 50kW require certification\",\n        status: \"Eligible\",\n        rate: \"5.5p per kWh exported\"\n      });\n    }\n\n    // Green Deal Finance (if applicable)\n    if (installationCosts.total > 5000) {\n      loans.push({\n        name: \"Green Deal Finance\",\n        maxAmount: Math.min(installationCosts.total, 15000),\n        rate: \"6.96% APR\",\n        term: \"Up to 25 years\",\n        description: \"Government-backed loan for energy efficiency improvements\",\n        eligibility: \"Subject to Green Deal assessment\"\n      });\n    }\n\n    // Local authority schemes (example)\n    const houseType = (_data$houseDetails = data.houseDetails) === null || _data$houseDetails === void 0 ? void 0 : _data$houseDetails.houseType;\n    if (houseType && ['detached', 'semi-detached'].includes(houseType)) {\n      loans.push({\n        name: \"Local Authority Interest-Free Loan\",\n        maxAmount: 10000,\n        rate: \"0% APR\",\n        term: \"5-10 years\",\n        description: \"Interest-free loans from participating local authorities\",\n        eligibility: \"Subject to local authority criteria and availability\"\n      });\n    }\n    const netCost = installationCosts.total - totalGrantValue;\n    const paybackPeriod = calculatePaybackPeriod(netCost, selectedProducts, data);\n    return {\n      grants,\n      loans,\n      totalGrantValue,\n      netCost,\n      paybackPeriod\n    };\n  };\n  const calculateMonthlyData = (selectedProducts, upgradePlan, data) => {\n    const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    const monthlyGeneration = [];\n    const monthlySavings = [];\n\n    // Solar generation factors by month (UK average)\n    const solarFactors = [0.4, 0.6, 1.0, 1.4, 1.6, 1.7, 1.6, 1.4, 1.1, 0.7, 0.4, 0.3];\n\n    // Heat pump efficiency factors by month\n    const heatPumpFactors = [0.8, 0.8, 0.9, 1.0, 1.1, 1.2, 1.2, 1.2, 1.1, 1.0, 0.9, 0.8];\n\n    // Get tariff information\n    const tariffs = data.tariffs || {};\n    const electricityRate = tariffs.electricityUnitRate || 0.28;\n    const gasRate = tariffs.gasUnitRate || 0.07;\n    const exportRate = tariffs.feedInTariffRate || 0.055;\n    months.forEach((month, index) => {\n      let monthlyEnergyGeneration = 0;\n      let monthlyCostSavings = 0;\n\n      // Solar generation\n      if (selectedProducts.includes('solarPanels')) {\n        var _solarConfig$selected;\n        const solarConfig = upgradePlan.solarPanels;\n        const capacity = (solarConfig === null || solarConfig === void 0 ? void 0 : (_solarConfig$selected = solarConfig.selectedModel) === null || _solarConfig$selected === void 0 ? void 0 : _solarConfig$selected.capacity) || 4;\n        const quantity = (solarConfig === null || solarConfig === void 0 ? void 0 : solarConfig.quantity) || 1;\n        const totalCapacity = capacity * quantity;\n        const monthlyGeneration = totalCapacity * solarFactors[index] * 30 * 4; // kWh per month\n        monthlyEnergyGeneration += monthlyGeneration;\n\n        // Assume 30% exported, 70% self-consumed\n        const selfConsumed = monthlyGeneration * 0.7;\n        const exported = monthlyGeneration * 0.3;\n        monthlyCostSavings += selfConsumed * electricityRate + exported * exportRate;\n      }\n\n      // Heat pump savings\n      if (selectedProducts.includes('heatPump')) {\n        const baseHeatingCost = 150; // Average monthly heating cost\n        const seasonalFactor = index < 3 || index > 9 ? 1.5 : index < 5 || index > 7 ? 1.2 : 0.7;\n        const monthlyHeatingCost = baseHeatingCost * seasonalFactor;\n        const heatPumpEfficiency = 3.5 * heatPumpFactors[index]; // COP\n        const electricityCost = monthlyHeatingCost / gasRate / heatPumpEfficiency * electricityRate;\n        const savings = monthlyHeatingCost - electricityCost;\n        monthlyCostSavings += Math.max(0, savings);\n      }\n\n      // Battery storage benefits (if applicable)\n      if (selectedProducts.includes('batteryStorage')) {\n        // Additional savings from peak shaving\n        const peakShavingSavings = 25; // Estimated monthly savings\n        monthlyCostSavings += peakShavingSavings;\n      }\n      monthlyGeneration.push({\n        month,\n        generation: Math.round(monthlyEnergyGeneration),\n        unit: 'kWh'\n      });\n      monthlySavings.push({\n        month,\n        savings: Math.round(monthlyCostSavings),\n        unit: '£'\n      });\n    });\n    return {\n      monthlyGeneration,\n      monthlySavings,\n      annualGeneration: monthlyGeneration.reduce((sum, m) => sum + m.generation, 0),\n      annualSavings: monthlySavings.reduce((sum, m) => sum + m.savings, 0)\n    };\n  };\n  const calculateCarbonImpact = (selectedProducts, upgradePlan, data) => {\n    let annualCO2Reduction = 0;\n    const breakdown = [];\n\n    // UK grid carbon intensity: ~0.233 kg CO2 per kWh (2023)\n    const gridCarbonIntensity = 0.233;\n\n    // Gas carbon intensity: ~0.185 kg CO2 per kWh\n    const gasCarbonIntensity = 0.185;\n\n    // Solar panels - direct emission reduction\n    if (selectedProducts.includes('solarPanels')) {\n      var _solarConfig$selected2;\n      const solarConfig = upgradePlan.solarPanels;\n      const capacity = (solarConfig === null || solarConfig === void 0 ? void 0 : (_solarConfig$selected2 = solarConfig.selectedModel) === null || _solarConfig$selected2 === void 0 ? void 0 : _solarConfig$selected2.capacity) || 4;\n      const quantity = (solarConfig === null || solarConfig === void 0 ? void 0 : solarConfig.quantity) || 1;\n      const annualGeneration = capacity * quantity * 1000; // kWh per year\n\n      const co2Saved = annualGeneration * gridCarbonIntensity;\n      annualCO2Reduction += co2Saved;\n      breakdown.push({\n        system: 'Solar Panels',\n        type: 'Direct',\n        reduction: Math.round(co2Saved),\n        description: 'Replaced grid electricity with clean solar energy'\n      });\n    }\n\n    // Heat pump - replacing gas heating\n    if (selectedProducts.includes('heatPump')) {\n      var _data$houseDetails2;\n      const houseSize = ((_data$houseDetails2 = data.houseDetails) === null || _data$houseDetails2 === void 0 ? void 0 : _data$houseDetails2.bedrooms) || 3;\n      const annualHeatingDemand = houseSize * 3000; // kWh thermal energy\n\n      // Gas boiler emissions\n      const gasEmissions = annualHeatingDemand * gasCarbonIntensity;\n\n      // Heat pump emissions (assuming COP of 3.5)\n      const heatPumpElectricity = annualHeatingDemand / 3.5;\n      const heatPumpEmissions = heatPumpElectricity * gridCarbonIntensity;\n      const co2Saved = gasEmissions - heatPumpEmissions;\n      annualCO2Reduction += co2Saved;\n      breakdown.push({\n        system: 'Heat Pump',\n        type: 'Direct',\n        reduction: Math.round(co2Saved),\n        description: 'Replaced gas heating with efficient electric heat pump'\n      });\n    }\n\n    // Battery storage - indirect benefits\n    if (selectedProducts.includes('batteryStorage')) {\n      const indirectReduction = 200; // kg CO2 per year from grid balancing\n      annualCO2Reduction += indirectReduction;\n      breakdown.push({\n        system: 'Battery Storage',\n        type: 'Indirect',\n        reduction: indirectReduction,\n        description: 'Grid balancing and increased renewable energy utilization'\n      });\n    }\n\n    // Calculate equivalents\n    const treesEquivalent = Math.round(annualCO2Reduction / 22); // 22kg CO2 per tree per year\n    const carMilesEquivalent = Math.round(annualCO2Reduction / 0.411 * 1000); // 411g CO2 per mile\n\n    return {\n      annualCO2Reduction: Math.round(annualCO2Reduction),\n      breakdown,\n      equivalents: {\n        trees: treesEquivalent,\n        carMiles: carMilesEquivalent\n      }\n    };\n  };\n  const calculatePaybackPeriod = (netCost, selectedProducts, data) => {\n    // Simplified payback calculation\n    const monthlyData = calculateMonthlyData(selectedProducts, data.upgradePlan, data);\n    const annualSavings = monthlyData.annualSavings;\n    if (annualSavings <= 0) return \"Unable to calculate\";\n    const paybackYears = netCost / annualSavings;\n    return `${Math.round(paybackYears * 10) / 10} years`;\n  };\n  if (!results) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"step-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Calculating Your Results...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please wait while we analyze your renewable energy system configuration.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 7\n    }, this);\n  }\n  if (!results.hasValidPlans) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"step-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Insufficient Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please go back and complete the previous steps to see your results.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-group\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-secondary\",\n          onClick: onBack,\n          children: \"Back to Previous Step\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 7\n    }, this);\n  }\n  const currentPlan = results.plans[selectedPlanIndex] || results.plans[0];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"step-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"step-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Renewable Energy System Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: results.isComparison ? \"Compare your different renewable energy configurations to find the best solution:\" : \"Based on your configuration, here's your comprehensive analysis:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 7\n    }, this), results.isComparison && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-plan-selector\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Plan Comparison\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plan-selector-tabs\",\n        children: results.plans.map((plan, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `plan-selector-tab ${index === selectedPlanIndex ? 'active' : ''}`,\n          onClick: () => setSelectedPlanIndex(index),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"plan-name\",\n            children: plan.planName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"plan-products\",\n            children: [plan.selectedProducts.length, \" product\", plan.selectedProducts.length !== 1 ? 's' : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 17\n          }, this)]\n        }, plan.planId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quick-comparison\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Quick Comparison\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comparison-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comparison-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-label\",\n              children: \"Metric\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 17\n            }, this), results.plans.map((plan, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `plan-column ${index === selectedPlanIndex ? 'active' : ''}`,\n              children: plan.planName\n            }, plan.planId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comparison-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-label\",\n              children: \"Total Cost\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 17\n            }, this), results.plans.map((plan, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `plan-column ${index === selectedPlanIndex ? 'active' : ''}`,\n              children: [\"\\xA3\", plan.installationCosts.total.toLocaleString()]\n            }, plan.planId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comparison-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-label\",\n              children: \"Net Cost (after grants)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 17\n            }, this), results.plans.map((plan, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `plan-column ${index === selectedPlanIndex ? 'active' : ''}`,\n              children: [\"\\xA3\", plan.grantsLoans.netCost.toLocaleString()]\n            }, plan.planId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comparison-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-label\",\n              children: \"Annual Savings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 17\n            }, this), results.plans.map((plan, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `plan-column ${index === selectedPlanIndex ? 'active' : ''}`,\n              children: [\"\\xA3\", plan.monthlyData.annualSavings.toLocaleString()]\n            }, plan.planId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comparison-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-label\",\n              children: \"CO\\u2082 Reduction\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 17\n            }, this), results.plans.map((plan, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `plan-column ${index === selectedPlanIndex ? 'active' : ''}`,\n              children: [plan.carbonImpact.annualCO2Reduction.toLocaleString(), \" kg/year\"]\n            }, plan.planId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comparison-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-label\",\n              children: \"Payback Period\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 17\n            }, this), results.plans.map((plan, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `plan-column ${index === selectedPlanIndex ? 'active' : ''}`,\n              children: plan.grantsLoans.paybackPeriod\n            }, plan.planId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-plan-indicator\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Detailed Analysis for: \", currentPlan.planName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Click on different plan tabs above to view detailed analysis for each configuration.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Installation Costs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cost-summary\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cost-overview\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cost-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Equipment Costs:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"\\xA3\", currentPlan.installationCosts.equipmentCosts.toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cost-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Labour Costs:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"\\xA3\", currentPlan.installationCosts.labourCosts.toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cost-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"VAT (5%):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"\\xA3\", currentPlan.installationCosts.vat.toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cost-item total\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Total Cost:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"\\xA3\", currentPlan.installationCosts.total.toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cost-breakdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"System Breakdown:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 11\n        }, this), currentPlan.installationCosts.breakdown.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"breakdown-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"system-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: item.system\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 560,\n              columnNumber: 17\n            }, this), \" (\", item.capacity, \")\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"quantity\",\n              children: [\"Quantity: \", item.quantity]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"costs\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Equipment: \\xA3\", item.equipmentCost.toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Labour: \\xA3\", item.labourCost.toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"Total: \\xA3\", item.total.toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 566,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Grants & Financial Support\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 9\n      }, this), currentPlan.grantsLoans.grants.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grants-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Available Grants:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 13\n        }, this), currentPlan.grantsLoans.grants.map((grant, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grant-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grant-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: grant.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 583,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"grant-amount\",\n              children: typeof grant.amount === 'number' ? `£${grant.amount.toLocaleString()}` : grant.amount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 584,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 582,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: grant.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grant-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"eligibility\",\n              children: [\"Eligibility: \", grant.eligibility]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 590,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"status\",\n              children: [\"Status: \", grant.status]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 591,\n              columnNumber: 19\n            }, this), grant.rate && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"rate\",\n              children: [\"Rate: \", grant.rate]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 592,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 11\n      }, this), currentPlan.grantsLoans.loans.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loans-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Financing Options:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 13\n        }, this), currentPlan.grantsLoans.loans.map((loan, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loan-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loan-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: loan.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 605,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"loan-amount\",\n              children: [\"Up to \\xA3\", loan.maxAmount.toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 606,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: loan.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 608,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loan-terms\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Rate: \", loan.rate]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 610,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Term: \", loan.term]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 611,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 609,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"eligibility\",\n            children: loan.eligibility\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 613,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"financial-summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Total Installation Cost:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 621,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\xA3\", currentPlan.installationCosts.total.toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 622,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 620,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Available Grants:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"-\\xA3\", currentPlan.grantsLoans.totalGrantValue.toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-item net-cost\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Net Cost:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 629,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\xA3\", currentPlan.grantsLoans.netCost.toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 630,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Estimated Payback Period:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 633,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: currentPlan.grantsLoans.paybackPeriod\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 634,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Monthly Performance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"monthly-charts\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Monthly Cost Savings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 645,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"monthly-data\",\n            children: currentPlan.monthlyData.monthlySavings.map((month, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"month-bar\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"month-label\",\n                children: month.month\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 649,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bar-container\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"savings-bar\",\n                  style: {\n                    height: `${month.savings / Math.max(...currentPlan.monthlyData.monthlySavings.map(m => m.savings)) * 100}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 651,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 650,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"month-value\",\n                children: [\"\\xA3\", month.savings]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 656,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 648,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 646,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"annual-total\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"Annual Savings: \\xA3\", currentPlan.monthlyData.annualSavings.toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 661,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 660,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Monthly Energy Generation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 666,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"monthly-data\",\n            children: currentPlan.monthlyData.monthlyGeneration.map((month, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"month-bar\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"month-label\",\n                children: month.month\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 670,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bar-container\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"generation-bar\",\n                  style: {\n                    height: `${month.generation / Math.max(...currentPlan.monthlyData.monthlyGeneration.map(m => m.generation)) * 100}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 672,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 671,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"month-value\",\n                children: [month.generation, \" kWh\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 677,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 669,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 667,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"annual-total\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"Annual Generation: \", currentPlan.monthlyData.annualGeneration.toLocaleString(), \" kWh\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 682,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 681,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 665,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 643,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 640,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Environmental Impact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 690,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"carbon-summary\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"carbon-headline\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Annual CO\\u2082 Reduction: \", currentPlan.carbonImpact.annualCO2Reduction.toLocaleString(), \" kg\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 694,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"This is equivalent to:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 695,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"equivalents\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"equivalent-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: currentPlan.carbonImpact.equivalents.trees\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 698,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"trees planted\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 699,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 697,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"equivalent-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: currentPlan.carbonImpact.equivalents.carMiles.toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 702,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"car miles avoided\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 703,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 701,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 696,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 693,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"carbon-breakdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Emission Reduction Breakdown:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 710,\n          columnNumber: 11\n        }, this), currentPlan.carbonImpact.breakdown.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"carbon-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"carbon-system\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: item.system\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 714,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"carbon-type\",\n              children: [\"(\", item.type, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 715,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 713,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"carbon-reduction\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [item.reduction.toLocaleString(), \" kg CO\\u2082/year\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 718,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 717,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"carbon-description\",\n            children: item.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 720,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 712,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 709,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 689,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary\",\n        onClick: onBack,\n        children: \"Back to Tariffs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 727,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        children: \"Download Full Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 730,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-outline\",\n        children: \"Share Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 733,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 726,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 436,\n    columnNumber: 5\n  }, this);\n};\n_s(Results, \"4aING0w1Mrng/F2UUMfH2LeSdAo=\");\n_c = Results;\nexport default Results;\nvar _c;\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Results","data","calculationResult","setCalculationResult","onBack","_s","results","setResults","selectedPlanIndex","setSelectedPlanIndex","calculateResults","plansToCalculate","upgradePlans","Array","isArray","filter","plan","selectedProducts","length","productConfigurations","id","name","plans","hasValidPlans","planResults","map","planId","planName","installationCosts","calculateInstallationCosts","grantsLoans","calculateGrantsLoans","monthlyData","calculateMonthlyData","carbonImpact","calculateCarbonImpact","isComparison","equipmentCosts","labourCosts","breakdown","forEach","product","config","unitEquipmentCost","unitLabourCost","systemName","capacity","productKey","replace","selectionType","selectedModel","_model$price","_model$capacity","model","parseFloat","price","brand","recommendedModel","_model$price2","_model$capacity2","_config$customPrice","_config$customCapacit","customPrice","customCapacity","customBrand","customModel","_model$price3","_model$capacity3","_model$price4","_model$capacity4","_config$customPrice2","_config$customCapacit2","_model$price5","_model$capacity5","_model$price6","_model$capacity6","_config$customPrice3","_config$customCapacit3","quantity","parseInt","customQuantity","totalEquipment","totalLabour","push","system","equipmentCost","labourCost","total","vatRate","subtotal","vat","_data$houseDetails","grants","loans","totalGrantValue","includes","busGrant","amount","description","eligibility","status","rate","maxAmount","Math","min","term","houseType","houseDetails","netCost","paybackPeriod","calculatePaybackPeriod","upgradePlan","months","monthlyGeneration","monthlySavings","solarFactors","heatPumpFactors","tariffs","electricityRate","electricityUnitRate","gasRate","gasUnitRate","exportRate","feedInTariffRate","month","index","monthlyEnergyGeneration","monthlyCostSavings","_solarConfig$selected","solarConfig","solarPanels","totalCapacity","selfConsumed","exported","baseHeatingCost","seasonalFactor","monthlyHeatingCost","heatPumpEfficiency","electricityCost","savings","max","peakShavingSavings","generation","round","unit","annualGeneration","reduce","sum","m","annualSavings","annualCO2Reduction","gridCarbonIntensity","gasCarbonIntensity","_solarConfig$selected2","co2Saved","type","reduction","_data$houseDetails2","houseSize","bedrooms","annualHeatingDemand","gasEmissions","heatPumpElectricity","heatPumpEmissions","indirectReduction","treesEquivalent","carMilesEquivalent","equivalents","trees","carMiles","paybackYears","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","currentPlan","toLocaleString","item","grant","loan","style","height","_c","$RefreshReg$"],"sources":["/Users/xuefei/Desktop/calculator00/calculator/renewableCalculator.ui/src/components/steps/Results.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst Results = ({ data, calculationResult, setCalculationResult, onBack }) => {\n  const [results, setResults] = useState(null);\n  const [selectedPlanIndex, setSelectedPlanIndex] = useState(0);\n\n  useEffect(() => {\n    calculateResults();\n  }, [data]);\n\n  const calculateResults = () => {\n    // Handle both old and new data formats\n    let plansToCalculate = [];\n    \n    if (data.upgradePlans && Array.isArray(data.upgradePlans)) {\n      // New format with multiple plans\n      plansToCalculate = data.upgradePlans.filter(plan => \n        plan.selectedProducts && plan.selectedProducts.length > 0\n      );\n    } else if (data.selectedProducts || data.productConfigurations) {\n      // Old format - convert to plan format\n      plansToCalculate = [{\n        id: 1,\n        name: \"Your Plan\",\n        selectedProducts: data.selectedProducts || [],\n        productConfigurations: data.productConfigurations || {}\n      }];\n    }\n\n    if (plansToCalculate.length === 0) {\n      setResults({ plans: [], hasValidPlans: false });\n      return;\n    }\n\n    // Calculate results for all plans\n    const planResults = plansToCalculate.map(plan => {\n      const selectedProducts = plan.selectedProducts || [];\n      \n      return {\n        planId: plan.id,\n        planName: plan.name,\n        selectedProducts,\n        installationCosts: calculateInstallationCosts(selectedProducts, plan.productConfigurations || {}),\n        grantsLoans: calculateGrantsLoans(selectedProducts, calculateInstallationCosts(selectedProducts, plan.productConfigurations || {}), data),\n        monthlyData: calculateMonthlyData(selectedProducts, plan.productConfigurations || {}, data),\n        carbonImpact: calculateCarbonImpact(selectedProducts, plan.productConfigurations || {}, data)\n      };\n    });\n\n    setResults({\n      plans: planResults,\n      hasValidPlans: true,\n      isComparison: planResults.length > 1\n    });\n  };\n\n  const calculateInstallationCosts = (selectedProducts, productConfigurations) => {\n    let equipmentCosts = 0;\n    let labourCosts = 0;\n    const breakdown = [];\n\n    selectedProducts.forEach(product => {\n      const config = productConfigurations[product];\n      if (!config) return;\n\n      let unitEquipmentCost = 0;\n      let unitLabourCost = 0;\n      let systemName = \"\";\n      let capacity = 0;\n\n      // Map product names from old to new format\n      const productKey = product.replace('-', '');\n      \n      if (product === 'solar-panels' || productKey === 'solarPanels') {\n        if (config.selectionType === 'predefined' && config.selectedModel) {\n          const model = config.selectedModel;\n          unitEquipmentCost = parseFloat(model.price?.replace(/[£,]/g, '')) || 8000;\n          capacity = parseFloat(model.capacity?.replace(/[kW]/g, '')) || 4;\n          systemName = `${model.brand} ${model.model}`;\n        } else if (config.selectionType === 'system-recommendation' && config.recommendedModel) {\n          const model = config.recommendedModel;\n          unitEquipmentCost = parseFloat(model.price?.replace(/[£,]/g, '')) || 8000;\n          capacity = parseFloat(model.capacity?.replace(/[kW]/g, '')) || 4;\n          systemName = `${model.brand} ${model.model}`;\n        } else if (config.selectionType === 'custom') {\n          unitEquipmentCost = parseFloat(config.customPrice?.replace(/[£,]/g, '')) || 8000;\n          capacity = parseFloat(config.customCapacity?.replace(/[kW]/g, '')) || 4;\n          systemName = `${config.customBrand || 'Custom'} ${config.customModel || 'Solar Panel'}`;\n        } else {\n          unitEquipmentCost = 8000;\n          capacity = 4;\n          systemName = \"Solar Panel System\";\n        }\n        unitLabourCost = unitEquipmentCost * 0.25; // 25% of equipment cost\n      } else if (product === 'heat-pump' || productKey === 'heatPump') {\n        if (config.selectionType === 'predefined' && config.selectedModel) {\n          const model = config.selectedModel;\n          unitEquipmentCost = parseFloat(model.price?.replace(/[£,]/g, '')) || 12000;\n          capacity = parseFloat(model.capacity?.replace(/[kW]/g, '')) || 12;\n          systemName = `${model.brand} ${model.model}`;\n        } else if (config.selectionType === 'system-recommendation' && config.recommendedModel) {\n          const model = config.recommendedModel;\n          unitEquipmentCost = parseFloat(model.price?.replace(/[£,]/g, '')) || 12000;\n          capacity = parseFloat(model.capacity?.replace(/[kW]/g, '')) || 12;\n          systemName = `${model.brand} ${model.model}`;\n        } else if (config.selectionType === 'custom') {\n          unitEquipmentCost = parseFloat(config.customPrice?.replace(/[£,]/g, '')) || 12000;\n          capacity = parseFloat(config.customCapacity?.replace(/[kW]/g, '')) || 12;\n          systemName = `${config.customBrand || 'Custom'} ${config.customModel || 'Heat Pump'}`;\n        } else {\n          unitEquipmentCost = 12000;\n          capacity = 12;\n          systemName = \"Heat Pump System\";\n        }\n        unitLabourCost = unitEquipmentCost * 0.3; // 30% of equipment cost\n      } else if (product === 'battery-storage' || productKey === 'batteryStorage') {\n        if (config.selectionType === 'predefined' && config.selectedModel) {\n          const model = config.selectedModel;\n          unitEquipmentCost = parseFloat(model.price?.replace(/[£,]/g, '')) || 10000;\n          capacity = parseFloat(model.capacity?.replace(/[kWh]/g, '')) || 13.5;\n          systemName = `${model.brand} ${model.model}`;\n        } else if (config.selectionType === 'system-recommendation' && config.recommendedModel) {\n          const model = config.recommendedModel;\n          unitEquipmentCost = parseFloat(model.price?.replace(/[£,]/g, '')) || 10000;\n          capacity = parseFloat(model.capacity?.replace(/[kWh]/g, '')) || 13.5;\n          systemName = `${model.brand} ${model.model}`;\n        } else if (config.selectionType === 'custom') {\n          unitEquipmentCost = parseFloat(config.customPrice?.replace(/[£,]/g, '')) || 10000;\n          capacity = parseFloat(config.customCapacity?.replace(/[kWh]/g, '')) || 13.5;\n          systemName = `${config.customBrand || 'Custom'} ${config.customModel || 'Battery Storage'}`;\n        } else {\n          unitEquipmentCost = 10000;\n          capacity = 13.5;\n          systemName = \"Battery Storage System\";\n        }\n        unitLabourCost = unitEquipmentCost * 0.2; // 20% of equipment cost\n      }\n\n      const quantity = parseInt(config.quantity === 'custom' ? config.customQuantity : config.quantity) || 1;\n      const totalEquipment = unitEquipmentCost * quantity;\n      const totalLabour = unitLabourCost * quantity;\n\n      equipmentCosts += totalEquipment;\n      labourCosts += totalLabour;\n\n      breakdown.push({\n        system: systemName,\n        capacity: `${capacity}${(product === 'solar-panels' || productKey === 'solarPanels') ? 'kW' : (product === 'battery-storage' || productKey === 'batteryStorage') ? 'kWh' : 'kW'}`,\n        quantity,\n        equipmentCost: totalEquipment,\n        labourCost: totalLabour,\n        total: totalEquipment + totalLabour\n      });\n    });\n\n    const vatRate = 0.05; // 5% VAT for renewable energy systems\n    const subtotal = equipmentCosts + labourCosts;\n    const vat = subtotal * vatRate;\n    const total = subtotal + vat;\n\n    return {\n      equipmentCosts,\n      labourCosts,\n      subtotal,\n      vat,\n      total,\n      breakdown\n    };\n  };\n\n  const calculateGrantsLoans = (selectedProducts, installationCosts, data) => {\n    const grants = [];\n    const loans = [];\n    let totalGrantValue = 0;\n\n    // Boiler Upgrade Scheme (BUS) for heat pumps\n    if (selectedProducts.includes('heatPump')) {\n      const busGrant = {\n        name: \"Boiler Upgrade Scheme (BUS)\",\n        amount: 7500,\n        description: \"Government grant for air source heat pump installations\",\n        eligibility: \"Owner-occupied properties, replacing fossil fuel heating\",\n        status: \"Eligible\"\n      };\n      grants.push(busGrant);\n      totalGrantValue += busGrant.amount;\n    }\n\n    // Smart Export Guarantee (SEG) for solar\n    if (selectedProducts.includes('solarPanels')) {\n      grants.push({\n        name: \"Smart Export Guarantee (SEG)\",\n        amount: \"Variable\",\n        description: \"Payment for excess solar energy exported to grid\",\n        eligibility: \"Solar installations over 50kW require certification\",\n        status: \"Eligible\",\n        rate: \"5.5p per kWh exported\"\n      });\n    }\n\n    // Green Deal Finance (if applicable)\n    if (installationCosts.total > 5000) {\n      loans.push({\n        name: \"Green Deal Finance\",\n        maxAmount: Math.min(installationCosts.total, 15000),\n        rate: \"6.96% APR\",\n        term: \"Up to 25 years\",\n        description: \"Government-backed loan for energy efficiency improvements\",\n        eligibility: \"Subject to Green Deal assessment\"\n      });\n    }\n\n    // Local authority schemes (example)\n    const houseType = data.houseDetails?.houseType;\n    if (houseType && ['detached', 'semi-detached'].includes(houseType)) {\n      loans.push({\n        name: \"Local Authority Interest-Free Loan\",\n        maxAmount: 10000,\n        rate: \"0% APR\",\n        term: \"5-10 years\",\n        description: \"Interest-free loans from participating local authorities\",\n        eligibility: \"Subject to local authority criteria and availability\"\n      });\n    }\n\n    const netCost = installationCosts.total - totalGrantValue;\n    const paybackPeriod = calculatePaybackPeriod(netCost, selectedProducts, data);\n\n    return {\n      grants,\n      loans,\n      totalGrantValue,\n      netCost,\n      paybackPeriod\n    };\n  };\n\n  const calculateMonthlyData = (selectedProducts, upgradePlan, data) => {\n    const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    const monthlyGeneration = [];\n    const monthlySavings = [];\n\n    // Solar generation factors by month (UK average)\n    const solarFactors = [0.4, 0.6, 1.0, 1.4, 1.6, 1.7, 1.6, 1.4, 1.1, 0.7, 0.4, 0.3];\n    \n    // Heat pump efficiency factors by month\n    const heatPumpFactors = [0.8, 0.8, 0.9, 1.0, 1.1, 1.2, 1.2, 1.2, 1.1, 1.0, 0.9, 0.8];\n\n    // Get tariff information\n    const tariffs = data.tariffs || {};\n    const electricityRate = tariffs.electricityUnitRate || 0.28;\n    const gasRate = tariffs.gasUnitRate || 0.07;\n    const exportRate = tariffs.feedInTariffRate || 0.055;\n\n    months.forEach((month, index) => {\n      let monthlyEnergyGeneration = 0;\n      let monthlyCostSavings = 0;\n\n      // Solar generation\n      if (selectedProducts.includes('solarPanels')) {\n        const solarConfig = upgradePlan.solarPanels;\n        const capacity = solarConfig?.selectedModel?.capacity || 4;\n        const quantity = solarConfig?.quantity || 1;\n        const totalCapacity = capacity * quantity;\n        \n        const monthlyGeneration = totalCapacity * solarFactors[index] * 30 * 4; // kWh per month\n        monthlyEnergyGeneration += monthlyGeneration;\n        \n        // Assume 30% exported, 70% self-consumed\n        const selfConsumed = monthlyGeneration * 0.7;\n        const exported = monthlyGeneration * 0.3;\n        \n        monthlyCostSavings += (selfConsumed * electricityRate) + (exported * exportRate);\n      }\n\n      // Heat pump savings\n      if (selectedProducts.includes('heatPump')) {\n        const baseHeatingCost = 150; // Average monthly heating cost\n        const seasonalFactor = index < 3 || index > 9 ? 1.5 : index < 5 || index > 7 ? 1.2 : 0.7;\n        const monthlyHeatingCost = baseHeatingCost * seasonalFactor;\n        \n        const heatPumpEfficiency = 3.5 * heatPumpFactors[index]; // COP\n        const electricityCost = (monthlyHeatingCost / gasRate) / heatPumpEfficiency * electricityRate;\n        const savings = monthlyHeatingCost - electricityCost;\n        \n        monthlyCostSavings += Math.max(0, savings);\n      }\n\n      // Battery storage benefits (if applicable)\n      if (selectedProducts.includes('batteryStorage')) {\n        // Additional savings from peak shaving\n        const peakShavingSavings = 25; // Estimated monthly savings\n        monthlyCostSavings += peakShavingSavings;\n      }\n\n      monthlyGeneration.push({\n        month,\n        generation: Math.round(monthlyEnergyGeneration),\n        unit: 'kWh'\n      });\n\n      monthlySavings.push({\n        month,\n        savings: Math.round(monthlyCostSavings),\n        unit: '£'\n      });\n    });\n\n    return {\n      monthlyGeneration,\n      monthlySavings,\n      annualGeneration: monthlyGeneration.reduce((sum, m) => sum + m.generation, 0),\n      annualSavings: monthlySavings.reduce((sum, m) => sum + m.savings, 0)\n    };\n  };\n\n  const calculateCarbonImpact = (selectedProducts, upgradePlan, data) => {\n    let annualCO2Reduction = 0;\n    const breakdown = [];\n\n    // UK grid carbon intensity: ~0.233 kg CO2 per kWh (2023)\n    const gridCarbonIntensity = 0.233;\n    \n    // Gas carbon intensity: ~0.185 kg CO2 per kWh\n    const gasCarbonIntensity = 0.185;\n\n    // Solar panels - direct emission reduction\n    if (selectedProducts.includes('solarPanels')) {\n      const solarConfig = upgradePlan.solarPanels;\n      const capacity = solarConfig?.selectedModel?.capacity || 4;\n      const quantity = solarConfig?.quantity || 1;\n      const annualGeneration = capacity * quantity * 1000; // kWh per year\n      \n      const co2Saved = annualGeneration * gridCarbonIntensity;\n      annualCO2Reduction += co2Saved;\n      \n      breakdown.push({\n        system: 'Solar Panels',\n        type: 'Direct',\n        reduction: Math.round(co2Saved),\n        description: 'Replaced grid electricity with clean solar energy'\n      });\n    }\n\n    // Heat pump - replacing gas heating\n    if (selectedProducts.includes('heatPump')) {\n      const houseSize = data.houseDetails?.bedrooms || 3;\n      const annualHeatingDemand = houseSize * 3000; // kWh thermal energy\n      \n      // Gas boiler emissions\n      const gasEmissions = annualHeatingDemand * gasCarbonIntensity;\n      \n      // Heat pump emissions (assuming COP of 3.5)\n      const heatPumpElectricity = annualHeatingDemand / 3.5;\n      const heatPumpEmissions = heatPumpElectricity * gridCarbonIntensity;\n      \n      const co2Saved = gasEmissions - heatPumpEmissions;\n      annualCO2Reduction += co2Saved;\n      \n      breakdown.push({\n        system: 'Heat Pump',\n        type: 'Direct',\n        reduction: Math.round(co2Saved),\n        description: 'Replaced gas heating with efficient electric heat pump'\n      });\n    }\n\n    // Battery storage - indirect benefits\n    if (selectedProducts.includes('batteryStorage')) {\n      const indirectReduction = 200; // kg CO2 per year from grid balancing\n      annualCO2Reduction += indirectReduction;\n      \n      breakdown.push({\n        system: 'Battery Storage',\n        type: 'Indirect',\n        reduction: indirectReduction,\n        description: 'Grid balancing and increased renewable energy utilization'\n      });\n    }\n\n    // Calculate equivalents\n    const treesEquivalent = Math.round(annualCO2Reduction / 22); // 22kg CO2 per tree per year\n    const carMilesEquivalent = Math.round(annualCO2Reduction / 0.411 * 1000); // 411g CO2 per mile\n\n    return {\n      annualCO2Reduction: Math.round(annualCO2Reduction),\n      breakdown,\n      equivalents: {\n        trees: treesEquivalent,\n        carMiles: carMilesEquivalent\n      }\n    };\n  };\n\n  const calculatePaybackPeriod = (netCost, selectedProducts, data) => {\n    // Simplified payback calculation\n    const monthlyData = calculateMonthlyData(selectedProducts, data.upgradePlan, data);\n    const annualSavings = monthlyData.annualSavings;\n    \n    if (annualSavings <= 0) return \"Unable to calculate\";\n    \n    const paybackYears = netCost / annualSavings;\n    return `${Math.round(paybackYears * 10) / 10} years`;\n  };\n\n  if (!results) {\n    return (\n      <div className=\"step-container\">\n        <div className=\"step-header\">\n          <h2>Calculating Your Results...</h2>\n          <p>Please wait while we analyze your renewable energy system configuration.</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!results.hasValidPlans) {\n    return (\n      <div className=\"step-container\">\n        <div className=\"step-header\">\n          <h2>Insufficient Data</h2>\n          <p>Please go back and complete the previous steps to see your results.</p>\n        </div>\n        <div className=\"button-group\">\n          <button type=\"button\" className=\"btn btn-secondary\" onClick={onBack}>\n            Back to Previous Step\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  const currentPlan = results.plans[selectedPlanIndex] || results.plans[0];\n\n  return (\n    <div className=\"step-container\">\n      <div className=\"step-header\">\n        <h2>Your Renewable Energy System Results</h2>\n        <p>\n          {results.isComparison \n            ? \"Compare your different renewable energy configurations to find the best solution:\" \n            : \"Based on your configuration, here's your comprehensive analysis:\"\n          }\n        </p>\n      </div>\n\n      {/* Plan Selector for Comparison */}\n      {results.isComparison && (\n        <div className=\"results-plan-selector\">\n          <h3>Plan Comparison</h3>\n          <div className=\"plan-selector-tabs\">\n            {results.plans.map((plan, index) => (\n              <button\n                key={plan.planId}\n                className={`plan-selector-tab ${index === selectedPlanIndex ? 'active' : ''}`}\n                onClick={() => setSelectedPlanIndex(index)}\n              >\n                <span className=\"plan-name\">{plan.planName}</span>\n                <span className=\"plan-products\">{plan.selectedProducts.length} product{plan.selectedProducts.length !== 1 ? 's' : ''}</span>\n              </button>\n            ))}\n          </div>\n          \n          {/* Quick Comparison Table */}\n          <div className=\"quick-comparison\">\n            <h4>Quick Comparison</h4>\n            <div className=\"comparison-table\">\n              <div className=\"comparison-header\">\n                <div className=\"metric-label\">Metric</div>\n                {results.plans.map((plan, index) => (\n                  <div key={plan.planId} className={`plan-column ${index === selectedPlanIndex ? 'active' : ''}`}>\n                    {plan.planName}\n                  </div>\n                ))}\n              </div>\n              \n              <div className=\"comparison-row\">\n                <div className=\"metric-label\">Total Cost</div>\n                {results.plans.map((plan, index) => (\n                  <div key={plan.planId} className={`plan-column ${index === selectedPlanIndex ? 'active' : ''}`}>\n                    £{plan.installationCosts.total.toLocaleString()}\n                  </div>\n                ))}\n              </div>\n              \n              <div className=\"comparison-row\">\n                <div className=\"metric-label\">Net Cost (after grants)</div>\n                {results.plans.map((plan, index) => (\n                  <div key={plan.planId} className={`plan-column ${index === selectedPlanIndex ? 'active' : ''}`}>\n                    £{plan.grantsLoans.netCost.toLocaleString()}\n                  </div>\n                ))}\n              </div>\n              \n              <div className=\"comparison-row\">\n                <div className=\"metric-label\">Annual Savings</div>\n                {results.plans.map((plan, index) => (\n                  <div key={plan.planId} className={`plan-column ${index === selectedPlanIndex ? 'active' : ''}`}>\n                    £{plan.monthlyData.annualSavings.toLocaleString()}\n                  </div>\n                ))}\n              </div>\n              \n              <div className=\"comparison-row\">\n                <div className=\"metric-label\">CO₂ Reduction</div>\n                {results.plans.map((plan, index) => (\n                  <div key={plan.planId} className={`plan-column ${index === selectedPlanIndex ? 'active' : ''}`}>\n                    {plan.carbonImpact.annualCO2Reduction.toLocaleString()} kg/year\n                  </div>\n                ))}\n              </div>\n              \n              <div className=\"comparison-row\">\n                <div className=\"metric-label\">Payback Period</div>\n                {results.plans.map((plan, index) => (\n                  <div key={plan.planId} className={`plan-column ${index === selectedPlanIndex ? 'active' : ''}`}>\n                    {plan.grantsLoans.paybackPeriod}\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"current-plan-indicator\">\n            <h4>Detailed Analysis for: {currentPlan.planName}</h4>\n            <p>Click on different plan tabs above to view detailed analysis for each configuration.</p>\n          </div>\n        </div>\n      )}\n\n      {/* Installation Costs Section */}\n      <div className=\"results-section\">\n        <h3>Installation Costs</h3>\n        <div className=\"cost-summary\">\n          <div className=\"cost-overview\">\n            <div className=\"cost-item\">\n              <span>Equipment Costs:</span>\n              <span>£{currentPlan.installationCosts.equipmentCosts.toLocaleString()}</span>\n            </div>\n            <div className=\"cost-item\">\n              <span>Labour Costs:</span>\n              <span>£{currentPlan.installationCosts.labourCosts.toLocaleString()}</span>\n            </div>\n            <div className=\"cost-item\">\n              <span>VAT (5%):</span>\n              <span>£{currentPlan.installationCosts.vat.toLocaleString()}</span>\n            </div>\n            <div className=\"cost-item total\">\n              <span>Total Cost:</span>\n              <span>£{currentPlan.installationCosts.total.toLocaleString()}</span>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"cost-breakdown\">\n          <h4>System Breakdown:</h4>\n          {currentPlan.installationCosts.breakdown.map((item, index) => (\n            <div key={index} className=\"breakdown-item\">\n              <div className=\"system-info\">\n                <strong>{item.system}</strong> ({item.capacity})\n                <span className=\"quantity\">Quantity: {item.quantity}</span>\n              </div>\n              <div className=\"costs\">\n                <span>Equipment: £{item.equipmentCost.toLocaleString()}</span>\n                <span>Labour: £{item.labourCost.toLocaleString()}</span>\n                <strong>Total: £{item.total.toLocaleString()}</strong>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Grants and Loans Section */}\n      <div className=\"results-section\">\n        <h3>Grants & Financial Support</h3>\n        \n        {currentPlan.grantsLoans.grants.length > 0 && (\n          <div className=\"grants-section\">\n            <h4>Available Grants:</h4>\n            {currentPlan.grantsLoans.grants.map((grant, index) => (\n              <div key={index} className=\"grant-item\">\n                <div className=\"grant-header\">\n                  <strong>{grant.name}</strong>\n                  <span className=\"grant-amount\">\n                    {typeof grant.amount === 'number' ? `£${grant.amount.toLocaleString()}` : grant.amount}\n                  </span>\n                </div>\n                <p>{grant.description}</p>\n                <div className=\"grant-details\">\n                  <span className=\"eligibility\">Eligibility: {grant.eligibility}</span>\n                  <span className=\"status\">Status: {grant.status}</span>\n                  {grant.rate && <span className=\"rate\">Rate: {grant.rate}</span>}\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n\n        {currentPlan.grantsLoans.loans.length > 0 && (\n          <div className=\"loans-section\">\n            <h4>Financing Options:</h4>\n            {currentPlan.grantsLoans.loans.map((loan, index) => (\n              <div key={index} className=\"loan-item\">\n                <div className=\"loan-header\">\n                  <strong>{loan.name}</strong>\n                  <span className=\"loan-amount\">Up to £{loan.maxAmount.toLocaleString()}</span>\n                </div>\n                <p>{loan.description}</p>\n                <div className=\"loan-terms\">\n                  <span>Rate: {loan.rate}</span>\n                  <span>Term: {loan.term}</span>\n                </div>\n                <p className=\"eligibility\">{loan.eligibility}</p>\n              </div>\n            ))}\n          </div>\n        )}\n\n        <div className=\"financial-summary\">\n          <div className=\"summary-item\">\n            <span>Total Installation Cost:</span>\n            <span>£{currentPlan.installationCosts.total.toLocaleString()}</span>\n          </div>\n          <div className=\"summary-item\">\n            <span>Available Grants:</span>\n            <span>-£{currentPlan.grantsLoans.totalGrantValue.toLocaleString()}</span>\n          </div>\n          <div className=\"summary-item net-cost\">\n            <span>Net Cost:</span>\n            <span>£{currentPlan.grantsLoans.netCost.toLocaleString()}</span>\n          </div>\n          <div className=\"summary-item\">\n            <span>Estimated Payback Period:</span>\n            <span>{currentPlan.grantsLoans.paybackPeriod}</span>\n          </div>\n        </div>\n      </div>\n\n      {/* Monthly Savings and Generation */}\n      <div className=\"results-section\">\n        <h3>Monthly Performance</h3>\n        \n        <div className=\"monthly-charts\">\n          <div className=\"chart-section\">\n            <h4>Monthly Cost Savings</h4>\n            <div className=\"monthly-data\">\n              {currentPlan.monthlyData.monthlySavings.map((month, index) => (\n                <div key={index} className=\"month-bar\">\n                  <div className=\"month-label\">{month.month}</div>\n                  <div className=\"bar-container\">\n                    <div \n                      className=\"savings-bar\" \n                      style={{height: `${(month.savings / Math.max(...currentPlan.monthlyData.monthlySavings.map(m => m.savings))) * 100}%`}}\n                    ></div>\n                  </div>\n                  <div className=\"month-value\">£{month.savings}</div>\n                </div>\n              ))}\n            </div>\n            <div className=\"annual-total\">\n              <strong>Annual Savings: £{currentPlan.monthlyData.annualSavings.toLocaleString()}</strong>\n            </div>\n          </div>\n\n          <div className=\"chart-section\">\n            <h4>Monthly Energy Generation</h4>\n            <div className=\"monthly-data\">\n              {currentPlan.monthlyData.monthlyGeneration.map((month, index) => (\n                <div key={index} className=\"month-bar\">\n                  <div className=\"month-label\">{month.month}</div>\n                  <div className=\"bar-container\">\n                    <div \n                      className=\"generation-bar\" \n                      style={{height: `${(month.generation / Math.max(...currentPlan.monthlyData.monthlyGeneration.map(m => m.generation))) * 100}%`}}\n                    ></div>\n                  </div>\n                  <div className=\"month-value\">{month.generation} kWh</div>\n                </div>\n              ))}\n            </div>\n            <div className=\"annual-total\">\n              <strong>Annual Generation: {currentPlan.monthlyData.annualGeneration.toLocaleString()} kWh</strong>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Carbon Impact Section */}\n      <div className=\"results-section\">\n        <h3>Environmental Impact</h3>\n        \n        <div className=\"carbon-summary\">\n          <div className=\"carbon-headline\">\n            <h4>Annual CO₂ Reduction: {currentPlan.carbonImpact.annualCO2Reduction.toLocaleString()} kg</h4>\n            <p>This is equivalent to:</p>\n            <div className=\"equivalents\">\n              <div className=\"equivalent-item\">\n                <strong>{currentPlan.carbonImpact.equivalents.trees}</strong>\n                <span>trees planted</span>\n              </div>\n              <div className=\"equivalent-item\">\n                <strong>{currentPlan.carbonImpact.equivalents.carMiles.toLocaleString()}</strong>\n                <span>car miles avoided</span>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"carbon-breakdown\">\n          <h4>Emission Reduction Breakdown:</h4>\n          {currentPlan.carbonImpact.breakdown.map((item, index) => (\n            <div key={index} className=\"carbon-item\">\n              <div className=\"carbon-system\">\n                <strong>{item.system}</strong>\n                <span className=\"carbon-type\">({item.type})</span>\n              </div>\n              <div className=\"carbon-reduction\">\n                <strong>{item.reduction.toLocaleString()} kg CO₂/year</strong>\n              </div>\n              <p className=\"carbon-description\">{item.description}</p>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"button-group\">\n        <button type=\"button\" className=\"btn btn-secondary\" onClick={onBack}>\n          Back to Tariffs\n        </button>\n        <button type=\"button\" className=\"btn btn-primary\">\n          Download Full Report\n        </button>\n        <button type=\"button\" className=\"btn btn-outline\">\n          Share Results\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Results; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}