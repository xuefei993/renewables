{"ast":null,"code":"var _jsxFileName = \"/Users/xuefei/Desktop/calculator00/calculator/renewableCalculator.ui/src/components/steps/roof-condition/RoofAreaSummary.js\";\nimport React from 'react';\nimport { calculateSolarCapacity, calculatePanelCount, calculateAdjustmentFactor } from './roofAreaUtils';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RoofAreaSummary = ({\n  projectedArea,\n  actualArea,\n  roofAngle\n}) => {\n  if (!projectedArea || projectedArea <= 0) return null;\n  const solarCapacity = calculateSolarCapacity(actualArea);\n  const panelCount = calculatePanelCount(actualArea);\n  const adjustmentFactor = calculateAdjustmentFactor(actualArea, projectedArea);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"measurement-summary\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summary-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Measurement Complete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"measurement-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"detail-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Horizontal Projected Area:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [projectedArea.toFixed(2), \" m\\xB2\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), roofAngle !== '' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-row highlight\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Actual Roof Area:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [actualArea.toFixed(2), \" m\\xB2\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Area Adjustment Factor:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"\\xD7\", adjustmentFactor.toFixed(3)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"detail-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Estimated Solar Panel Capacity:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"~\", solarCapacity.toFixed(1), \" kW\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"detail-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Approximate Panel Count:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"~\", panelCount, \" panels\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        className: \"summary-note\",\n        children: [\"*Estimates based on typical residential solar panel specifications (2m\\xB2 per panel, 150W/m\\xB2)\", roofAngle !== '' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), \"**Actual roof area calculated using: Roof Area = Projected Area \\xF7 cos(\", roofAngle, \"\\xB0)\"]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_c = RoofAreaSummary;\nexport default RoofAreaSummary;\nvar _c;\n$RefreshReg$(_c, \"RoofAreaSummary\");","map":{"version":3,"names":["React","calculateSolarCapacity","calculatePanelCount","calculateAdjustmentFactor","jsxDEV","_jsxDEV","Fragment","_Fragment","RoofAreaSummary","projectedArea","actualArea","roofAngle","solarCapacity","panelCount","adjustmentFactor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","_c","$RefreshReg$"],"sources":["/Users/xuefei/Desktop/calculator00/calculator/renewableCalculator.ui/src/components/steps/roof-condition/RoofAreaSummary.js"],"sourcesContent":["import React from 'react';\nimport { \n  calculateSolarCapacity, \n  calculatePanelCount, \n  calculateAdjustmentFactor \n} from './roofAreaUtils';\n\nconst RoofAreaSummary = ({ projectedArea, actualArea, roofAngle }) => {\n  if (!projectedArea || projectedArea <= 0) return null;\n\n  const solarCapacity = calculateSolarCapacity(actualArea);\n  const panelCount = calculatePanelCount(actualArea);\n  const adjustmentFactor = calculateAdjustmentFactor(actualArea, projectedArea);\n\n  return (\n    <div className=\"measurement-summary\">\n      <div className=\"summary-card\">\n        <h4>Measurement Complete</h4>\n        <div className=\"measurement-details\">\n          <div className=\"detail-row\">\n            <span>Horizontal Projected Area:</span>\n            <strong>{projectedArea.toFixed(2)} m²</strong>\n          </div>\n          {roofAngle !== '' && (\n            <>\n              <div className=\"detail-row highlight\">\n                <span>Actual Roof Area:</span>\n                <strong>{actualArea.toFixed(2)} m²</strong>\n              </div>\n              <div className=\"detail-row\">\n                <span>Area Adjustment Factor:</span>\n                <strong>×{adjustmentFactor.toFixed(3)}</strong>\n              </div>\n            </>\n          )}\n          <div className=\"detail-row\">\n            <span>Estimated Solar Panel Capacity:</span>\n            <strong>~{solarCapacity.toFixed(1)} kW</strong>\n          </div>\n          <div className=\"detail-row\">\n            <span>Approximate Panel Count:</span>\n            <strong>~{panelCount} panels</strong>\n          </div>\n        </div>\n        <small className=\"summary-note\">\n          *Estimates based on typical residential solar panel specifications (2m² per panel, 150W/m²)\n          {roofAngle !== '' && (\n            <><br/>**Actual roof area calculated using: Roof Area = Projected Area ÷ cos({roofAngle}°)</>\n          )}\n        </small>\n      </div>\n    </div>\n  );\n};\n\nexport default RoofAreaSummary; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}