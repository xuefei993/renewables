{"ast":null,"code":"import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";// 图表工具函数\n/**\n * 创建平滑曲线路径的辅助函数\n * @param {Array} points - 包含 {x, y} 坐标的点数组\n * @returns {string} SVG 路径字符串\n */export const createSmoothPath=points=>{if(points.length<2)return'';let path=\"M \".concat(points[0].x,\" \").concat(points[0].y);for(let i=1;i<points.length;i++){const prev=points[i-1];const curr=points[i];const next=points[i+1];if(i===1){// 第一个曲线段\nconst cp1x=prev.x+(curr.x-prev.x)/3;const cp1y=prev.y;const cp2x=curr.x-(next?(next.x-prev.x)/6:(curr.x-prev.x)/3);const cp2y=curr.y-(next?(next.y-prev.y)/6:0);path+=\" C \".concat(cp1x,\" \").concat(cp1y,\", \").concat(cp2x,\" \").concat(cp2y,\", \").concat(curr.x,\" \").concat(curr.y);}else if(i===points.length-1){// 最后一个曲线段\nconst prevPrev=points[i-2];const cp1x=prev.x+(curr.x-prevPrev.x)/6;const cp1y=prev.y+(curr.y-prevPrev.y)/6;const cp2x=curr.x-(curr.x-prev.x)/3;const cp2y=curr.y;path+=\" C \".concat(cp1x,\" \").concat(cp1y,\", \").concat(cp2x,\" \").concat(cp2y,\", \").concat(curr.x,\" \").concat(curr.y);}else{// 中间的曲线段\nconst cp1x=prev.x+(curr.x-points[i-2].x)/6;const cp1y=prev.y+(curr.y-points[i-2].y)/6;const cp2x=curr.x-(next.x-prev.x)/6;const cp2y=curr.y-(next.y-prev.y)/6;path+=\" C \".concat(cp1x,\" \").concat(cp1y,\", \").concat(cp2x,\" \").concat(cp2y,\", \").concat(curr.x,\" \").concat(curr.y);}}return path;};/**\n * 计算数据的范围和比例\n * @param {Array} data - 数据数组\n * @param {Function} valueExtractor - 值提取函数\n * @returns {Object} 包含 min, max, range, values 的对象\n */export const calculateDataRange=function(data){let valueExtractor=arguments.length>1&&arguments[1]!==undefined?arguments[1]:d=>d.value;const values=data.map(valueExtractor).filter(v=>!isNaN(v)&&v!==null&&v!==undefined);if(values.length===0){return{min:0,max:1,range:1,values:[]};}const min=Math.min(...values);const max=Math.max(...values);const range=max-min||1;// 避免除零\nreturn{min,max,range,values};};/**\n * 生成图表数据点坐标\n * @param {Array} data - 原始数据\n * @param {Object} params - 参数对象\n * @returns {Array} 包含坐标和数据的点数组\n */export const generateChartPoints=(data,_ref)=>{let{chartWidth,chartHeight,padding,dataMin,dataRange}=_ref;return data.map((item,index)=>{const x=padding+index*(chartWidth-2*padding)/(data.length-1);const y=chartHeight-padding-(item.value-dataMin)/dataRange*(chartHeight-2*padding);return{x,y,value:item.value,month:item.month};});};/**\n * 验证图表数据完整性\n * @param {Object} climateData - 气候数据对象\n * @returns {Object} 验证结果\n */export const validateChartData=climateData=>{if(!(climateData!==null&&climateData!==void 0&&climateData.solar)||!(climateData!==null&&climateData!==void 0&&climateData.temperature)){return{isValid:false,error:'Missing climate data',errorComponent:null};}const solarLength=climateData.solar.length;const tempLength=climateData.temperature.length;if(solarLength===0||tempLength===0){return{isValid:false,error:'Insufficient data to display chart',errorComponent:/*#__PURE__*/_jsxs(\"div\",{className:\"chart-error\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Insufficient data to display chart\"}),/*#__PURE__*/_jsxs(\"small\",{children:[\"Solar: \",solarLength,\" points, Temperature: \",tempLength,\" points\"]})]})};}// 验证太阳辐射数据\nconst solarValues=climateData.solar.map(d=>d.value).filter(v=>!isNaN(v)&&v>0);if(solarValues.length===0){return{isValid:false,error:'No valid solar radiation data',errorComponent:/*#__PURE__*/_jsxs(\"div\",{className:\"chart-error\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"No valid solar radiation data available\"}),/*#__PURE__*/_jsxs(\"small\",{children:[\"Raw data points: \",solarLength]})]})};}// 验证温度数据\nconst tempValues=climateData.temperature.map(d=>d.value).filter(v=>!isNaN(v));if(tempValues.length===0){return{isValid:false,error:'No valid temperature data',errorComponent:/*#__PURE__*/_jsxs(\"div\",{className:\"chart-error\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"No valid temperature data available\"}),/*#__PURE__*/_jsxs(\"small\",{children:[\"Raw data points: \",tempLength]})]})};}return{isValid:true,error:null,errorComponent:null};};/**\n * 图表配置常量\n */export const CHART_CONFIG={width:700,height:400,padding:80,colors:{solar:'#f1c40f',// 更亮的黄色，从 '#f39c12' 改为 '#f1c40f'\ntemperature:'#3498db',// 从 '#e74c3c' 改为蓝色\ngrid:'#e8e8e8',verticalGrid:'#f0f0f0'},gradients:{solar:'solarGradient',temperature:'tempGradient'}};/**\n * 计算统计数据\n * @param {Array} values - 数值数组\n * @param {Array} data - 原始数据数组\n * @returns {Object} 统计信息\n */export const calculateStats=(values,data)=>{var _data$maxIndex;if(values.length===0)return null;const average=values.reduce((sum,val)=>sum+val,0)/values.length;const maxValue=Math.max(...values);const maxIndex=values.indexOf(maxValue);const peakMonth=((_data$maxIndex=data[maxIndex])===null||_data$maxIndex===void 0?void 0:_data$maxIndex.month)||'Unknown';return{average:average.toFixed(1),peakMonth,dataPoints:values.length};};","map":{"version":3,"names":["createSmoothPath","points","length","path","concat","x","y","i","prev","curr","next","cp1x","cp1y","cp2x","cp2y","prevPrev","calculateDataRange","data","valueExtractor","arguments","undefined","d","value","values","map","filter","v","isNaN","min","max","range","Math","generateChartPoints","_ref","chartWidth","chartHeight","padding","dataMin","dataRange","item","index","month","validateChartData","climateData","solar","temperature","isValid","error","errorComponent","solarLength","tempLength","_jsxs","className","children","_jsx","solarValues","tempValues","CHART_CONFIG","width","height","colors","grid","verticalGrid","gradients","calculateStats","_data$maxIndex","average","reduce","sum","val","maxValue","maxIndex","indexOf","peakMonth","toFixed","dataPoints"],"sources":["/Users/xuefei/Desktop/calculator00/calculator/renewableCalculator.ui/src/components/steps/address-input/chart/chartUtils.js"],"sourcesContent":["// 图表工具函数\n\n/**\n * 创建平滑曲线路径的辅助函数\n * @param {Array} points - 包含 {x, y} 坐标的点数组\n * @returns {string} SVG 路径字符串\n */\nexport const createSmoothPath = (points) => {\n  if (points.length < 2) return '';\n  \n  let path = `M ${points[0].x} ${points[0].y}`;\n  \n  for (let i = 1; i < points.length; i++) {\n    const prev = points[i - 1];\n    const curr = points[i];\n    const next = points[i + 1];\n    \n    if (i === 1) {\n      // 第一个曲线段\n      const cp1x = prev.x + (curr.x - prev.x) / 3;\n      const cp1y = prev.y;\n      const cp2x = curr.x - (next ? (next.x - prev.x) / 6 : (curr.x - prev.x) / 3);\n      const cp2y = curr.y - (next ? (next.y - prev.y) / 6 : 0);\n      path += ` C ${cp1x} ${cp1y}, ${cp2x} ${cp2y}, ${curr.x} ${curr.y}`;\n    } else if (i === points.length - 1) {\n      // 最后一个曲线段\n      const prevPrev = points[i - 2];\n      const cp1x = prev.x + (curr.x - prevPrev.x) / 6;\n      const cp1y = prev.y + (curr.y - prevPrev.y) / 6;\n      const cp2x = curr.x - (curr.x - prev.x) / 3;\n      const cp2y = curr.y;\n      path += ` C ${cp1x} ${cp1y}, ${cp2x} ${cp2y}, ${curr.x} ${curr.y}`;\n    } else {\n      // 中间的曲线段\n      const cp1x = prev.x + (curr.x - points[i - 2].x) / 6;\n      const cp1y = prev.y + (curr.y - points[i - 2].y) / 6;\n      const cp2x = curr.x - (next.x - prev.x) / 6;\n      const cp2y = curr.y - (next.y - prev.y) / 6;\n      path += ` C ${cp1x} ${cp1y}, ${cp2x} ${cp2y}, ${curr.x} ${curr.y}`;\n    }\n  }\n  \n  return path;\n};\n\n/**\n * 计算数据的范围和比例\n * @param {Array} data - 数据数组\n * @param {Function} valueExtractor - 值提取函数\n * @returns {Object} 包含 min, max, range, values 的对象\n */\nexport const calculateDataRange = (data, valueExtractor = d => d.value) => {\n  const values = data.map(valueExtractor).filter(v => !isNaN(v) && v !== null && v !== undefined);\n  \n  if (values.length === 0) {\n    return { min: 0, max: 1, range: 1, values: [] };\n  }\n  \n  const min = Math.min(...values);\n  const max = Math.max(...values);\n  const range = max - min || 1; // 避免除零\n  \n  return { min, max, range, values };\n};\n\n/**\n * 生成图表数据点坐标\n * @param {Array} data - 原始数据\n * @param {Object} params - 参数对象\n * @returns {Array} 包含坐标和数据的点数组\n */\nexport const generateChartPoints = (data, { chartWidth, chartHeight, padding, dataMin, dataRange }) => {\n  return data.map((item, index) => {\n    const x = padding + (index * (chartWidth - 2 * padding)) / (data.length - 1);\n    const y = chartHeight - padding - ((item.value - dataMin) / dataRange) * (chartHeight - 2 * padding);\n    return { x, y, value: item.value, month: item.month };\n  });\n};\n\n/**\n * 验证图表数据完整性\n * @param {Object} climateData - 气候数据对象\n * @returns {Object} 验证结果\n */\nexport const validateChartData = (climateData) => {\n  if (!climateData?.solar || !climateData?.temperature) {\n    return { \n      isValid: false, \n      error: 'Missing climate data',\n      errorComponent: null\n    };\n  }\n\n  const solarLength = climateData.solar.length;\n  const tempLength = climateData.temperature.length;\n\n  if (solarLength === 0 || tempLength === 0) {\n    return {\n      isValid: false,\n      error: 'Insufficient data to display chart',\n      errorComponent: (\n        <div className=\"chart-error\">\n          <p>Insufficient data to display chart</p>\n          <small>Solar: {solarLength} points, Temperature: {tempLength} points</small>\n        </div>\n      )\n    };\n  }\n\n  // 验证太阳辐射数据\n  const solarValues = climateData.solar.map(d => d.value).filter(v => !isNaN(v) && v > 0);\n  if (solarValues.length === 0) {\n    return {\n      isValid: false,\n      error: 'No valid solar radiation data',\n      errorComponent: (\n        <div className=\"chart-error\">\n          <p>No valid solar radiation data available</p>\n          <small>Raw data points: {solarLength}</small>\n        </div>\n      )\n    };\n  }\n\n  // 验证温度数据\n  const tempValues = climateData.temperature.map(d => d.value).filter(v => !isNaN(v));\n  if (tempValues.length === 0) {\n    return {\n      isValid: false,\n      error: 'No valid temperature data',\n      errorComponent: (\n        <div className=\"chart-error\">\n          <p>No valid temperature data available</p>\n          <small>Raw data points: {tempLength}</small>\n        </div>\n      )\n    };\n  }\n\n  return { isValid: true, error: null, errorComponent: null };\n};\n\n/**\n * 图表配置常量\n */\nexport const CHART_CONFIG = {\n  width: 700,\n  height: 400,\n  padding: 80,\n  colors: {\n    solar: '#f1c40f', // 更亮的黄色，从 '#f39c12' 改为 '#f1c40f'\n    temperature: '#3498db', // 从 '#e74c3c' 改为蓝色\n    grid: '#e8e8e8',\n    verticalGrid: '#f0f0f0'\n  },\n  gradients: {\n    solar: 'solarGradient',\n    temperature: 'tempGradient'\n  }\n};\n\n/**\n * 计算统计数据\n * @param {Array} values - 数值数组\n * @param {Array} data - 原始数据数组\n * @returns {Object} 统计信息\n */\nexport const calculateStats = (values, data) => {\n  if (values.length === 0) return null;\n  \n  const average = values.reduce((sum, val) => sum + val, 0) / values.length;\n  const maxValue = Math.max(...values);\n  const maxIndex = values.indexOf(maxValue);\n  const peakMonth = data[maxIndex]?.month || 'Unknown';\n  \n  return {\n    average: average.toFixed(1),\n    peakMonth,\n    dataPoints: values.length\n  };\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}