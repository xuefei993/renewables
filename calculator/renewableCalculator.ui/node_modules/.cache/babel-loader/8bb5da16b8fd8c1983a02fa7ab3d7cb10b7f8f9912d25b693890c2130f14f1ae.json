{"ast":null,"code":"var _jsxFileName = \"/Users/xuefei/Desktop/calculator00/calculator/renewableCalculator.ui/src/components/steps/RoofCondition.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { Wrapper } from '@googlemaps/react-wrapper';\nimport GoogleMapsPolygonDrawer from './roof-condition/GoogleMapsPolygonDrawer';\nimport RoofConfigurationForm from './roof-condition/RoofConfigurationForm';\nimport { calculateActualRoofArea } from './roof-condition/roofAreaUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoofCondition = ({\n  data,\n  onDataChange,\n  onNext,\n  onBack,\n  userLocation\n}) => {\n  _s();\n  const [projectedRoofArea, setProjectedRoofArea] = useState(data.projectedRoofArea || 0);\n  const [roofConfig, setRoofConfig] = useState({\n    roofOrientation: data.roofOrientation || '',\n    roofAngle: data.roofAngle || '',\n    roofShading: data.roofShading || '',\n    roofUtilisation: data.roofUtilisation || ''\n  });\n  const [addedRoofs, setAddedRoofs] = useState(data.addedRoofs || []);\n  const [showMeasurementGuide, setShowMeasurementGuide] = useState(false);\n\n  // Ref to control Google Maps polygon clearing\n  const googleMapsRef = useRef(null);\n\n  // Calculate actual roof area based on angle\n  const actualRoofArea = calculateActualRoofArea(projectedRoofArea, roofConfig.roofAngle);\n\n  // Handle area changes from map\n  const handleAreaChange = area => {\n    setProjectedRoofArea(area);\n    const actualArea = calculateActualRoofArea(area, roofConfig.roofAngle);\n\n    // Validate that actualArea is a number before calling toFixed\n    if (typeof actualArea === 'number' && !isNaN(actualArea)) {\n      onDataChange({\n        projectedRoofArea: area,\n        roofArea: actualArea\n      });\n    } else {\n      onDataChange({\n        projectedRoofArea: area,\n        roofArea: area\n      });\n    }\n  };\n  const render = status => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  };\n\n  // Handle configuration changes\n  const handleConfigChange = (field, value) => {\n    const newConfig = {\n      ...roofConfig,\n      [field]: value\n    };\n    setRoofConfig(newConfig);\n    if (field === 'roofAngle') {\n      const actualArea = calculateActualRoofArea(projectedRoofArea, value);\n      // Validate that actualArea is a number before calling toFixed\n      if (typeof actualArea === 'number' && !isNaN(actualArea)) {\n        onDataChange({\n          ...newConfig,\n          roofArea: actualArea\n        });\n      } else {\n        onDataChange({\n          ...newConfig,\n          roofArea: projectedRoofArea\n        });\n      }\n    } else {\n      onDataChange({\n        [field]: value\n      });\n    }\n  };\n  const handleRoofsUpdate = newAddedRoofs => {\n    setAddedRoofs(newAddedRoofs);\n    onDataChange({\n      addedRoofs: newAddedRoofs\n    });\n  };\n  const handleClearCurrentMeasurement = () => {\n    setProjectedRoofArea(0);\n    setRoofConfig({\n      roofOrientation: '',\n      roofAngle: '',\n      roofShading: '',\n      roofUtilisation: ''\n    });\n    onDataChange({\n      roofArea: 0,\n      projectedRoofArea: 0,\n      roofOrientation: '',\n      roofAngle: '',\n      roofShading: '',\n      roofUtilisation: ''\n    });\n  };\n\n  // New function to handle \"Add Another Roof\" functionality\n  const handleAddAnotherRoof = () => {\n    // Clear the polygon from the map\n    if (googleMapsRef.current) {\n      googleMapsRef.current.clearPolygon();\n    }\n\n    // Clear current measurement and config\n    handleClearCurrentMeasurement();\n  };\n\n  // Validation function\n  const isFormValid = () => {\n    return addedRoofs.length > 0; // At least one roof must be added\n  };\n  const apiKey = \"AIzaSyCpAABUQR_MiKb4yDovC3-1jM0LdIs59Hc\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"step-container roof-condition-step\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"step-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Roof Condition\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"step-description\",\n            children: \"Use Google Maps to measure your roof area and assess its solar potential.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-guide\",\n          onClick: () => setShowMeasurementGuide(true),\n          children: \"Measurement Guide\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), showMeasurementGuide && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      onClick: () => setShowMeasurementGuide(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Instructions for Accurate Roof Measurement\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-close\",\n            onClick: () => setShowMeasurementGuide(false),\n            \"aria-label\": \"Close guide\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: /*#__PURE__*/_jsxDEV(\"ol\", {\n            className: \"measurement-instructions-list\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Search your postcode or find your property on the satellite map\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Use the compass on the right to help identify directions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Zoom in as much as possible for precise measurements\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Click on the corners of your roof to draw the outline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Close the shape by clicking on the first point\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Select your roof orientation using the dropdown below\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Adjust roof angle and shading details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"roof-measurement-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(Wrapper, {\n          apiKey: apiKey,\n          render: render,\n          libraries: ['drawing', 'geometry'],\n          children: /*#__PURE__*/_jsxDEV(GoogleMapsPolygonDrawer, {\n            ref: googleMapsRef,\n            onAreaChange: handleAreaChange,\n            userLocation: userLocation,\n            apiKey: apiKey\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RoofConfigurationForm, {\n        roofConfig: roofConfig,\n        onConfigChange: handleConfigChange,\n        projectedArea: projectedRoofArea,\n        actualRoofArea: actualRoofArea,\n        visible: projectedRoofArea > 0 || addedRoofs.length > 0,\n        addedRoofs: addedRoofs,\n        onRoofsUpdate: handleRoofsUpdate,\n        onClearMeasurement: handleClearCurrentMeasurement,\n        onAddAnotherRoof: handleAddAnotherRoof\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary\",\n        onClick: onBack,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: `btn btn-primary ${!isFormValid() ? 'disabled' : ''}`,\n        onClick: onNext,\n        disabled: !isFormValid(),\n        children: \"Next: Insulation Performance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(RoofCondition, \"KL1mxiAs7PIXSHx8AYsfbI1XnsY=\");\n_c = RoofCondition;\nexport default RoofCondition;\nvar _c;\n$RefreshReg$(_c, \"RoofCondition\");","map":{"version":3,"names":["React","useState","useRef","Wrapper","GoogleMapsPolygonDrawer","RoofConfigurationForm","calculateActualRoofArea","jsxDEV","_jsxDEV","RoofCondition","data","onDataChange","onNext","onBack","userLocation","_s","projectedRoofArea","setProjectedRoofArea","roofConfig","setRoofConfig","roofOrientation","roofAngle","roofShading","roofUtilisation","addedRoofs","setAddedRoofs","showMeasurementGuide","setShowMeasurementGuide","googleMapsRef","actualRoofArea","handleAreaChange","area","actualArea","isNaN","roofArea","render","status","children","fileName","_jsxFileName","lineNumber","columnNumber","handleConfigChange","field","value","newConfig","handleRoofsUpdate","newAddedRoofs","handleClearCurrentMeasurement","handleAddAnotherRoof","current","clearPolygon","isFormValid","length","apiKey","className","type","onClick","e","stopPropagation","libraries","ref","onAreaChange","onConfigChange","projectedArea","visible","onRoofsUpdate","onClearMeasurement","onAddAnotherRoof","disabled","_c","$RefreshReg$"],"sources":["/Users/xuefei/Desktop/calculator00/calculator/renewableCalculator.ui/src/components/steps/RoofCondition.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { Wrapper } from '@googlemaps/react-wrapper';\nimport GoogleMapsPolygonDrawer from './roof-condition/GoogleMapsPolygonDrawer';\nimport RoofConfigurationForm from './roof-condition/RoofConfigurationForm';\nimport { calculateActualRoofArea } from './roof-condition/roofAreaUtils';\n\nconst RoofCondition = ({ data, onDataChange, onNext, onBack, userLocation }) => {\n  const [projectedRoofArea, setProjectedRoofArea] = useState(data.projectedRoofArea || 0);\n  const [roofConfig, setRoofConfig] = useState({\n    roofOrientation: data.roofOrientation || '',\n    roofAngle: data.roofAngle || '',\n    roofShading: data.roofShading || '',\n    roofUtilisation: data.roofUtilisation || ''\n  });\n  const [addedRoofs, setAddedRoofs] = useState(data.addedRoofs || []);\n  const [showMeasurementGuide, setShowMeasurementGuide] = useState(false);\n  \n  // Ref to control Google Maps polygon clearing\n  const googleMapsRef = useRef(null);\n\n  // Calculate actual roof area based on angle\n  const actualRoofArea = calculateActualRoofArea(projectedRoofArea, roofConfig.roofAngle);\n\n  // Handle area changes from map\n  const handleAreaChange = (area) => {\n    setProjectedRoofArea(area);\n    const actualArea = calculateActualRoofArea(area, roofConfig.roofAngle);\n    \n    // Validate that actualArea is a number before calling toFixed\n    if (typeof actualArea === 'number' && !isNaN(actualArea)) {\n      onDataChange({ \n        projectedRoofArea: area,\n        roofArea: actualArea\n      });\n    } else {\n      onDataChange({ \n        projectedRoofArea: area,\n        roofArea: area\n      });\n    }\n  };\n\n  const render = (status) => {\n    return <div>Loading...</div>;\n  };\n\n  // Handle configuration changes\n  const handleConfigChange = (field, value) => {\n    const newConfig = { ...roofConfig, [field]: value };\n    setRoofConfig(newConfig);\n    \n    if (field === 'roofAngle') {\n      const actualArea = calculateActualRoofArea(projectedRoofArea, value);\n      // Validate that actualArea is a number before calling toFixed\n      if (typeof actualArea === 'number' && !isNaN(actualArea)) {\n        onDataChange({ \n          ...newConfig,\n          roofArea: actualArea\n        });\n      } else {\n        onDataChange({ \n          ...newConfig,\n          roofArea: projectedRoofArea\n        });\n      }\n    } else {\n      onDataChange({ [field]: value });\n    }\n  };\n\n  const handleRoofsUpdate = (newAddedRoofs) => {\n    setAddedRoofs(newAddedRoofs);\n    onDataChange({ addedRoofs: newAddedRoofs });\n  };\n\n  const handleClearCurrentMeasurement = () => {\n    setProjectedRoofArea(0);\n    setRoofConfig({\n      roofOrientation: '',\n      roofAngle: '',\n      roofShading: '',\n      roofUtilisation: ''\n    });\n    onDataChange({\n      roofArea: 0,\n      projectedRoofArea: 0,\n      roofOrientation: '',\n      roofAngle: '',\n      roofShading: '',\n      roofUtilisation: ''\n    });\n  };\n\n  // New function to handle \"Add Another Roof\" functionality\n  const handleAddAnotherRoof = () => {\n    // Clear the polygon from the map\n    if (googleMapsRef.current) {\n      googleMapsRef.current.clearPolygon();\n    }\n    \n    // Clear current measurement and config\n    handleClearCurrentMeasurement();\n  };\n\n  // Validation function\n  const isFormValid = () => {\n    return addedRoofs.length > 0; // At least one roof must be added\n  };\n\n  const apiKey = \"AIzaSyCpAABUQR_MiKb4yDovC3-1jM0LdIs59Hc\";\n\n  return (\n    <div className=\"step-container roof-condition-step\">\n      <div className=\"step-header\">\n        <div className=\"header-content\">\n          <div className=\"title-section\">\n            <h2>Roof Condition</h2>\n            <p className=\"step-description\">Use Google Maps to measure your roof area and assess its solar potential.</p>\n          </div>\n          <button \n            type=\"button\" \n            className=\"btn btn-guide\"\n            onClick={() => setShowMeasurementGuide(true)}\n          >\n            Measurement Guide\n          </button>\n        </div>\n      </div>\n\n      {/* Measurement Guide Modal */}\n      {showMeasurementGuide && (\n        <div className=\"modal-overlay\" onClick={() => setShowMeasurementGuide(false)}>\n          <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"modal-header\">\n              <h3>Instructions for Accurate Roof Measurement</h3>\n              <button \n                className=\"modal-close\" \n                onClick={() => setShowMeasurementGuide(false)}\n                aria-label=\"Close guide\"\n              >\n                ×\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <ol className=\"measurement-instructions-list\">\n                <li>Search your postcode or find your property on the satellite map</li>\n                <li>Use the compass on the right to help identify directions</li>\n                <li>Zoom in as much as possible for precise measurements</li>\n                <li>Click on the corners of your roof to draw the outline</li>\n                <li>Close the shape by clicking on the first point</li>\n                <li>Select your roof orientation using the dropdown below</li>\n                <li>Adjust roof angle and shading details</li>\n              </ol>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <div className=\"roof-measurement-container\">\n        <div className=\"form-group\">\n          <Wrapper apiKey={apiKey} render={render} libraries={['drawing', 'geometry']}>\n            <GoogleMapsPolygonDrawer\n              ref={googleMapsRef}\n              onAreaChange={handleAreaChange}\n              userLocation={userLocation}\n              apiKey={apiKey}\n            />\n          </Wrapper>\n        </div>\n\n        <RoofConfigurationForm\n          roofConfig={roofConfig}\n          onConfigChange={handleConfigChange}\n          projectedArea={projectedRoofArea}\n          actualRoofArea={actualRoofArea}\n          visible={projectedRoofArea > 0 || addedRoofs.length > 0}\n          addedRoofs={addedRoofs}\n          onRoofsUpdate={handleRoofsUpdate}\n          onClearMeasurement={handleClearCurrentMeasurement}\n          onAddAnotherRoof={handleAddAnotherRoof}\n        />\n      </div>\n\n      <div className=\"button-group\">\n        <button \n          type=\"button\" \n          className=\"btn btn-secondary\"\n          onClick={onBack}\n        >\n          Back\n        </button>\n        <button \n          type=\"button\" \n          className={`btn btn-primary ${!isFormValid() ? 'disabled' : ''}`}\n          onClick={onNext}\n          disabled={!isFormValid()}\n        >\n          Next: Insulation Performance\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default RoofCondition; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}