{"ast":null,"code":"var _jsxFileName = \"/Users/xuefei/Desktop/calculator00/calculator/renewableCalculator.ui/src/components/steps/RoofCondition.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Wrapper, Status } from '@googlemaps/react-wrapper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostcodeLocationInput = ({\n  onLocationChange\n}) => {\n  _s();\n  const [postcode, setPostcode] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!postcode.trim()) return;\n    setIsLoading(true);\n    setError('');\n    try {\n      // Use the same postcode service as in BasicInformation\n      const response = await fetch(`https://api.postcodes.io/postcodes/${postcode.trim()}`);\n      const data = await response.json();\n      if (data.status === 200) {\n        const location = {\n          lat: data.result.latitude,\n          lng: data.result.longitude,\n          postcode: data.result.postcode,\n          location: `${data.result.admin_ward}, ${data.result.admin_district}`,\n          country: data.result.country\n        };\n        onLocationChange(location);\n      } else {\n        setError('Invalid postcode. Please check and try again.');\n      }\n    } catch (err) {\n      setError('Unable to find location. Please check your postcode.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"postcode-location-input\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"postcode-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: postcode,\n          onChange: e => setPostcode(e.target.value.toUpperCase()),\n          placeholder: \"Enter postcode (e.g. SW1A 1AA)\",\n          className: \"postcode-input\",\n          disabled: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          disabled: isLoading || !postcode.trim(),\n          children: isLoading ? 'Locating...' : 'Locate'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(PostcodeLocationInput, \"lTx9C+p1x3rHfp6JcFxxxn2aeVM=\");\n_c = PostcodeLocationInput;\nconst GoogleMapsPolygonDrawer = ({\n  onAreaChange,\n  userLocation,\n  apiKey\n}) => {\n  _s2();\n  const mapRef = useRef(null);\n  const [map, setMap] = useState(null);\n  const [polygon, setPolygon] = useState(null);\n  const [area, setArea] = useState(0);\n  const [currentLocation, setCurrentLocation] = useState(userLocation);\n\n  // Update map center when location changes\n  useEffect(() => {\n    if (map && currentLocation) {\n      map.setCenter(currentLocation);\n      map.setZoom(20);\n    }\n  }, [currentLocation, map]);\n  useEffect(() => {\n    if (mapRef.current && !map) {\n      const newMap = new window.google.maps.Map(mapRef.current, {\n        center: currentLocation || {\n          lat: 51.5074,\n          lng: -0.1278\n        },\n        // London default\n        zoom: 20,\n        mapTypeId: 'satellite',\n        tilt: 0\n      });\n\n      // Enable drawing manager\n      const drawingManager = new window.google.maps.drawing.DrawingManager({\n        drawingMode: window.google.maps.drawing.OverlayType.POLYGON,\n        drawingControl: true,\n        drawingControlOptions: {\n          position: window.google.maps.ControlPosition.TOP_CENTER,\n          drawingModes: [window.google.maps.drawing.OverlayType.POLYGON]\n        },\n        polygonOptions: {\n          fillColor: '#FF6B35',\n          fillOpacity: 0.5,\n          strokeColor: '#FF6B35',\n          strokeWeight: 2,\n          editable: true,\n          draggable: true\n        }\n      });\n      drawingManager.setMap(newMap);\n\n      // Handle polygon completion\n      drawingManager.addListener('polygoncomplete', newPolygon => {\n        // Remove previous polygon if exists\n        if (polygon) {\n          polygon.setMap(null);\n        }\n        setPolygon(newPolygon);\n        calculateArea(newPolygon);\n\n        // Add listener for polygon changes\n        newPolygon.getPath().addListener('set_at', () => calculateArea(newPolygon));\n        newPolygon.getPath().addListener('insert_at', () => calculateArea(newPolygon));\n        newPolygon.getPath().addListener('remove_at', () => calculateArea(newPolygon));\n\n        // Disable drawing after polygon is created\n        drawingManager.setDrawingMode(null);\n      });\n      setMap(newMap);\n    }\n  }, [mapRef.current, map, currentLocation]);\n  const calculateArea = polygon => {\n    const path = polygon.getPath();\n    const areaInSquareMeters = window.google.maps.geometry.spherical.computeArea(path);\n    setArea(areaInSquareMeters);\n    onAreaChange(areaInSquareMeters);\n  };\n  const clearPolygon = () => {\n    if (polygon) {\n      polygon.setMap(null);\n      setPolygon(null);\n      setArea(0);\n      onAreaChange(0);\n    }\n  };\n  const enableDrawing = () => {\n    if (map) {\n      const drawingManager = new window.google.maps.drawing.DrawingManager({\n        drawingMode: window.google.maps.drawing.OverlayType.POLYGON,\n        drawingControl: true,\n        drawingControlOptions: {\n          position: window.google.maps.ControlPosition.TOP_CENTER,\n          drawingModes: [window.google.maps.drawing.OverlayType.POLYGON]\n        },\n        polygonOptions: {\n          fillColor: '#FF6B35',\n          fillOpacity: 0.5,\n          strokeColor: '#FF6B35',\n          strokeWeight: 2,\n          editable: true,\n          draggable: true\n        }\n      });\n      drawingManager.setMap(map);\n    }\n  };\n  const handleLocationChange = newLocation => {\n    setCurrentLocation(newLocation);\n    // Clear existing polygon when location changes\n    if (polygon) {\n      clearPolygon();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"google-maps-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-location-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Change Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter a different postcode to locate another property:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PostcodeLocationInput, {\n        onLocationChange: handleLocationChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapRef,\n      style: {\n        height: '500px',\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearPolygon,\n        className: \"btn btn-secondary\",\n        disabled: !polygon,\n        children: \"Clear Roof Area\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: enableDrawing,\n        className: \"btn btn-outline\",\n        children: \"Draw New Area\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), area > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"area-display\",\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"Roof Area: \", area.toFixed(2), \" m\\xB2\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n};\n_s2(GoogleMapsPolygonDrawer, \"7Hza/UWUXwEi7OIcuUKMD44l//4=\");\n_c2 = GoogleMapsPolygonDrawer;\nconst render = status => {\n  switch (status) {\n    case Status.LOADING:\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"maps-loading\",\n        children: \"Loading Google Maps...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 14\n      }, this);\n    case Status.FAILURE:\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"maps-error\",\n        children: \"Error loading Google Maps. Please check your internet connection.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 14\n      }, this);\n    case Status.SUCCESS:\n      return null;\n  }\n};\nconst RoofCondition = ({\n  data,\n  onDataChange,\n  userLocation\n}) => {\n  _s3();\n  const [roofArea, setRoofArea] = useState(data.roofArea || 0);\n  const [roofConfig, setRoofConfig] = useState({\n    roofOrientation: data.roofOrientation || '',\n    roofAngle: data.roofAngle || '',\n    roofShading: data.roofShading || '',\n    roofUtilisation: data.roofUtilisation || ''\n  });\n  const handleAreaChange = areaFromMaps => {\n    const areaValue = areaFromMaps.toFixed(2);\n    setRoofArea(areaValue);\n    onDataChange({\n      roofArea: areaValue,\n      useMapsForArea: true\n    });\n  };\n  const handleConfigChange = (field, value) => {\n    const updatedConfig = {\n      ...roofConfig,\n      [field]: value\n    };\n    setRoofConfig(updatedConfig);\n    onDataChange({\n      [field]: value\n    });\n  };\n\n  // Generate roof angle options from 0 to 90 in increments of 10\n  const roofAngleOptions = Array.from({\n    length: 10\n  }, (_, i) => i * 10);\n  const apiKey = \"AIzaSyCpAABUQR_MiKb4yDovC3-1jM0LdIs59Hc\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"roof-condition-step\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"step-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"2.1 Roof Area Measurement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Use our interactive map to precisely measure your roof area for accurate solar panel calculations.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"roof-measurement-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-instructions\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"How to Measure Your Roof Area\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"instructions-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"instruction-step\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"step-number\",\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Use the polygon tool to trace your roof outline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"instruction-step\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"step-number\",\n              children: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Click to add points around your roof perimeter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"instruction-step\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"step-number\",\n              children: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Double-click to complete the polygon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"instruction-step\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"step-number\",\n              children: \"4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Drag points to adjust the shape for accuracy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"map-tips\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Tips for Accurate Measurement:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Trace only the usable roof area (avoid chimneys, skylights, dormers)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Include multiple roof sections if needed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"The satellite view helps identify the exact roof edges\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Be as precise as possible - this affects your solar panel calculations\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Interactive Roof Area Measurement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n          apiKey: apiKey,\n          render: render,\n          libraries: ['drawing', 'geometry'],\n          children: /*#__PURE__*/_jsxDEV(GoogleMapsPolygonDrawer, {\n            onAreaChange: handleAreaChange,\n            userLocation: userLocation,\n            apiKey: apiKey\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), roofArea > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"measurement-summary\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Measurement Complete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"measurement-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Measured Roof Area:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [roofArea, \" m\\xB2\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Estimated Solar Panel Capacity:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\"~\", (roofArea * 0.15).toFixed(1), \" kW\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Approximate Panel Count:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\"~\", Math.floor(roofArea / 2), \" panels\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"summary-note\",\n            children: \"*Estimates based on typical residential solar panel specifications (2m\\xB2 per panel, 150W/m\\xB2)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 11\n      }, this), roofArea > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"roof-configuration\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Roof Configuration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please provide additional details about your roof to optimize solar panel calculations.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"config-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"roofOrientation\",\n              children: \"Roof Orientation *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"roofOrientation\",\n              value: roofConfig.roofOrientation,\n              onChange: e => handleConfigChange('roofOrientation', e.target.value),\n              className: \"form-select\",\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select orientation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"n\",\n                children: \"North (N)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"ne\",\n                children: \"Northeast (NE)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"ene\",\n                children: \"East-Northeast (ENE)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"e\",\n                children: \"East (E)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"ese\",\n                children: \"East-Southeast (ESE)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"se\",\n                children: \"Southeast (SE)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"s\",\n                children: \"South (S)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"sw\",\n                children: \"Southwest (SW)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"wsw\",\n                children: \"West-Southwest (WSW)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"w\",\n                children: \"West (W)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"wnw\",\n                children: \"West-Northwest (WNW)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"nw\",\n                children: \"Northwest (NW)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: \"Direction your roof faces - affects solar energy generation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"roofAngle\",\n              children: \"Roof Angle *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"roofAngle\",\n              value: roofConfig.roofAngle,\n              onChange: e => handleConfigChange('roofAngle', e.target.value),\n              className: \"form-select\",\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select angle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 19\n              }, this), roofAngleOptions.map(angle => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: angle,\n                children: [angle, \"\\xB0 \", angle === 0 ? '(Flat)' : '']\n              }, angle, true, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: \"Roof slope angle in degrees - impacts solar panel efficiency\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"roofShading\",\n              children: \"Roof Shading *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"roofShading\",\n              value: roofConfig.roofShading,\n              onChange: e => handleConfigChange('roofShading', e.target.value),\n              className: \"form-select\",\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select shading level\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"no-shading\",\n                children: \"No Shading\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"light\",\n                children: \"Light Shading\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"moderate\",\n                children: \"Moderate Shading\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"heavy\",\n                children: \"Heavy Shading\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"extreme\",\n                children: \"Extreme Shading\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: \"Amount of shade from trees, buildings, or other obstructions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"roofUtilisation\",\n              children: \"Roof Utilisation *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"roofUtilisation\",\n              value: roofConfig.roofUtilisation,\n              onChange: e => handleConfigChange('roofUtilisation', e.target.value),\n              className: \"form-select\",\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select complexity level\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"minimal-obstacles\",\n                children: \"Minimal Obstacles\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"slightly-complex\",\n                children: \"Slightly Complex\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"moderately-complex\",\n                children: \"Moderately Complex\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"highly-complex\",\n                children: \"Highly Complex\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"extremely-complex\",\n                children: \"Extremely Complex\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: \"Roof complexity considering chimneys, vents, and other obstacles\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 250,\n    columnNumber: 5\n  }, this);\n};\n_s3(RoofCondition, \"D//ouocKlxpCIf+XJy//TPJmlbg=\");\n_c3 = RoofCondition;\nexport default RoofCondition;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"PostcodeLocationInput\");\n$RefreshReg$(_c2, \"GoogleMapsPolygonDrawer\");\n$RefreshReg$(_c3, \"RoofCondition\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Wrapper","Status","jsxDEV","_jsxDEV","PostcodeLocationInput","onLocationChange","_s","postcode","setPostcode","isLoading","setIsLoading","error","setError","handleSubmit","e","preventDefault","trim","response","fetch","data","json","status","location","lat","result","latitude","lng","longitude","admin_ward","admin_district","country","err","className","children","onSubmit","type","value","onChange","target","toUpperCase","placeholder","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","GoogleMapsPolygonDrawer","onAreaChange","userLocation","apiKey","_s2","mapRef","map","setMap","polygon","setPolygon","area","setArea","currentLocation","setCurrentLocation","setCenter","setZoom","current","newMap","window","google","maps","Map","center","zoom","mapTypeId","tilt","drawingManager","drawing","DrawingManager","drawingMode","OverlayType","POLYGON","drawingControl","drawingControlOptions","position","ControlPosition","TOP_CENTER","drawingModes","polygonOptions","fillColor","fillOpacity","strokeColor","strokeWeight","editable","draggable","addListener","newPolygon","calculateArea","getPath","setDrawingMode","path","areaInSquareMeters","geometry","spherical","computeArea","clearPolygon","enableDrawing","handleLocationChange","newLocation","ref","style","height","width","onClick","toFixed","_c2","render","LOADING","FAILURE","SUCCESS","RoofCondition","onDataChange","_s3","roofArea","setRoofArea","roofConfig","setRoofConfig","roofOrientation","roofAngle","roofShading","roofUtilisation","handleAreaChange","areaFromMaps","areaValue","useMapsForArea","handleConfigChange","field","updatedConfig","roofAngleOptions","Array","from","length","_","i","libraries","Math","floor","htmlFor","id","required","angle","_c3","$RefreshReg$"],"sources":["/Users/xuefei/Desktop/calculator00/calculator/renewableCalculator.ui/src/components/steps/RoofCondition.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Wrapper, Status } from '@googlemaps/react-wrapper';\n\nconst PostcodeLocationInput = ({ onLocationChange }) => {\n  const [postcode, setPostcode] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!postcode.trim()) return;\n\n    setIsLoading(true);\n    setError('');\n\n    try {\n      // Use the same postcode service as in BasicInformation\n      const response = await fetch(`https://api.postcodes.io/postcodes/${postcode.trim()}`);\n      const data = await response.json();\n\n      if (data.status === 200) {\n        const location = {\n          lat: data.result.latitude,\n          lng: data.result.longitude,\n          postcode: data.result.postcode,\n          location: `${data.result.admin_ward}, ${data.result.admin_district}`,\n          country: data.result.country\n        };\n        onLocationChange(location);\n      } else {\n        setError('Invalid postcode. Please check and try again.');\n      }\n    } catch (err) {\n      setError('Unable to find location. Please check your postcode.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"postcode-location-input\">\n      <form onSubmit={handleSubmit} className=\"postcode-form\">\n        <div className=\"input-group\">\n          <input\n            type=\"text\"\n            value={postcode}\n            onChange={(e) => setPostcode(e.target.value.toUpperCase())}\n            placeholder=\"Enter postcode (e.g. SW1A 1AA)\"\n            className=\"postcode-input\"\n            disabled={isLoading}\n          />\n          <button \n            type=\"submit\" \n            className=\"btn btn-primary\"\n            disabled={isLoading || !postcode.trim()}\n          >\n            {isLoading ? 'Locating...' : 'Locate'}\n          </button>\n        </div>\n        {error && <div className=\"error-message\">{error}</div>}\n      </form>\n    </div>\n  );\n};\n\nconst GoogleMapsPolygonDrawer = ({ onAreaChange, userLocation, apiKey }) => {\n  const mapRef = useRef(null);\n  const [map, setMap] = useState(null);\n  const [polygon, setPolygon] = useState(null);\n  const [area, setArea] = useState(0);\n  const [currentLocation, setCurrentLocation] = useState(userLocation);\n\n  // Update map center when location changes\n  useEffect(() => {\n    if (map && currentLocation) {\n      map.setCenter(currentLocation);\n      map.setZoom(20);\n    }\n  }, [currentLocation, map]);\n\n  useEffect(() => {\n    if (mapRef.current && !map) {\n      const newMap = new window.google.maps.Map(mapRef.current, {\n        center: currentLocation || { lat: 51.5074, lng: -0.1278 }, // London default\n        zoom: 20,\n        mapTypeId: 'satellite',\n        tilt: 0,\n      });\n\n      // Enable drawing manager\n      const drawingManager = new window.google.maps.drawing.DrawingManager({\n        drawingMode: window.google.maps.drawing.OverlayType.POLYGON,\n        drawingControl: true,\n        drawingControlOptions: {\n          position: window.google.maps.ControlPosition.TOP_CENTER,\n          drawingModes: [window.google.maps.drawing.OverlayType.POLYGON],\n        },\n        polygonOptions: {\n          fillColor: '#FF6B35',\n          fillOpacity: 0.5,\n          strokeColor: '#FF6B35',\n          strokeWeight: 2,\n          editable: true,\n          draggable: true,\n        },\n      });\n\n      drawingManager.setMap(newMap);\n\n      // Handle polygon completion\n      drawingManager.addListener('polygoncomplete', (newPolygon) => {\n        // Remove previous polygon if exists\n        if (polygon) {\n          polygon.setMap(null);\n        }\n\n        setPolygon(newPolygon);\n        calculateArea(newPolygon);\n\n        // Add listener for polygon changes\n        newPolygon.getPath().addListener('set_at', () => calculateArea(newPolygon));\n        newPolygon.getPath().addListener('insert_at', () => calculateArea(newPolygon));\n        newPolygon.getPath().addListener('remove_at', () => calculateArea(newPolygon));\n\n        // Disable drawing after polygon is created\n        drawingManager.setDrawingMode(null);\n      });\n\n      setMap(newMap);\n    }\n  }, [mapRef.current, map, currentLocation]);\n\n  const calculateArea = (polygon) => {\n    const path = polygon.getPath();\n    const areaInSquareMeters = window.google.maps.geometry.spherical.computeArea(path);\n    setArea(areaInSquareMeters);\n    onAreaChange(areaInSquareMeters);\n  };\n\n  const clearPolygon = () => {\n    if (polygon) {\n      polygon.setMap(null);\n      setPolygon(null);\n      setArea(0);\n      onAreaChange(0);\n    }\n  };\n\n  const enableDrawing = () => {\n    if (map) {\n      const drawingManager = new window.google.maps.drawing.DrawingManager({\n        drawingMode: window.google.maps.drawing.OverlayType.POLYGON,\n        drawingControl: true,\n        drawingControlOptions: {\n          position: window.google.maps.ControlPosition.TOP_CENTER,\n          drawingModes: [window.google.maps.drawing.OverlayType.POLYGON],\n        },\n        polygonOptions: {\n          fillColor: '#FF6B35',\n          fillOpacity: 0.5,\n          strokeColor: '#FF6B35',\n          strokeWeight: 2,\n          editable: true,\n          draggable: true,\n        },\n      });\n      drawingManager.setMap(map);\n    }\n  };\n\n  const handleLocationChange = (newLocation) => {\n    setCurrentLocation(newLocation);\n    // Clear existing polygon when location changes\n    if (polygon) {\n      clearPolygon();\n    }\n  };\n\n  return (\n    <div className=\"google-maps-container\">\n      <div className=\"map-location-controls\">\n        <h5>Change Location</h5>\n        <p>Enter a different postcode to locate another property:</p>\n        <PostcodeLocationInput onLocationChange={handleLocationChange} />\n      </div>\n      \n      <div ref={mapRef} style={{ height: '500px', width: '100%' }} />\n      \n      <div className=\"map-controls\">\n        <button onClick={clearPolygon} className=\"btn btn-secondary\" disabled={!polygon}>\n          Clear Roof Area\n        </button>\n        <button onClick={enableDrawing} className=\"btn btn-outline\">\n          Draw New Area\n        </button>\n        {area > 0 && (\n          <div className=\"area-display\">\n            <strong>Roof Area: {area.toFixed(2)} m²</strong>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst render = (status) => {\n  switch (status) {\n    case Status.LOADING:\n      return <div className=\"maps-loading\">Loading Google Maps...</div>;\n    case Status.FAILURE:\n      return <div className=\"maps-error\">Error loading Google Maps. Please check your internet connection.</div>;\n    case Status.SUCCESS:\n      return null;\n  }\n};\n\nconst RoofCondition = ({ data, onDataChange, userLocation }) => {\n  const [roofArea, setRoofArea] = useState(data.roofArea || 0);\n  const [roofConfig, setRoofConfig] = useState({\n    roofOrientation: data.roofOrientation || '',\n    roofAngle: data.roofAngle || '',\n    roofShading: data.roofShading || '',\n    roofUtilisation: data.roofUtilisation || ''\n  });\n\n  const handleAreaChange = (areaFromMaps) => {\n    const areaValue = areaFromMaps.toFixed(2);\n    setRoofArea(areaValue);\n    onDataChange({ \n      roofArea: areaValue,\n      useMapsForArea: true \n    });\n  };\n\n  const handleConfigChange = (field, value) => {\n    const updatedConfig = {\n      ...roofConfig,\n      [field]: value\n    };\n    setRoofConfig(updatedConfig);\n    onDataChange({ [field]: value });\n  };\n\n  // Generate roof angle options from 0 to 90 in increments of 10\n  const roofAngleOptions = Array.from({ length: 10 }, (_, i) => i * 10);\n\n  const apiKey = \"AIzaSyCpAABUQR_MiKb4yDovC3-1jM0LdIs59Hc\";\n\n  return (\n    <div className=\"roof-condition-step\">\n      <div className=\"step-header\">\n        <h3>2.1 Roof Area Measurement</h3>\n        <p>Use our interactive map to precisely measure your roof area for accurate solar panel calculations.</p>\n      </div>\n\n      <div className=\"roof-measurement-container\">\n        <div className=\"map-instructions\">\n          <h4>How to Measure Your Roof Area</h4>\n          <div className=\"instructions-grid\">\n            <div className=\"instruction-step\">\n              <span className=\"step-number\">1</span>\n              <p>Use the polygon tool to trace your roof outline</p>\n            </div>\n            <div className=\"instruction-step\">\n              <span className=\"step-number\">2</span>\n              <p>Click to add points around your roof perimeter</p>\n            </div>\n            <div className=\"instruction-step\">\n              <span className=\"step-number\">3</span>\n              <p>Double-click to complete the polygon</p>\n            </div>\n            <div className=\"instruction-step\">\n              <span className=\"step-number\">4</span>\n              <p>Drag points to adjust the shape for accuracy</p>\n            </div>\n          </div>\n          <div className=\"map-tips\">\n            <h5>Tips for Accurate Measurement:</h5>\n            <ul>\n              <li>Trace only the usable roof area (avoid chimneys, skylights, dormers)</li>\n              <li>Include multiple roof sections if needed</li>\n              <li>The satellite view helps identify the exact roof edges</li>\n              <li>Be as precise as possible - this affects your solar panel calculations</li>\n            </ul>\n          </div>\n        </div>\n\n        <div className=\"form-group\">\n          <label>Interactive Roof Area Measurement</label>\n          <Wrapper apiKey={apiKey} render={render} libraries={['drawing', 'geometry']}>\n            <GoogleMapsPolygonDrawer \n              onAreaChange={handleAreaChange}\n              userLocation={userLocation}\n              apiKey={apiKey}\n            />\n          </Wrapper>\n        </div>\n\n        {roofArea > 0 && (\n          <div className=\"measurement-summary\">\n            <div className=\"summary-card\">\n              <h4>Measurement Complete</h4>\n              <div className=\"measurement-details\">\n                <div className=\"detail-row\">\n                  <span>Measured Roof Area:</span>\n                  <strong>{roofArea} m²</strong>\n                </div>\n                <div className=\"detail-row\">\n                  <span>Estimated Solar Panel Capacity:</span>\n                  <strong>~{(roofArea * 0.15).toFixed(1)} kW</strong>\n                </div>\n                <div className=\"detail-row\">\n                  <span>Approximate Panel Count:</span>\n                  <strong>~{Math.floor(roofArea / 2)} panels</strong>\n                </div>\n              </div>\n              <small className=\"summary-note\">\n                *Estimates based on typical residential solar panel specifications (2m² per panel, 150W/m²)\n              </small>\n            </div>\n          </div>\n        )}\n\n        {roofArea > 0 && (\n          <div className=\"roof-configuration\">\n            <h4>Roof Configuration</h4>\n            <p>Please provide additional details about your roof to optimize solar panel calculations.</p>\n            \n            <div className=\"config-grid\">\n              <div className=\"form-group\">\n                <label htmlFor=\"roofOrientation\">Roof Orientation *</label>\n                <select\n                  id=\"roofOrientation\"\n                  value={roofConfig.roofOrientation}\n                  onChange={(e) => handleConfigChange('roofOrientation', e.target.value)}\n                  className=\"form-select\"\n                  required\n                >\n                  <option value=\"\">Select orientation</option>\n                  <option value=\"n\">North (N)</option>\n                  <option value=\"ne\">Northeast (NE)</option>\n                  <option value=\"ene\">East-Northeast (ENE)</option>\n                  <option value=\"e\">East (E)</option>\n                  <option value=\"ese\">East-Southeast (ESE)</option>\n                  <option value=\"se\">Southeast (SE)</option>\n                  <option value=\"s\">South (S)</option>\n                  <option value=\"sw\">Southwest (SW)</option>\n                  <option value=\"wsw\">West-Southwest (WSW)</option>\n                  <option value=\"w\">West (W)</option>\n                  <option value=\"wnw\">West-Northwest (WNW)</option>\n                  <option value=\"nw\">Northwest (NW)</option>\n                </select>\n                <small>Direction your roof faces - affects solar energy generation</small>\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"roofAngle\">Roof Angle *</label>\n                <select\n                  id=\"roofAngle\"\n                  value={roofConfig.roofAngle}\n                  onChange={(e) => handleConfigChange('roofAngle', e.target.value)}\n                  className=\"form-select\"\n                  required\n                >\n                  <option value=\"\">Select angle</option>\n                  {roofAngleOptions.map(angle => (\n                    <option key={angle} value={angle}>{angle}° {angle === 0 ? '(Flat)' : ''}</option>\n                  ))}\n                </select>\n                <small>Roof slope angle in degrees - impacts solar panel efficiency</small>\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"roofShading\">Roof Shading *</label>\n                <select\n                  id=\"roofShading\"\n                  value={roofConfig.roofShading}\n                  onChange={(e) => handleConfigChange('roofShading', e.target.value)}\n                  className=\"form-select\"\n                  required\n                >\n                  <option value=\"\">Select shading level</option>\n                  <option value=\"no-shading\">No Shading</option>\n                  <option value=\"light\">Light Shading</option>\n                  <option value=\"moderate\">Moderate Shading</option>\n                  <option value=\"heavy\">Heavy Shading</option>\n                  <option value=\"extreme\">Extreme Shading</option>\n                </select>\n                <small>Amount of shade from trees, buildings, or other obstructions</small>\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"roofUtilisation\">Roof Utilisation *</label>\n                <select\n                  id=\"roofUtilisation\"\n                  value={roofConfig.roofUtilisation}\n                  onChange={(e) => handleConfigChange('roofUtilisation', e.target.value)}\n                  className=\"form-select\"\n                  required\n                >\n                  <option value=\"\">Select complexity level</option>\n                  <option value=\"minimal-obstacles\">Minimal Obstacles</option>\n                  <option value=\"slightly-complex\">Slightly Complex</option>\n                  <option value=\"moderately-complex\">Moderately Complex</option>\n                  <option value=\"highly-complex\">Highly Complex</option>\n                  <option value=\"extremely-complex\">Extremely Complex</option>\n                </select>\n                <small>Roof complexity considering chimneys, vents, and other obstacles</small>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default RoofCondition; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}