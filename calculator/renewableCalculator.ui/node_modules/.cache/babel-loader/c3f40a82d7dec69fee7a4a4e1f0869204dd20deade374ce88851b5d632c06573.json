{"ast":null,"code":"var _jsxFileName = \"/Users/xuefei/Desktop/calculator00/calculator/renewableCalculator.ui/src/components/steps/BasicInformation.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ClimateChart from './address-input/ClimateChart';\nimport MethodSelector from './basic-information/MethodSelector';\nimport MethodRenderer from './basic-information/MethodRenderer';\nimport LocationSummary from './basic-information/LocationSummary';\nimport PropertyInformation from './basic-information/PropertyInformation';\nimport { LocationHelpModal, FieldHelpModal } from './basic-information/HelpModals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BasicInformation = ({\n  data,\n  onDataChange,\n  onNext\n}) => {\n  _s();\n  const [activeMethod, setActiveMethod] = useState('postcode');\n  const [locationData, setLocationData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showHelp, setShowHelp] = useState(false);\n  const [activeTooltip, setActiveTooltip] = useState(null);\n\n  // Property information state\n  const [propertyInfo, setPropertyInfo] = useState({\n    propertyType: '',\n    buildingYear: '',\n    epcRating: ''\n  });\n  const handleLocationSelect = location => {\n    setLocationData(location);\n    // Save location data to parent component\n    const updatedData = {\n      ...propertyInfo,\n      // Include property info\n      locationMethod: location.type,\n      postcode: location.postcode,\n      latitude: location.latitude,\n      longitude: location.longitude,\n      location: location.location,\n      country: location.country,\n      city: location.city,\n      region: location.region\n    };\n    onDataChange(updatedData);\n  };\n\n  // Handle property information changes\n  const handlePropertyInfoChange = (field, value) => {\n    const updatedPropertyInfo = {\n      ...propertyInfo,\n      [field]: value\n    };\n    setPropertyInfo(updatedPropertyInfo);\n\n    // If location data exists, update parent component data\n    if (locationData) {\n      const updatedData = {\n        ...updatedPropertyInfo,\n        locationMethod: locationData.type,\n        postcode: locationData.postcode,\n        latitude: locationData.latitude,\n        longitude: locationData.longitude,\n        location: locationData.location,\n        country: locationData.country,\n        city: locationData.city,\n        region: locationData.region\n      };\n      onDataChange(updatedData);\n    }\n  };\n\n  // Show/hide help tooltip\n  const toggleTooltip = field => {\n    setActiveTooltip(activeTooltip === field ? null : field);\n  };\n  const handleMethodChange = method => {\n    setActiveMethod(method);\n    setLocationData(null); // Clear previous data\n  };\n  const handleNext = () => {\n    // Check if location data and property info are complete\n    if (locationData && propertyInfo.propertyType && propertyInfo.buildingYear && propertyInfo.epcRating) {\n      onNext();\n    }\n  };\n\n  // Check if all required information is complete\n  const isFormComplete = locationData && propertyInfo.propertyType && propertyInfo.buildingYear && propertyInfo.epcRating;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"step-container address-input-step\",\n    children: [/*#__PURE__*/_jsxDEV(MethodSelector, {\n      activeMethod: activeMethod,\n      onMethodChange: handleMethodChange,\n      onShowHelp: () => setShowHelp(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"method-content\",\n      children: /*#__PURE__*/_jsxDEV(MethodRenderer, {\n        activeMethod: activeMethod,\n        onLocationSelect: handleLocationSelect,\n        isLoading: isLoading,\n        setIsLoading: setIsLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LocationSummary, {\n      locationData: locationData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), locationData && /*#__PURE__*/_jsxDEV(ClimateChart, {\n      latitude: locationData.latitude,\n      longitude: locationData.longitude,\n      location: locationData.location\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(PropertyInformation, {\n      locationData: locationData,\n      propertyInfo: propertyInfo,\n      onPropertyInfoChange: handlePropertyInfoChange,\n      onToggleTooltip: toggleTooltip\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn btn-primary ${!isFormComplete ? 'disabled' : ''}`,\n        onClick: handleNext,\n        disabled: !isFormComplete || isLoading,\n        children: \"Next: House Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LocationHelpModal, {\n      showHelp: showHelp,\n      onClose: () => setShowHelp(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FieldHelpModal, {\n      activeTooltip: activeTooltip,\n      onClose: () => setActiveTooltip(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(BasicInformation, \"d8zvs8c6Mfupfrel6veLub3ifGs=\");\n_c = BasicInformation;\nexport default BasicInformation;\nvar _c;\n$RefreshReg$(_c, \"BasicInformation\");","map":{"version":3,"names":["React","useState","ClimateChart","MethodSelector","MethodRenderer","LocationSummary","PropertyInformation","LocationHelpModal","FieldHelpModal","jsxDEV","_jsxDEV","BasicInformation","data","onDataChange","onNext","_s","activeMethod","setActiveMethod","locationData","setLocationData","isLoading","setIsLoading","showHelp","setShowHelp","activeTooltip","setActiveTooltip","propertyInfo","setPropertyInfo","propertyType","buildingYear","epcRating","handleLocationSelect","location","updatedData","locationMethod","type","postcode","latitude","longitude","country","city","region","handlePropertyInfoChange","field","value","updatedPropertyInfo","toggleTooltip","handleMethodChange","method","handleNext","isFormComplete","className","children","onMethodChange","onShowHelp","fileName","_jsxFileName","lineNumber","columnNumber","onLocationSelect","onPropertyInfoChange","onToggleTooltip","onClick","disabled","onClose","_c","$RefreshReg$"],"sources":["/Users/xuefei/Desktop/calculator00/calculator/renewableCalculator.ui/src/components/steps/BasicInformation.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ClimateChart from './address-input/ClimateChart';\nimport MethodSelector from './basic-information/MethodSelector';\nimport MethodRenderer from './basic-information/MethodRenderer';\nimport LocationSummary from './basic-information/LocationSummary';\nimport PropertyInformation from './basic-information/PropertyInformation';\nimport { LocationHelpModal, FieldHelpModal } from './basic-information/HelpModals';\n\nconst BasicInformation = ({ data, onDataChange, onNext }) => {\n  const [activeMethod, setActiveMethod] = useState('postcode');\n  const [locationData, setLocationData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showHelp, setShowHelp] = useState(false);\n  const [activeTooltip, setActiveTooltip] = useState(null);\n  \n  // Property information state\n  const [propertyInfo, setPropertyInfo] = useState({\n    propertyType: '',\n    buildingYear: '',\n    epcRating: ''\n  });\n\n  const handleLocationSelect = (location) => {\n    setLocationData(location);\n    // Save location data to parent component\n    const updatedData = {\n      ...propertyInfo, // Include property info\n      locationMethod: location.type,\n      postcode: location.postcode,\n      latitude: location.latitude,\n      longitude: location.longitude,\n      location: location.location,\n      country: location.country,\n      city: location.city,\n      region: location.region\n    };\n    onDataChange(updatedData);\n  };\n\n  // Handle property information changes\n  const handlePropertyInfoChange = (field, value) => {\n    const updatedPropertyInfo = { ...propertyInfo, [field]: value };\n    setPropertyInfo(updatedPropertyInfo);\n    \n    // If location data exists, update parent component data\n    if (locationData) {\n      const updatedData = {\n        ...updatedPropertyInfo,\n        locationMethod: locationData.type,\n        postcode: locationData.postcode,\n        latitude: locationData.latitude,\n        longitude: locationData.longitude,\n        location: locationData.location,\n        country: locationData.country,\n        city: locationData.city,\n        region: locationData.region\n      };\n      onDataChange(updatedData);\n    }\n  };\n\n  // Show/hide help tooltip\n  const toggleTooltip = (field) => {\n    setActiveTooltip(activeTooltip === field ? null : field);\n  };\n\n  const handleMethodChange = (method) => {\n    setActiveMethod(method);\n    setLocationData(null); // Clear previous data\n  };\n\n  const handleNext = () => {\n    // Check if location data and property info are complete\n    if (locationData && propertyInfo.propertyType && propertyInfo.buildingYear && propertyInfo.epcRating) {\n      onNext();\n    }\n  };\n\n  // Check if all required information is complete\n  const isFormComplete = locationData && \n                         propertyInfo.propertyType && \n                         propertyInfo.buildingYear && \n                         propertyInfo.epcRating;\n\n  return (\n    <div className=\"step-container address-input-step\">\n      <MethodSelector\n        activeMethod={activeMethod}\n        onMethodChange={handleMethodChange}\n        onShowHelp={() => setShowHelp(true)}\n      />\n      \n      <div className=\"method-content\">\n        <MethodRenderer\n          activeMethod={activeMethod}\n          onLocationSelect={handleLocationSelect}\n          isLoading={isLoading}\n          setIsLoading={setIsLoading}\n        />\n      </div>\n\n      <LocationSummary locationData={locationData} />\n\n      {locationData && (\n        <ClimateChart\n          latitude={locationData.latitude}\n          longitude={locationData.longitude}\n          location={locationData.location}\n        />\n      )}\n\n      <PropertyInformation\n        locationData={locationData}\n        propertyInfo={propertyInfo}\n        onPropertyInfoChange={handlePropertyInfoChange}\n        onToggleTooltip={toggleTooltip}\n      />\n\n      <div className=\"button-group\">\n        <div></div>\n        <button\n          className={`btn btn-primary ${!isFormComplete ? 'disabled' : ''}`}\n          onClick={handleNext}\n          disabled={!isFormComplete || isLoading}\n        >\n          Next: House Details\n        </button>\n      </div>\n\n      <LocationHelpModal \n        showHelp={showHelp} \n        onClose={() => setShowHelp(false)} \n      />\n      \n      <FieldHelpModal \n        activeTooltip={activeTooltip} \n        onClose={() => setActiveTooltip(null)} \n      />\n    </div>\n  );\n};\n\nexport default BasicInformation; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}