{"ast":null,"code":"var _jsxFileName = \"/Users/xuefei/Desktop/calculator00/calculator/renewableCalculator.ui/src/components/steps/EnergyDemand.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EnergyDemand = ({\n  data,\n  onDataChange,\n  onNext,\n  onBack\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    householdSize: data.householdSize || \"\",\n    knowsMonthlyUsage: data.knowsMonthlyUsage || \"\",\n    monthlyElectricityUsage: data.monthlyElectricityUsage || {\n      january: \"\",\n      february: \"\",\n      march: \"\",\n      april: \"\",\n      may: \"\",\n      june: \"\",\n      july: \"\",\n      august: \"\",\n      september: \"\",\n      october: \"\",\n      november: \"\",\n      december: \"\"\n    },\n    knowsAnnualUsage: data.knowsAnnualUsage || \"\",\n    annualElectricityUsage: data.annualElectricityUsage || \"\",\n    floorArea: data.floorArea || \"\",\n    ...data\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    let updatedData = {\n      [name]: value\n    };\n\n    // Clear related fields when switching between monthly/annual usage options\n    if (name === \"knowsMonthlyUsage\") {\n      if (value === \"yes\") {\n        updatedData.knowsAnnualUsage = \"\";\n        updatedData.annualElectricityUsage = \"\";\n      } else if (value === \"no\") {\n        updatedData.monthlyElectricityUsage = {\n          january: \"\",\n          february: \"\",\n          march: \"\",\n          april: \"\",\n          may: \"\",\n          june: \"\",\n          july: \"\",\n          august: \"\",\n          september: \"\",\n          october: \"\",\n          november: \"\",\n          december: \"\"\n        };\n      }\n    } else if (name === \"knowsAnnualUsage\" && value === \"yes\") {\n      // Clear monthly usage when switching to knowing annual\n      updatedData.monthlyElectricityUsage = {\n        january: \"\",\n        february: \"\",\n        march: \"\",\n        april: \"\",\n        may: \"\",\n        june: \"\",\n        july: \"\",\n        august: \"\",\n        september: \"\",\n        october: \"\",\n        november: \"\",\n        december: \"\"\n      };\n    }\n    setFormData(prev => ({\n      ...prev,\n      ...updatedData\n    }));\n    onDataChange(updatedData);\n  };\n  const handleMonthlyChange = (month, value) => {\n    const updatedMonthlyUsage = {\n      ...formData.monthlyElectricityUsage,\n      [month]: value\n    };\n    setFormData(prev => ({\n      ...prev,\n      monthlyElectricityUsage: updatedMonthlyUsage\n    }));\n    onDataChange({\n      monthlyElectricityUsage: updatedMonthlyUsage\n    });\n  };\n  const handleNext = () => {\n    onNext();\n  };\n  const isFormValid = () => {\n    if (!formData.householdSize || !formData.knowsMonthlyUsage || !formData.floorArea) {\n      return false;\n    }\n    if (formData.knowsMonthlyUsage === \"yes\") {\n      // Check if all 12 months have values\n      const months = [\"january\", \"february\", \"march\", \"april\", \"may\", \"june\", \"july\", \"august\", \"september\", \"october\", \"november\", \"december\"];\n      return months.every(month => formData.monthlyElectricityUsage[month] && formData.monthlyElectricityUsage[month].trim() !== \"\");\n    }\n    if (formData.knowsMonthlyUsage === \"no\") {\n      if (!formData.knowsAnnualUsage) {\n        return false;\n      }\n      if (formData.knowsAnnualUsage === \"yes\") {\n        return formData.annualElectricityUsage;\n      }\n      return true; // If they don't know annual usage either, that's valid\n    }\n    return false;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"step-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"step-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Energy Demand\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Tell us about your household's energy usage patterns to calculate accurate renewable energy recommendations.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"householdSize\",\n        children: \"How many people live in your household regularly?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"householdSize\",\n        name: \"householdSize\",\n        value: formData.householdSize,\n        onChange: handleChange,\n        placeholder: \"Enter number of people\",\n        min: \"1\",\n        max: \"20\",\n        className: \"form-input\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"knowsMonthlyUsage\",\n        children: \"Do you know your monthly electricity usage?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"knowsMonthlyUsage\",\n        name: \"knowsMonthlyUsage\",\n        value: formData.knowsMonthlyUsage,\n        onChange: handleChange,\n        className: \"form-select\",\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select an option\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"yes\",\n          children: \"Yes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"no\",\n          children: \"No\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), formData.knowsMonthlyUsage === \"yes\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"monthly-usage-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"monthly-usage-title\",\n          children: \"Monthly electricity usage (kWh)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"monthly-usage-description\",\n          children: \"Please enter your electricity usage for each month:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"monthly-usage-grid\",\n          children: [{\n            key: \"january\",\n            label: \"January\"\n          }, {\n            key: \"february\",\n            label: \"February\"\n          }, {\n            key: \"march\",\n            label: \"March\"\n          }, {\n            key: \"april\",\n            label: \"April\"\n          }, {\n            key: \"may\",\n            label: \"May\"\n          }, {\n            key: \"june\",\n            label: \"June\"\n          }, {\n            key: \"july\",\n            label: \"July\"\n          }, {\n            key: \"august\",\n            label: \"August\"\n          }, {\n            key: \"september\",\n            label: \"September\"\n          }, {\n            key: \"october\",\n            label: \"October\"\n          }, {\n            key: \"november\",\n            label: \"November\"\n          }, {\n            key: \"december\",\n            label: \"December\"\n          }].map(month => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"monthly-input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: month.key,\n              className: \"month-label\",\n              children: month.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: month.key,\n              name: month.key,\n              value: formData.monthlyElectricityUsage[month.key],\n              onChange: e => handleMonthlyChange(month.key, e.target.value),\n              placeholder: \"kWh\",\n              min: \"0\",\n              step: \"0.1\",\n              className: \"form-input month-input\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this)]\n          }, month.key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this), formData.knowsMonthlyUsage === \"no\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"knowsAnnualUsage\",\n          children: \"Do you know your annual electricity usage?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"knowsAnnualUsage\",\n          name: \"knowsAnnualUsage\",\n          value: formData.knowsAnnualUsage,\n          onChange: handleChange,\n          className: \"form-select\",\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select an option\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"yes\",\n            children: \"Yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"no\",\n            children: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this), formData.knowsAnnualUsage === \"yes\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"annualElectricityUsage\",\n          children: \"Annual electricity usage (kWh)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"annualElectricityUsage\",\n          name: \"annualElectricityUsage\",\n          value: formData.annualElectricityUsage,\n          onChange: handleChange,\n          placeholder: \"Enter annual usage in kWh\",\n          min: \"0\",\n          step: \"1\",\n          className: \"form-input\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"floorArea\",\n        children: \"What is your approximate floor area? (m\\xB2)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"floorArea\",\n        name: \"floorArea\",\n        value: formData.floorArea,\n        onChange: handleChange,\n        placeholder: \"Enter floor area in square metres\",\n        min: \"1\",\n        step: \"0.1\",\n        className: \"form-input\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary\",\n        onClick: onBack,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: `btn btn-primary ${!isFormValid() ? 'disabled' : ''}`,\n        onClick: handleNext,\n        disabled: !isFormValid(),\n        children: \"Next: Solar Configuration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(EnergyDemand, \"6V1YXJulYZwW9xueqldXbJiohtg=\");\n_c = EnergyDemand;\nexport default EnergyDemand;\nvar _c;\n$RefreshReg$(_c, \"EnergyDemand\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","EnergyDemand","data","onDataChange","onNext","onBack","_s","formData","setFormData","householdSize","knowsMonthlyUsage","monthlyElectricityUsage","january","february","march","april","may","june","july","august","september","october","november","december","knowsAnnualUsage","annualElectricityUsage","floorArea","handleChange","e","name","value","target","updatedData","prev","handleMonthlyChange","month","updatedMonthlyUsage","handleNext","isFormValid","months","every","trim","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","placeholder","min","max","required","key","label","map","step","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/xuefei/Desktop/calculator00/calculator/renewableCalculator.ui/src/components/steps/EnergyDemand.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst EnergyDemand = ({ data, onDataChange, onNext, onBack }) => {\n  const [formData, setFormData] = useState({\n    householdSize: data.householdSize || \"\",\n    knowsMonthlyUsage: data.knowsMonthlyUsage || \"\",\n    monthlyElectricityUsage: data.monthlyElectricityUsage || {\n      january: \"\", february: \"\", march: \"\", april: \"\", may: \"\", june: \"\",\n      july: \"\", august: \"\", september: \"\", october: \"\", november: \"\", december: \"\"\n    },\n    knowsAnnualUsage: data.knowsAnnualUsage || \"\",\n    annualElectricityUsage: data.annualElectricityUsage || \"\",\n    floorArea: data.floorArea || \"\",\n    ...data\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    let updatedData = { [name]: value };\n    \n    // Clear related fields when switching between monthly/annual usage options\n    if (name === \"knowsMonthlyUsage\") {\n      if (value === \"yes\") {\n        updatedData.knowsAnnualUsage = \"\";\n        updatedData.annualElectricityUsage = \"\";\n      } else if (value === \"no\") {\n        updatedData.monthlyElectricityUsage = {\n          january: \"\", february: \"\", march: \"\", april: \"\", may: \"\", june: \"\",\n          july: \"\", august: \"\", september: \"\", october: \"\", november: \"\", december: \"\"\n        };\n      }\n    } else if (name === \"knowsAnnualUsage\" && value === \"yes\") {\n      // Clear monthly usage when switching to knowing annual\n      updatedData.monthlyElectricityUsage = {\n        january: \"\", february: \"\", march: \"\", april: \"\", may: \"\", june: \"\",\n        july: \"\", august: \"\", september: \"\", october: \"\", november: \"\", december: \"\"\n      };\n    }\n    \n    setFormData(prev => ({\n      ...prev,\n      ...updatedData\n    }));\n    onDataChange(updatedData);\n  };\n\n  const handleMonthlyChange = (month, value) => {\n    const updatedMonthlyUsage = {\n      ...formData.monthlyElectricityUsage,\n      [month]: value\n    };\n    \n    setFormData(prev => ({\n      ...prev,\n      monthlyElectricityUsage: updatedMonthlyUsage\n    }));\n    onDataChange({ monthlyElectricityUsage: updatedMonthlyUsage });\n  };\n\n  const handleNext = () => {\n    onNext();\n  };\n\n  const isFormValid = () => {\n    if (!formData.householdSize || !formData.knowsMonthlyUsage || !formData.floorArea) {\n      return false;\n    }\n    \n    if (formData.knowsMonthlyUsage === \"yes\") {\n      // Check if all 12 months have values\n      const months = [\"january\", \"february\", \"march\", \"april\", \"may\", \"june\", \n                     \"july\", \"august\", \"september\", \"october\", \"november\", \"december\"];\n      return months.every(month => formData.monthlyElectricityUsage[month] && \n                                   formData.monthlyElectricityUsage[month].trim() !== \"\");\n    }\n    \n    if (formData.knowsMonthlyUsage === \"no\") {\n      if (!formData.knowsAnnualUsage) {\n        return false;\n      }\n      if (formData.knowsAnnualUsage === \"yes\") {\n        return formData.annualElectricityUsage;\n      }\n      return true; // If they don't know annual usage either, that's valid\n    }\n    \n    return false;\n  };\n\n  return (\n    <div className=\"step-container\">\n      <div className=\"step-header\">\n        <h2>Energy Demand</h2>\n        <p>Tell us about your household's energy usage patterns to calculate accurate renewable energy recommendations.</p>\n      </div>\n\n      <div className=\"form-group\">\n        <label htmlFor=\"householdSize\">How many people live in your household regularly?</label>\n        <input\n          type=\"number\"\n          id=\"householdSize\"\n          name=\"householdSize\"\n          value={formData.householdSize}\n          onChange={handleChange}\n          placeholder=\"Enter number of people\"\n          min=\"1\"\n          max=\"20\"\n          className=\"form-input\"\n          required\n        />\n      </div>\n\n      <div className=\"form-group\">\n        <label htmlFor=\"knowsMonthlyUsage\">Do you know your monthly electricity usage?</label>\n        <select\n          id=\"knowsMonthlyUsage\"\n          name=\"knowsMonthlyUsage\"\n          value={formData.knowsMonthlyUsage}\n          onChange={handleChange}\n          className=\"form-select\"\n          required\n        >\n          <option value=\"\">Select an option</option>\n          <option value=\"yes\">Yes</option>\n          <option value=\"no\">No</option>\n        </select>\n      </div>\n\n      {formData.knowsMonthlyUsage === \"yes\" && (\n        <div className=\"form-group\">\n          <div className=\"monthly-usage-container\">\n            <h3 className=\"monthly-usage-title\">Monthly electricity usage (kWh)</h3>\n            <p className=\"monthly-usage-description\">Please enter your electricity usage for each month:</p>\n            <div className=\"monthly-usage-grid\">\n            {[\n              { key: \"january\", label: \"January\" },\n              { key: \"february\", label: \"February\" },\n              { key: \"march\", label: \"March\" },\n              { key: \"april\", label: \"April\" },\n              { key: \"may\", label: \"May\" },\n              { key: \"june\", label: \"June\" },\n              { key: \"july\", label: \"July\" },\n              { key: \"august\", label: \"August\" },\n              { key: \"september\", label: \"September\" },\n              { key: \"october\", label: \"October\" },\n              { key: \"november\", label: \"November\" },\n              { key: \"december\", label: \"December\" }\n            ].map(month => (\n              <div key={month.key} className=\"monthly-input-group\">\n                <label htmlFor={month.key} className=\"month-label\">{month.label}</label>\n                <input\n                  type=\"number\"\n                  id={month.key}\n                  name={month.key}\n                  value={formData.monthlyElectricityUsage[month.key]}\n                  onChange={(e) => handleMonthlyChange(month.key, e.target.value)}\n                  placeholder=\"kWh\"\n                  min=\"0\"\n                  step=\"0.1\"\n                  className=\"form-input month-input\"\n                  required\n                />\n              </div>\n            ))}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {formData.knowsMonthlyUsage === \"no\" && (\n        <>\n          <div className=\"form-group\">\n            <label htmlFor=\"knowsAnnualUsage\">Do you know your annual electricity usage?</label>\n            <select\n              id=\"knowsAnnualUsage\"\n              name=\"knowsAnnualUsage\"\n              value={formData.knowsAnnualUsage}\n              onChange={handleChange}\n              className=\"form-select\"\n              required\n            >\n              <option value=\"\">Select an option</option>\n              <option value=\"yes\">Yes</option>\n              <option value=\"no\">No</option>\n            </select>\n          </div>\n\n          {formData.knowsAnnualUsage === \"yes\" && (\n            <div className=\"form-group\">\n              <label htmlFor=\"annualElectricityUsage\">Annual electricity usage (kWh)</label>\n              <input\n                type=\"number\"\n                id=\"annualElectricityUsage\"\n                name=\"annualElectricityUsage\"\n                value={formData.annualElectricityUsage}\n                onChange={handleChange}\n                placeholder=\"Enter annual usage in kWh\"\n                min=\"0\"\n                step=\"1\"\n                className=\"form-input\"\n                required\n              />\n            </div>\n          )}\n        </>\n      )}\n\n      <div className=\"form-group\">\n        <label htmlFor=\"floorArea\">What is your approximate floor area? (m²)</label>\n        <input\n          type=\"number\"\n          id=\"floorArea\"\n          name=\"floorArea\"\n          value={formData.floorArea}\n          onChange={handleChange}\n          placeholder=\"Enter floor area in square metres\"\n          min=\"1\"\n          step=\"0.1\"\n          className=\"form-input\"\n          required\n        />\n      </div>\n\n      <div className=\"button-group\">\n        <button \n          type=\"button\" \n          className=\"btn btn-secondary\"\n          onClick={onBack}\n        >\n          Back\n        </button>\n        <button \n          type=\"button\" \n          className={`btn btn-primary ${!isFormValid() ? 'disabled' : ''}`}\n          onClick={handleNext}\n          disabled={!isFormValid()}\n        >\n          Next: Solar Configuration\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default EnergyDemand; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}