{"ast":null,"code":"var _jsxFileName = \"/Users/xuefei/Desktop/calculator00/calculator/renewableCalculator.ui/src/components/steps/ConfigurationComparison.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst ConfigurationComparison = ({\n  selectedEquipment,\n  userData,\n  onBack\n}) => {\n  _s();\n  const [availableEquipment, setAvailableEquipment] = useState({});\n  const [configurations, setConfigurations] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showChart, setShowChart] = useState({\n    visible: false,\n    data: null,\n    title: ''\n  });\n  useEffect(() => {\n    loadAvailableEquipment();\n  }, [selectedEquipment]);\n  const loadAvailableEquipment = async () => {\n    try {\n      const promises = [];\n      if (selectedEquipment.solarPanels) {\n        promises.push(fetch('http://localhost:8080/api/equipment/solar-panels/available').then(res => res.json()).then(data => ({\n          type: 'solar',\n          data\n        })));\n      }\n      if (selectedEquipment.heatPump) {\n        promises.push(fetch('http://localhost:8080/api/equipment/heat-pumps/available').then(res => res.json()).then(data => ({\n          type: 'heatPump',\n          data\n        })));\n      }\n      if (selectedEquipment.batteryStorage) {\n        promises.push(fetch('http://localhost:8080/api/equipment/batteries/available').then(res => res.json()).then(data => ({\n          type: 'battery',\n          data\n        })));\n      }\n      const results = await Promise.all(promises);\n      const available = {};\n      results.forEach(result => {\n        available[result.type] = result.data;\n      });\n      setAvailableEquipment(available);\n\n      // Initialize with 3 configuration rows\n      const initialConfigurations = [];\n      for (let i = 0; i < 3; i++) {\n        initialConfigurations.push(createEmptyConfiguration(i + 1));\n      }\n      setConfigurations(initialConfigurations);\n    } catch (error) {\n      console.error('Error loading available equipment:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const createEmptyConfiguration = configNumber => ({\n    id: configNumber,\n    name: `Configuration ${configNumber}`,\n    selections: {\n      solar: selectedEquipment.solarPanels ? '' : null,\n      heatPump: selectedEquipment.heatPump ? '' : null,\n      battery: selectedEquipment.batteryStorage ? '' : null\n    },\n    calculations: {\n      installationCost: 0,\n      annualGeneration: 0,\n      annualSavings: 0,\n      annualExportRevenue: 0,\n      annualCO2Savings: 0,\n      paybackPeriod: 0,\n      monthlyData: {\n        generation: new Array(12).fill(0),\n        savings: new Array(12).fill(0),\n        exportRevenue: new Array(12).fill(0),\n        co2Savings: new Array(12).fill(0)\n      }\n    },\n    loading: false\n  });\n  const handleEquipmentChange = async (configId, equipmentType, equipmentId) => {\n    // Update the selection\n    setConfigurations(prev => prev.map(config => {\n      if (config.id === configId) {\n        return {\n          ...config,\n          selections: {\n            ...config.selections,\n            [equipmentType]: equipmentId\n          },\n          loading: true\n        };\n      }\n      return config;\n    }));\n\n    // Recalculate for this configuration\n    await recalculateConfiguration(configId, equipmentType, equipmentId);\n  };\n  const recalculateConfiguration = async (configId, changedEquipmentType, changedEquipmentId) => {\n    try {\n      const config = configurations.find(c => c.id === configId);\n      if (!config) return;\n\n      // Update the changed selection\n      const updatedSelections = {\n        ...config.selections,\n        [changedEquipmentType]: changedEquipmentId\n      };\n\n      // Build request for calculation\n      const calculationRequest = {\n        hasSolarPanels: selectedEquipment.solarPanels,\n        hasHeatPump: selectedEquipment.heatPump,\n        hasBattery: selectedEquipment.batteryStorage,\n        solarPanelTypeIds: updatedSelections.solar ? [updatedSelections.solar] : [],\n        heatPumpTypeIds: updatedSelections.heatPump ? [updatedSelections.heatPump] : [],\n        batteryIds: updatedSelections.battery ? [updatedSelections.battery] : [],\n        houseArea: userData.houseArea || 100,\n        occupants: userData.occupants || 3,\n        roofArea: userData.roofArea || 30,\n        latitude: userData.latitude || 51.5,\n        longitude: userData.longitude || -0.1,\n        annualElectricityUsageKwh: userData.annualElectricityUsage || 3000,\n        annualGasUsageKwh: userData.annualGasUsage || 15000,\n        monthlyElectricityUsageKwh: userData.monthlyElectricityUsage || 250,\n        homeOccupancyFactor: userData.homeOccupancyFactor || 0.5,\n        electricityRate: userData.electricityRate || 30,\n        gasRate: userData.gasRate || 6,\n        exportRate: userData.exportRate || 5,\n        peakElectricityRate: userData.peakElectricityRate || 40,\n        offPeakElectricityRate: userData.offPeakElectricityRate || 15\n      };\n      const response = await fetch('http://localhost:8080/api/equipment/compare', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(calculationRequest)\n      });\n      if (response.ok) {\n        const result = await response.json();\n        const calculations = processCalculationResult(result);\n        setConfigurations(prev => prev.map(config => {\n          if (config.id === configId) {\n            return {\n              ...config,\n              selections: updatedSelections,\n              calculations,\n              loading: false\n            };\n          }\n          return config;\n        }));\n      }\n    } catch (error) {\n      console.error('Error recalculating configuration:', error);\n      setConfigurations(prev => prev.map(config => {\n        if (config.id === configId) {\n          return {\n            ...config,\n            loading: false\n          };\n        }\n        return config;\n      }));\n    }\n  };\n  const processCalculationResult = result => {\n    let totalCost = 0;\n    let totalGeneration = 0;\n    let totalSavings = 0;\n    let totalExportRevenue = 0;\n    let totalCO2Savings = 0;\n    const monthlyGeneration = new Array(12).fill(0);\n    const monthlySavings = new Array(12).fill(0);\n    const monthlyExportRevenue = new Array(12).fill(0);\n    const monthlyCO2Savings = new Array(12).fill(0);\n\n    // Aggregate data from all equipment types\n    [...(result.solarPanelOptions || []), ...(result.heatPumpOptions || []), ...(result.batteryOptions || [])].forEach(option => {\n      totalCost += option.installationCost || 0;\n      totalGeneration += option.annualGeneration || 0;\n      totalSavings += option.annualCostSavings || 0;\n      totalExportRevenue += option.annualExportRevenue || 0;\n      totalCO2Savings += option.annualTotalCO2Savings || 0;\n\n      // Aggregate monthly data\n      if (option.monthlyGeneration) {\n        option.monthlyGeneration.forEach((value, index) => {\n          monthlyGeneration[index] += value || 0;\n        });\n      }\n      if (option.monthlyCostSavings) {\n        option.monthlyCostSavings.forEach((value, index) => {\n          monthlySavings[index] += value || 0;\n        });\n      }\n      if (option.monthlyExportRevenue) {\n        option.monthlyExportRevenue.forEach((value, index) => {\n          monthlyExportRevenue[index] += value || 0;\n        });\n      }\n      if (option.monthlyDirectCO2Savings && option.monthlyIndirectCO2Savings) {\n        option.monthlyDirectCO2Savings.forEach((direct, index) => {\n          const indirect = option.monthlyIndirectCO2Savings[index] || 0;\n          monthlyCO2Savings[index] += (direct || 0) + indirect;\n        });\n      }\n    });\n    const paybackPeriod = totalSavings + totalExportRevenue > 0 ? totalCost / (totalSavings + totalExportRevenue) : 999;\n    return {\n      installationCost: totalCost,\n      annualGeneration: totalGeneration,\n      annualSavings: totalSavings,\n      annualExportRevenue: totalExportRevenue,\n      annualCO2Savings: totalCO2Savings,\n      paybackPeriod: paybackPeriod,\n      monthlyData: {\n        generation: monthlyGeneration,\n        savings: monthlySavings,\n        exportRevenue: monthlyExportRevenue,\n        co2Savings: monthlyCO2Savings\n      }\n    };\n  };\n  const addConfiguration = () => {\n    const newId = Math.max(...configurations.map(c => c.id)) + 1;\n    setConfigurations(prev => [...prev, createEmptyConfiguration(newId)]);\n  };\n  const removeConfiguration = configId => {\n    if (configurations.length > 1) {\n      setConfigurations(prev => prev.filter(c => c.id !== configId));\n    }\n  };\n  const showMonthlyChart = (config, dataType, title) => {\n    const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    let monthlyData = [];\n    switch (dataType) {\n      case 'generation':\n        monthlyData = config.calculations.monthlyData.generation;\n        break;\n      case 'savings':\n        monthlyData = config.calculations.monthlyData.savings;\n        break;\n      case 'exportRevenue':\n        monthlyData = config.calculations.monthlyData.exportRevenue;\n        break;\n      case 'co2Savings':\n        monthlyData = config.calculations.monthlyData.co2Savings;\n        break;\n      default:\n        monthlyData = [];\n    }\n    const chartData = {\n      labels: months,\n      datasets: [{\n        label: title,\n        data: monthlyData,\n        borderColor: getChartColor(dataType),\n        backgroundColor: getChartColor(dataType) + '20',\n        tension: 0.4,\n        fill: true\n      }]\n    };\n    const chartOptions = {\n      responsive: true,\n      plugins: {\n        legend: {\n          position: 'top'\n        },\n        title: {\n          display: true,\n          text: `${config.name} - ${title}`\n        }\n      },\n      scales: {\n        y: {\n          beginAtZero: true\n        }\n      }\n    };\n    setShowChart({\n      visible: true,\n      data: chartData,\n      options: chartOptions,\n      title: `${config.name} - ${title}`\n    });\n  };\n  const getChartColor = dataType => {\n    const colors = {\n      generation: '#3498db',\n      savings: '#27ae60',\n      exportRevenue: '#f39c12',\n      co2Savings: '#e74c3c'\n    };\n    return colors[dataType] || '#34495e';\n  };\n  const formatCurrency = value => {\n    return value ? `£${Math.round(value).toLocaleString()}` : '£0';\n  };\n  const formatNumber = (value, unit = '') => {\n    return value ? `${Math.round(value).toLocaleString()}${unit}` : `0${unit}`;\n  };\n  const getEquipmentName = (equipmentType, equipmentId) => {\n    if (!equipmentId || !availableEquipment[equipmentType]) return '';\n    const equipment = availableEquipment[equipmentType].find(e => e.id == equipmentId);\n    return equipment ? equipment.name : '';\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"configuration-comparison-loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Loading Equipment Options...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Preparing configuration comparison table.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"configuration-comparison\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comparison-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"System Configuration Comparison\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select different equipment combinations and see real-time performance and cost data for each configuration.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"configuration-table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"configuration-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Configuration Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 15\n            }, this), selectedEquipment.solarPanels && /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Solar Panels\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 49\n            }, this), selectedEquipment.heatPump && /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Heat Pump\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 46\n            }, this), selectedEquipment.batteryStorage && /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Battery Storage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 52\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Installation Cost\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"clickable-header\",\n              title: \"Click to view monthly chart\",\n              children: \"Annual Generation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"clickable-header\",\n              title: \"Click to view monthly chart\",\n              children: \"Annual Savings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"clickable-header\",\n              title: \"Click to view monthly chart\",\n              children: \"Export Revenue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"clickable-header\",\n              title: \"Click to view monthly chart\",\n              children: \"CO\\u2082 Savings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Payback Period\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: configurations.map(config => {\n            var _availableEquipment$s, _availableEquipment$h, _availableEquipment$b;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: config.loading ? 'loading-row' : '',\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: config.name,\n                  onChange: e => {\n                    setConfigurations(prev => prev.map(c => c.id === config.id ? {\n                      ...c,\n                      name: e.target.value\n                    } : c));\n                  },\n                  className: \"config-name-input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 385,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 17\n              }, this), selectedEquipment.solarPanels && /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: config.selections.solar || '',\n                  onChange: e => handleEquipmentChange(config.id, 'solar', e.target.value),\n                  className: \"equipment-select\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Please select...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 404,\n                    columnNumber: 23\n                  }, this), (_availableEquipment$s = availableEquipment.solar) === null || _availableEquipment$s === void 0 ? void 0 : _availableEquipment$s.map(panel => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: panel.id,\n                    children: [panel.name, \" (\", panel.ratedPowerPerPanel, \"W)\"]\n                  }, panel.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 406,\n                    columnNumber: 25\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 19\n              }, this), selectedEquipment.heatPump && /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: config.selections.heatPump || '',\n                  onChange: e => handleEquipmentChange(config.id, 'heatPump', e.target.value),\n                  className: \"equipment-select\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Please select...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 421,\n                    columnNumber: 23\n                  }, this), (_availableEquipment$h = availableEquipment.heatPump) === null || _availableEquipment$h === void 0 ? void 0 : _availableEquipment$h.map(heatPump => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: heatPump.id,\n                    children: [heatPump.name, \" (COP: \", heatPump.cop, \")\"]\n                  }, heatPump.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 423,\n                    columnNumber: 25\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 416,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 19\n              }, this), selectedEquipment.batteryStorage && /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: config.selections.battery || '',\n                  onChange: e => handleEquipmentChange(config.id, 'battery', e.target.value),\n                  className: \"equipment-select\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Please select...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 438,\n                    columnNumber: 23\n                  }, this), (_availableEquipment$b = availableEquipment.battery) === null || _availableEquipment$b === void 0 ? void 0 : _availableEquipment$b.map(battery => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: battery.id,\n                    children: [battery.name, \" (\", battery.capacityKwh, \"kWh)\"]\n                  }, battery.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 440,\n                    columnNumber: 25\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 433,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: config.loading ? 'Calculating...' : formatCurrency(config.calculations.installationCost)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"clickable-cell\",\n                onClick: () => !config.loading && showMonthlyChart(config, 'generation', 'Monthly Generation (kWh)'),\n                children: config.loading ? 'Calculating...' : formatNumber(config.calculations.annualGeneration, ' kWh')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"clickable-cell\",\n                onClick: () => !config.loading && showMonthlyChart(config, 'savings', 'Monthly Savings (£)'),\n                children: config.loading ? 'Calculating...' : formatCurrency(config.calculations.annualSavings)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 457,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"clickable-cell\",\n                onClick: () => !config.loading && showMonthlyChart(config, 'exportRevenue', 'Monthly Export Revenue (£)'),\n                children: config.loading ? 'Calculating...' : formatCurrency(config.calculations.annualExportRevenue)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"clickable-cell\",\n                onClick: () => !config.loading && showMonthlyChart(config, 'co2Savings', 'Monthly CO₂ Savings (kg)'),\n                children: config.loading ? 'Calculating...' : formatNumber(config.calculations.annualCO2Savings, ' kg')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: config.loading ? 'Calculating...' : formatNumber(config.calculations.paybackPeriod, ' years')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn-remove\",\n                  onClick: () => removeConfiguration(config.id),\n                  disabled: configurations.length <= 1,\n                  title: \"Remove configuration\",\n                  children: \"\\xD7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 481,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 480,\n                columnNumber: 17\n              }, this)]\n            }, config.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary\",\n        onClick: addConfiguration,\n        children: \"+ Add New Configuration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"table-hint\",\n        children: \"\\uD83D\\uDCA1 Data will auto-calculate when you select equipment. Click data cells to view monthly trends.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 7\n    }, this), showChart.visible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-modal-overlay\",\n      onClick: () => setShowChart({\n        visible: false,\n        data: null,\n        title: ''\n      }),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-modal\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: showChart.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chart-close-button\",\n            onClick: () => setShowChart({\n              visible: false,\n              data: null,\n              title: ''\n            }),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: /*#__PURE__*/_jsxDEV(Line, {\n            data: showChart.data,\n            options: showChart.options\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comparison-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary\",\n        onClick: onBack,\n        children: \"Back to Equipment Selection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 358,\n    columnNumber: 5\n  }, this);\n};\n_s(ConfigurationComparison, \"5Lz1cmPciLa3B07XiDMOj8qfg5Y=\");\n_c = ConfigurationComparison;\nexport default ConfigurationComparison;\nvar _c;\n$RefreshReg$(_c, \"ConfigurationComparison\");","map":{"version":3,"names":["React","useState","useEffect","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","ConfigurationComparison","selectedEquipment","userData","onBack","_s","availableEquipment","setAvailableEquipment","configurations","setConfigurations","loading","setLoading","showChart","setShowChart","visible","data","title","loadAvailableEquipment","promises","solarPanels","push","fetch","then","res","json","type","heatPump","batteryStorage","results","Promise","all","available","forEach","result","initialConfigurations","i","createEmptyConfiguration","error","console","configNumber","id","name","selections","solar","battery","calculations","installationCost","annualGeneration","annualSavings","annualExportRevenue","annualCO2Savings","paybackPeriod","monthlyData","generation","Array","fill","savings","exportRevenue","co2Savings","handleEquipmentChange","configId","equipmentType","equipmentId","prev","map","config","recalculateConfiguration","changedEquipmentType","changedEquipmentId","find","c","updatedSelections","calculationRequest","hasSolarPanels","hasHeatPump","hasBattery","solarPanelTypeIds","heatPumpTypeIds","batteryIds","houseArea","occupants","roofArea","latitude","longitude","annualElectricityUsageKwh","annualElectricityUsage","annualGasUsageKwh","annualGasUsage","monthlyElectricityUsageKwh","monthlyElectricityUsage","homeOccupancyFactor","electricityRate","gasRate","exportRate","peakElectricityRate","offPeakElectricityRate","response","method","headers","body","JSON","stringify","ok","processCalculationResult","totalCost","totalGeneration","totalSavings","totalExportRevenue","totalCO2Savings","monthlyGeneration","monthlySavings","monthlyExportRevenue","monthlyCO2Savings","solarPanelOptions","heatPumpOptions","batteryOptions","option","annualCostSavings","annualTotalCO2Savings","value","index","monthlyCostSavings","monthlyDirectCO2Savings","monthlyIndirectCO2Savings","direct","indirect","addConfiguration","newId","Math","max","removeConfiguration","length","filter","showMonthlyChart","dataType","months","chartData","labels","datasets","label","borderColor","getChartColor","backgroundColor","tension","chartOptions","responsive","plugins","legend","position","display","text","scales","y","beginAtZero","options","colors","formatCurrency","round","toLocaleString","formatNumber","unit","getEquipmentName","equipment","e","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_availableEquipment$s","_availableEquipment$h","_availableEquipment$b","onChange","target","panel","ratedPowerPerPanel","cop","capacityKwh","onClick","disabled","stopPropagation","_c","$RefreshReg$"],"sources":["/Users/xuefei/Desktop/calculator00/calculator/renewableCalculator.ui/src/components/steps/ConfigurationComparison.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst ConfigurationComparison = ({ selectedEquipment, userData, onBack }) => {\n  const [availableEquipment, setAvailableEquipment] = useState({});\n  const [configurations, setConfigurations] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showChart, setShowChart] = useState({ visible: false, data: null, title: '' });\n\n  useEffect(() => {\n    loadAvailableEquipment();\n  }, [selectedEquipment]);\n\n  const loadAvailableEquipment = async () => {\n    try {\n      const promises = [];\n      \n      if (selectedEquipment.solarPanels) {\n        promises.push(\n          fetch('http://localhost:8080/api/equipment/solar-panels/available')\n            .then(res => res.json())\n            .then(data => ({ type: 'solar', data }))\n        );\n      }\n      \n      if (selectedEquipment.heatPump) {\n        promises.push(\n          fetch('http://localhost:8080/api/equipment/heat-pumps/available')\n            .then(res => res.json())\n            .then(data => ({ type: 'heatPump', data }))\n        );\n      }\n      \n      if (selectedEquipment.batteryStorage) {\n        promises.push(\n          fetch('http://localhost:8080/api/equipment/batteries/available')\n            .then(res => res.json())\n            .then(data => ({ type: 'battery', data }))\n        );\n      }\n\n      const results = await Promise.all(promises);\n      \n      const available = {};\n      results.forEach(result => {\n        available[result.type] = result.data;\n      });\n      \n      setAvailableEquipment(available);\n      \n      // Initialize with 3 configuration rows\n      const initialConfigurations = [];\n      for (let i = 0; i < 3; i++) {\n        initialConfigurations.push(createEmptyConfiguration(i + 1));\n      }\n      setConfigurations(initialConfigurations);\n      \n    } catch (error) {\n      console.error('Error loading available equipment:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const createEmptyConfiguration = (configNumber) => ({\n    id: configNumber,\n    name: `Configuration ${configNumber}`,\n    selections: {\n      solar: selectedEquipment.solarPanels ? '' : null,\n      heatPump: selectedEquipment.heatPump ? '' : null,\n      battery: selectedEquipment.batteryStorage ? '' : null,\n    },\n    calculations: {\n      installationCost: 0,\n      annualGeneration: 0,\n      annualSavings: 0,\n      annualExportRevenue: 0,\n      annualCO2Savings: 0,\n      paybackPeriod: 0,\n      monthlyData: {\n        generation: new Array(12).fill(0),\n        savings: new Array(12).fill(0),\n        exportRevenue: new Array(12).fill(0),\n        co2Savings: new Array(12).fill(0)\n      }\n    },\n    loading: false\n  });\n\n  const handleEquipmentChange = async (configId, equipmentType, equipmentId) => {\n    // Update the selection\n    setConfigurations(prev => prev.map(config => {\n      if (config.id === configId) {\n        return {\n          ...config,\n          selections: {\n            ...config.selections,\n            [equipmentType]: equipmentId\n          },\n          loading: true\n        };\n      }\n      return config;\n    }));\n\n    // Recalculate for this configuration\n    await recalculateConfiguration(configId, equipmentType, equipmentId);\n  };\n\n  const recalculateConfiguration = async (configId, changedEquipmentType, changedEquipmentId) => {\n    try {\n      const config = configurations.find(c => c.id === configId);\n      if (!config) return;\n\n      // Update the changed selection\n      const updatedSelections = {\n        ...config.selections,\n        [changedEquipmentType]: changedEquipmentId\n      };\n\n      // Build request for calculation\n      const calculationRequest = {\n        hasSolarPanels: selectedEquipment.solarPanels,\n        hasHeatPump: selectedEquipment.heatPump,\n        hasBattery: selectedEquipment.batteryStorage,\n        solarPanelTypeIds: updatedSelections.solar ? [updatedSelections.solar] : [],\n        heatPumpTypeIds: updatedSelections.heatPump ? [updatedSelections.heatPump] : [],\n        batteryIds: updatedSelections.battery ? [updatedSelections.battery] : [],\n        houseArea: userData.houseArea || 100,\n        occupants: userData.occupants || 3,\n        roofArea: userData.roofArea || 30,\n        latitude: userData.latitude || 51.5,\n        longitude: userData.longitude || -0.1,\n        annualElectricityUsageKwh: userData.annualElectricityUsage || 3000,\n        annualGasUsageKwh: userData.annualGasUsage || 15000,\n        monthlyElectricityUsageKwh: userData.monthlyElectricityUsage || 250,\n        homeOccupancyFactor: userData.homeOccupancyFactor || 0.5,\n        electricityRate: userData.electricityRate || 30,\n        gasRate: userData.gasRate || 6,\n        exportRate: userData.exportRate || 5,\n        peakElectricityRate: userData.peakElectricityRate || 40,\n        offPeakElectricityRate: userData.offPeakElectricityRate || 15,\n      };\n\n      const response = await fetch('http://localhost:8080/api/equipment/compare', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(calculationRequest)\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        const calculations = processCalculationResult(result);\n        \n        setConfigurations(prev => prev.map(config => {\n          if (config.id === configId) {\n            return {\n              ...config,\n              selections: updatedSelections,\n              calculations,\n              loading: false\n            };\n          }\n          return config;\n        }));\n      }\n    } catch (error) {\n      console.error('Error recalculating configuration:', error);\n      setConfigurations(prev => prev.map(config => {\n        if (config.id === configId) {\n          return { ...config, loading: false };\n        }\n        return config;\n      }));\n    }\n  };\n\n  const processCalculationResult = (result) => {\n    let totalCost = 0;\n    let totalGeneration = 0;\n    let totalSavings = 0;\n    let totalExportRevenue = 0;\n    let totalCO2Savings = 0;\n    const monthlyGeneration = new Array(12).fill(0);\n    const monthlySavings = new Array(12).fill(0);\n    const monthlyExportRevenue = new Array(12).fill(0);\n    const monthlyCO2Savings = new Array(12).fill(0);\n\n    // Aggregate data from all equipment types\n    [...(result.solarPanelOptions || []), ...(result.heatPumpOptions || []), ...(result.batteryOptions || [])].forEach(option => {\n      totalCost += option.installationCost || 0;\n      totalGeneration += option.annualGeneration || 0;\n      totalSavings += option.annualCostSavings || 0;\n      totalExportRevenue += option.annualExportRevenue || 0;\n      totalCO2Savings += option.annualTotalCO2Savings || 0;\n\n      // Aggregate monthly data\n      if (option.monthlyGeneration) {\n        option.monthlyGeneration.forEach((value, index) => {\n          monthlyGeneration[index] += value || 0;\n        });\n      }\n      if (option.monthlyCostSavings) {\n        option.monthlyCostSavings.forEach((value, index) => {\n          monthlySavings[index] += value || 0;\n        });\n      }\n      if (option.monthlyExportRevenue) {\n        option.monthlyExportRevenue.forEach((value, index) => {\n          monthlyExportRevenue[index] += value || 0;\n        });\n      }\n      if (option.monthlyDirectCO2Savings && option.monthlyIndirectCO2Savings) {\n        option.monthlyDirectCO2Savings.forEach((direct, index) => {\n          const indirect = option.monthlyIndirectCO2Savings[index] || 0;\n          monthlyCO2Savings[index] += (direct || 0) + indirect;\n        });\n      }\n    });\n\n    const paybackPeriod = (totalSavings + totalExportRevenue) > 0 ? \n      totalCost / (totalSavings + totalExportRevenue) : 999;\n\n    return {\n      installationCost: totalCost,\n      annualGeneration: totalGeneration,\n      annualSavings: totalSavings,\n      annualExportRevenue: totalExportRevenue,\n      annualCO2Savings: totalCO2Savings,\n      paybackPeriod: paybackPeriod,\n      monthlyData: {\n        generation: monthlyGeneration,\n        savings: monthlySavings,\n        exportRevenue: monthlyExportRevenue,\n        co2Savings: monthlyCO2Savings\n      }\n    };\n  };\n\n  const addConfiguration = () => {\n    const newId = Math.max(...configurations.map(c => c.id)) + 1;\n    setConfigurations(prev => [...prev, createEmptyConfiguration(newId)]);\n  };\n\n  const removeConfiguration = (configId) => {\n    if (configurations.length > 1) {\n      setConfigurations(prev => prev.filter(c => c.id !== configId));\n    }\n  };\n\n  const showMonthlyChart = (config, dataType, title) => {\n    const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', \n                   'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    \n    let monthlyData = [];\n    switch (dataType) {\n      case 'generation':\n        monthlyData = config.calculations.monthlyData.generation;\n        break;\n      case 'savings':\n        monthlyData = config.calculations.monthlyData.savings;\n        break;\n      case 'exportRevenue':\n        monthlyData = config.calculations.monthlyData.exportRevenue;\n        break;\n      case 'co2Savings':\n        monthlyData = config.calculations.monthlyData.co2Savings;\n        break;\n      default:\n        monthlyData = [];\n    }\n\n    const chartData = {\n      labels: months,\n      datasets: [{\n        label: title,\n        data: monthlyData,\n        borderColor: getChartColor(dataType),\n        backgroundColor: getChartColor(dataType) + '20',\n        tension: 0.4,\n        fill: true\n      }]\n    };\n\n    const chartOptions = {\n      responsive: true,\n      plugins: {\n        legend: { position: 'top' },\n        title: { display: true, text: `${config.name} - ${title}` }\n      },\n      scales: {\n        y: { beginAtZero: true }\n      }\n    };\n\n    setShowChart({\n      visible: true,\n      data: chartData,\n      options: chartOptions,\n      title: `${config.name} - ${title}`\n    });\n  };\n\n  const getChartColor = (dataType) => {\n    const colors = {\n      generation: '#3498db',\n      savings: '#27ae60',\n      exportRevenue: '#f39c12',\n      co2Savings: '#e74c3c'\n    };\n    return colors[dataType] || '#34495e';\n  };\n\n  const formatCurrency = (value) => {\n    return value ? `£${Math.round(value).toLocaleString()}` : '£0';\n  };\n\n  const formatNumber = (value, unit = '') => {\n    return value ? `${Math.round(value).toLocaleString()}${unit}` : `0${unit}`;\n  };\n\n  const getEquipmentName = (equipmentType, equipmentId) => {\n    if (!equipmentId || !availableEquipment[equipmentType]) return '';\n    const equipment = availableEquipment[equipmentType].find(e => e.id == equipmentId);\n    return equipment ? equipment.name : '';\n  };\n\n  if (loading) {\n    return (\n      <div className=\"configuration-comparison-loading\">\n        <h3>Loading Equipment Options...</h3>\n        <p>Preparing configuration comparison table.</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"configuration-comparison\">\n      <div className=\"comparison-header\">\n        <h3>System Configuration Comparison</h3>\n        <p>Select different equipment combinations and see real-time performance and cost data for each configuration.</p>\n      </div>\n\n      <div className=\"configuration-table-container\">\n        <table className=\"configuration-table\">\n          <thead>\n            <tr>\n              <th>Configuration Name</th>\n              {selectedEquipment.solarPanels && <th>Solar Panels</th>}\n              {selectedEquipment.heatPump && <th>Heat Pump</th>}\n              {selectedEquipment.batteryStorage && <th>Battery Storage</th>}\n              <th>Installation Cost</th>\n              <th className=\"clickable-header\" title=\"Click to view monthly chart\">Annual Generation</th>\n              <th className=\"clickable-header\" title=\"Click to view monthly chart\">Annual Savings</th>\n              <th className=\"clickable-header\" title=\"Click to view monthly chart\">Export Revenue</th>\n              <th className=\"clickable-header\" title=\"Click to view monthly chart\">CO₂ Savings</th>\n              <th>Payback Period</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {configurations.map(config => (\n              <tr key={config.id} className={config.loading ? 'loading-row' : ''}>\n                <td>\n                  <input \n                    type=\"text\" \n                    value={config.name}\n                    onChange={(e) => {\n                      setConfigurations(prev => prev.map(c => \n                        c.id === config.id ? { ...c, name: e.target.value } : c\n                      ));\n                    }}\n                    className=\"config-name-input\"\n                  />\n                </td>\n                \n                {selectedEquipment.solarPanels && (\n                  <td>\n                    <select \n                      value={config.selections.solar || ''}\n                      onChange={(e) => handleEquipmentChange(config.id, 'solar', e.target.value)}\n                      className=\"equipment-select\"\n                    >\n                      <option value=\"\">Please select...</option>\n                      {availableEquipment.solar?.map(panel => (\n                        <option key={panel.id} value={panel.id}>\n                          {panel.name} ({panel.ratedPowerPerPanel}W)\n                        </option>\n                      ))}\n                    </select>\n                  </td>\n                )}\n                \n                {selectedEquipment.heatPump && (\n                  <td>\n                    <select \n                      value={config.selections.heatPump || ''}\n                      onChange={(e) => handleEquipmentChange(config.id, 'heatPump', e.target.value)}\n                      className=\"equipment-select\"\n                    >\n                      <option value=\"\">Please select...</option>\n                      {availableEquipment.heatPump?.map(heatPump => (\n                        <option key={heatPump.id} value={heatPump.id}>\n                          {heatPump.name} (COP: {heatPump.cop})\n                        </option>\n                      ))}\n                    </select>\n                  </td>\n                )}\n                \n                {selectedEquipment.batteryStorage && (\n                  <td>\n                    <select \n                      value={config.selections.battery || ''}\n                      onChange={(e) => handleEquipmentChange(config.id, 'battery', e.target.value)}\n                      className=\"equipment-select\"\n                    >\n                      <option value=\"\">Please select...</option>\n                      {availableEquipment.battery?.map(battery => (\n                        <option key={battery.id} value={battery.id}>\n                          {battery.name} ({battery.capacityKwh}kWh)\n                        </option>\n                      ))}\n                    </select>\n                  </td>\n                )}\n                \n                <td>{config.loading ? 'Calculating...' : formatCurrency(config.calculations.installationCost)}</td>\n                \n                <td \n                  className=\"clickable-cell\"\n                  onClick={() => !config.loading && showMonthlyChart(config, 'generation', 'Monthly Generation (kWh)')}\n                >\n                  {config.loading ? 'Calculating...' : formatNumber(config.calculations.annualGeneration, ' kWh')}\n                </td>\n                \n                <td \n                  className=\"clickable-cell\"\n                  onClick={() => !config.loading && showMonthlyChart(config, 'savings', 'Monthly Savings (£)')}\n                >\n                  {config.loading ? 'Calculating...' : formatCurrency(config.calculations.annualSavings)}\n                </td>\n                \n                <td \n                  className=\"clickable-cell\"\n                  onClick={() => !config.loading && showMonthlyChart(config, 'exportRevenue', 'Monthly Export Revenue (£)')}\n                >\n                  {config.loading ? 'Calculating...' : formatCurrency(config.calculations.annualExportRevenue)}\n                </td>\n                \n                <td \n                  className=\"clickable-cell\"\n                  onClick={() => !config.loading && showMonthlyChart(config, 'co2Savings', 'Monthly CO₂ Savings (kg)')}\n                >\n                  {config.loading ? 'Calculating...' : formatNumber(config.calculations.annualCO2Savings, ' kg')}\n                </td>\n                \n                <td>{config.loading ? 'Calculating...' : formatNumber(config.calculations.paybackPeriod, ' years')}</td>\n                \n                <td>\n                  <button \n                    className=\"btn-remove\" \n                    onClick={() => removeConfiguration(config.id)}\n                    disabled={configurations.length <= 1}\n                    title=\"Remove configuration\"\n                  >\n                    ×\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n\n      <div className=\"table-actions\">\n        <button className=\"btn btn-secondary\" onClick={addConfiguration}>\n          + Add New Configuration\n        </button>\n        <span className=\"table-hint\">\n          💡 Data will auto-calculate when you select equipment. Click data cells to view monthly trends.\n        </span>\n      </div>\n\n      {/* Monthly Chart Modal */}\n      {showChart.visible && (\n        <div className=\"chart-modal-overlay\" onClick={() => setShowChart({ visible: false, data: null, title: '' })}>\n          <div className=\"chart-modal\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"chart-modal-header\">\n              <h4>{showChart.title}</h4>\n              <button \n                className=\"chart-close-button\"\n                onClick={() => setShowChart({ visible: false, data: null, title: '' })}\n              >\n                ×\n              </button>\n            </div>\n            <div className=\"chart-container\">\n              <Line data={showChart.data} options={showChart.options} />\n            </div>\n          </div>\n        </div>\n      )}\n\n      <div className=\"comparison-actions\">\n        <button className=\"btn btn-secondary\" onClick={onBack}>\n          Back to Equipment Selection\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ConfigurationComparison; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}