{"ast":null,"code":"var _jsxFileName = \"/Users/xuefei/Desktop/calculator00/calculator/renewableCalculator.ui/src/components/steps/energy-demand/HotWaterSection.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HotWaterSection = ({\n  formData,\n  onHotWaterMethodChange,\n  onHotWaterHeatPumpCOPChange,\n  needsGasUsage,\n  onKnowsMonthlyGasUsageChange,\n  onKnowsAnnualGasUsageChange,\n  onMonthlyGasChange,\n  onAnnualGasUsageChange\n}) => {\n  const months = [{\n    key: \"january\",\n    label: \"January\"\n  }, {\n    key: \"february\",\n    label: \"February\"\n  }, {\n    key: \"march\",\n    label: \"March\"\n  }, {\n    key: \"april\",\n    label: \"April\"\n  }, {\n    key: \"may\",\n    label: \"May\"\n  }, {\n    key: \"june\",\n    label: \"June\"\n  }, {\n    key: \"july\",\n    label: \"July\"\n  }, {\n    key: \"august\",\n    label: \"August\"\n  }, {\n    key: \"september\",\n    label: \"September\"\n  }, {\n    key: \"october\",\n    label: \"October\"\n  }, {\n    key: \"november\",\n    label: \"November\"\n  }, {\n    key: \"december\",\n    label: \"December\"\n  }];\n\n  // Get gas usage description based on what systems need gas\n  const getGasUsageDescription = () => {\n    const heatingNeedsGas = formData.heatingMethod === \"gas boiler\";\n    const hotWaterNeedsGas = formData.hotWaterMethod === \"gas boiler\";\n    if (heatingNeedsGas && hotWaterNeedsGas) {\n      return \"Please enter your total gas usage for both heating and hot water:\";\n    } else if (heatingNeedsGas) {\n      return \"Please enter your gas usage for heating:\";\n    } else if (hotWaterNeedsGas) {\n      return \"Please enter your gas usage for hot water:\";\n    }\n    return \"Please enter your gas usage:\";\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"hotWaterMethod\",\n        children: \"What is your main hot water method?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"hotWaterMethod\",\n        name: \"hotWaterMethod\",\n        value: formData.hotWaterMethod,\n        onChange: onHotWaterMethodChange,\n        className: \"form-select\",\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select hot water method\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"gas boiler\",\n          children: \"Gas boiler\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"electricity\",\n          children: \"Electricity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"heat pumps\",\n          children: \"Heat pumps\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), formData.hotWaterMethod === \"heat pumps\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"hotWaterHeatPumpCOP\",\n        children: \"Hot Water Heat Pump COP (Coefficient of Performance)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"hotWaterHeatPumpCOP\",\n        name: \"hotWaterHeatPumpCOP\",\n        value: formData.hotWaterHeatPumpCOP,\n        onChange: onHotWaterHeatPumpCOPChange,\n        placeholder: \"Default: 3.0\",\n        min: \"1\",\n        max: \"10\",\n        step: \"0.1\",\n        className: \"form-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        className: \"input-help\",\n        children: \"If you don't know, the default value of 3.0 will be used.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), needsGasUsage && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"knowsMonthlyGasUsage\",\n          children: \"Do you know your monthly gas usage?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"knowsMonthlyGasUsage\",\n          name: \"knowsMonthlyGasUsage\",\n          value: formData.knowsMonthlyGasUsage,\n          onChange: onKnowsMonthlyGasUsageChange,\n          className: \"form-select\",\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select an option\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"yes\",\n            children: \"Yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"no\",\n            children: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), formData.knowsMonthlyGasUsage === \"yes\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"monthly-usage-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"monthly-usage-title\",\n            children: \"Monthly gas usage (kWh)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"monthly-usage-description\",\n            children: getGasUsageDescription()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"monthly-usage-grid\",\n            children: months.map(month => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"monthly-input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `gas-${month.key}`,\n                className: \"month-label\",\n                children: month.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                id: `gas-${month.key}`,\n                name: `gas-${month.key}`,\n                value: formData.monthlyGasUsage[month.key],\n                onChange: e => onMonthlyGasChange(month.key, e.target.value),\n                placeholder: \"kWh\",\n                min: \"0\",\n                step: \"0.1\",\n                className: \"form-input month-input\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 23\n              }, this)]\n            }, month.key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), formData.knowsMonthlyGasUsage === \"no\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"knowsAnnualGasUsage\",\n            children: \"Do you know your annual gas usage?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"knowsAnnualGasUsage\",\n            name: \"knowsAnnualGasUsage\",\n            value: formData.knowsAnnualGasUsage,\n            onChange: onKnowsAnnualGasUsageChange,\n            className: \"form-select\",\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select an option\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"yes\",\n              children: \"Yes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"no\",\n              children: \"No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 15\n        }, this), formData.knowsAnnualGasUsage === \"yes\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"annualGasUsage\",\n            children: \"Annual gas usage (kWh)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"annualGasUsage\",\n            name: \"annualGasUsage\",\n            value: formData.annualGasUsage,\n            onChange: onAnnualGasUsageChange,\n            placeholder: `Enter annual gas usage in kWh`,\n            min: \"0\",\n            step: \"1\",\n            className: \"form-input\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"input-help\",\n            children: getGasUsageDescription()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n_c = HotWaterSection;\nexport default HotWaterSection;\nvar _c;\n$RefreshReg$(_c, \"HotWaterSection\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","HotWaterSection","formData","onHotWaterMethodChange","onHotWaterHeatPumpCOPChange","needsGasUsage","onKnowsMonthlyGasUsageChange","onKnowsAnnualGasUsageChange","onMonthlyGasChange","onAnnualGasUsageChange","months","key","label","getGasUsageDescription","heatingNeedsGas","heatingMethod","hotWaterNeedsGas","hotWaterMethod","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","name","value","onChange","required","type","hotWaterHeatPumpCOP","placeholder","min","max","step","knowsMonthlyGasUsage","map","month","monthlyGasUsage","e","target","knowsAnnualGasUsage","annualGasUsage","_c","$RefreshReg$"],"sources":["/Users/xuefei/Desktop/calculator00/calculator/renewableCalculator.ui/src/components/steps/energy-demand/HotWaterSection.js"],"sourcesContent":["import React from 'react';\n\nconst HotWaterSection = ({ \n  formData, \n  onHotWaterMethodChange,\n  onHotWaterHeatPumpCOPChange,\n  needsGasUsage,\n  onKnowsMonthlyGasUsageChange,\n  onKnowsAnnualGasUsageChange,\n  onMonthlyGasChange,\n  onAnnualGasUsageChange\n}) => {\n  const months = [\n    { key: \"january\", label: \"January\" },\n    { key: \"february\", label: \"February\" },\n    { key: \"march\", label: \"March\" },\n    { key: \"april\", label: \"April\" },\n    { key: \"may\", label: \"May\" },\n    { key: \"june\", label: \"June\" },\n    { key: \"july\", label: \"July\" },\n    { key: \"august\", label: \"August\" },\n    { key: \"september\", label: \"September\" },\n    { key: \"october\", label: \"October\" },\n    { key: \"november\", label: \"November\" },\n    { key: \"december\", label: \"December\" }\n  ];\n\n  // Get gas usage description based on what systems need gas\n  const getGasUsageDescription = () => {\n    const heatingNeedsGas = formData.heatingMethod === \"gas boiler\";\n    const hotWaterNeedsGas = formData.hotWaterMethod === \"gas boiler\";\n    \n    if (heatingNeedsGas && hotWaterNeedsGas) {\n      return \"Please enter your total gas usage for both heating and hot water:\";\n    } else if (heatingNeedsGas) {\n      return \"Please enter your gas usage for heating:\";\n    } else if (hotWaterNeedsGas) {\n      return \"Please enter your gas usage for hot water:\";\n    }\n    return \"Please enter your gas usage:\";\n  };\n\n  return (\n    <>\n      <div className=\"form-group\">\n        <label htmlFor=\"hotWaterMethod\">What is your main hot water method?</label>\n        <select\n          id=\"hotWaterMethod\"\n          name=\"hotWaterMethod\"\n          value={formData.hotWaterMethod}\n          onChange={onHotWaterMethodChange}\n          className=\"form-select\"\n          required\n        >\n          <option value=\"\">Select hot water method</option>\n          <option value=\"gas boiler\">Gas boiler</option>\n          <option value=\"electricity\">Electricity</option>\n          <option value=\"heat pumps\">Heat pumps</option>\n        </select>\n      </div>\n\n      {formData.hotWaterMethod === \"heat pumps\" && (\n        <div className=\"form-group\">\n          <label htmlFor=\"hotWaterHeatPumpCOP\">Hot Water Heat Pump COP (Coefficient of Performance)</label>\n          <input\n            type=\"number\"\n            id=\"hotWaterHeatPumpCOP\"\n            name=\"hotWaterHeatPumpCOP\"\n            value={formData.hotWaterHeatPumpCOP}\n            onChange={onHotWaterHeatPumpCOPChange}\n            placeholder=\"Default: 3.0\"\n            min=\"1\"\n            max=\"10\"\n            step=\"0.1\"\n            className=\"form-input\"\n          />\n          <small className=\"input-help\">If you don't know, the default value of 3.0 will be used.</small>\n        </div>\n      )}\n\n      {needsGasUsage && (\n        <>\n          <div className=\"form-group\">\n            <label htmlFor=\"knowsMonthlyGasUsage\">Do you know your monthly gas usage?</label>\n            <select\n              id=\"knowsMonthlyGasUsage\"\n              name=\"knowsMonthlyGasUsage\"\n              value={formData.knowsMonthlyGasUsage}\n              onChange={onKnowsMonthlyGasUsageChange}\n              className=\"form-select\"\n              required\n            >\n              <option value=\"\">Select an option</option>\n              <option value=\"yes\">Yes</option>\n              <option value=\"no\">No</option>\n            </select>\n          </div>\n\n          {formData.knowsMonthlyGasUsage === \"yes\" && (\n            <div className=\"form-group\">\n              <div className=\"monthly-usage-container\">\n                <h3 className=\"monthly-usage-title\">Monthly gas usage (kWh)</h3>\n                <p className=\"monthly-usage-description\">{getGasUsageDescription()}</p>\n                <div className=\"monthly-usage-grid\">\n                  {months.map(month => (\n                    <div key={month.key} className=\"monthly-input-group\">\n                      <label htmlFor={`gas-${month.key}`} className=\"month-label\">{month.label}</label>\n                      <input\n                        type=\"number\"\n                        id={`gas-${month.key}`}\n                        name={`gas-${month.key}`}\n                        value={formData.monthlyGasUsage[month.key]}\n                        onChange={(e) => onMonthlyGasChange(month.key, e.target.value)}\n                        placeholder=\"kWh\"\n                        min=\"0\"\n                        step=\"0.1\"\n                        className=\"form-input month-input\"\n                        required\n                      />\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          )}\n\n          {formData.knowsMonthlyGasUsage === \"no\" && (\n            <>\n              <div className=\"form-group\">\n                <label htmlFor=\"knowsAnnualGasUsage\">Do you know your annual gas usage?</label>\n                <select\n                  id=\"knowsAnnualGasUsage\"\n                  name=\"knowsAnnualGasUsage\"\n                  value={formData.knowsAnnualGasUsage}\n                  onChange={onKnowsAnnualGasUsageChange}\n                  className=\"form-select\"\n                  required\n                >\n                  <option value=\"\">Select an option</option>\n                  <option value=\"yes\">Yes</option>\n                  <option value=\"no\">No</option>\n                </select>\n              </div>\n\n              {formData.knowsAnnualGasUsage === \"yes\" && (\n                <div className=\"form-group\">\n                  <label htmlFor=\"annualGasUsage\">Annual gas usage (kWh)</label>\n                  <input\n                    type=\"number\"\n                    id=\"annualGasUsage\"\n                    name=\"annualGasUsage\"\n                    value={formData.annualGasUsage}\n                    onChange={onAnnualGasUsageChange}\n                    placeholder={`Enter annual gas usage in kWh`}\n                    min=\"0\"\n                    step=\"1\"\n                    className=\"form-input\"\n                    required\n                  />\n                  <small className=\"input-help\">{getGasUsageDescription()}</small>\n                </div>\n              )}\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default HotWaterSection; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}