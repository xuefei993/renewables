{"ast":null,"code":"import React,{useState}from'react';import{ukRegions}from'../../../data/ukCities';import{postcodeService}from'../../../services/postcodeService';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CitySelector=_ref=>{let{onLocationSelect,isLoading,setIsLoading}=_ref;const[selectedCountry,setSelectedCountry]=useState('');const[selectedRegion,setSelectedRegion]=useState('');const[selectedCity,setSelectedCity]=useState('');const[error,setError]=useState('');const countries=Object.keys(ukRegions);const regions=selectedCountry?Object.keys(ukRegions[selectedCountry]):[];const cities=selectedCountry&&selectedRegion?ukRegions[selectedCountry][selectedRegion]:[];const handleCountryChange=e=>{setSelectedCountry(e.target.value);setSelectedRegion('');setSelectedCity('');setError('');};const handleRegionChange=e=>{setSelectedRegion(e.target.value);setSelectedCity('');setError('');};const handleCityChange=async e=>{const cityValue=e.target.value;setSelectedCity(cityValue);setError('');if(cityValue){setIsLoading(true);try{const cityData=cities.find(city=>city.name===cityValue);if(cityData){const result=await postcodeService.validatePostcode(cityData.postcode);if(result.success){onLocationSelect({type:'city',postcode:result.data.postcode,latitude:result.data.latitude,longitude:result.data.longitude,location:\"\".concat(cityData.name,\", \").concat(selectedRegion,\", \").concat(selectedCountry),country:result.data.country,city:cityData.name,region:selectedRegion});}else{setError(\"Failed to get coordinates for \".concat(cityData.name));}}}catch(error){setError('Failed to validate city location');}finally{setIsLoading(false);}}};return/*#__PURE__*/_jsxs(\"div\",{className:\"city-selector-container\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Select Your City\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Choose your location from our city database\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"selector-group\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"country\",children:\"Country\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"country\",value:selectedCountry,onChange:handleCountryChange,disabled:isLoading,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Country\"}),countries.map(country=>/*#__PURE__*/_jsx(\"option\",{value:country,children:country},country))]})]}),selectedCountry&&/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"region\",children:\"Region\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"region\",value:selectedRegion,onChange:handleRegionChange,disabled:isLoading,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Region\"}),regions.map(region=>/*#__PURE__*/_jsx(\"option\",{value:region,children:region},region))]})]}),selectedRegion&&/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"city\",children:\"City\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"city\",value:selectedCity,onChange:handleCityChange,disabled:isLoading,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select City\"}),cities.map(city=>/*#__PURE__*/_jsx(\"option\",{value:city.name,children:city.name},city.name))]})]})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:/*#__PURE__*/_jsxs(\"span\",{children:[\"Warning: \",error]})}),isLoading&&selectedCity&&/*#__PURE__*/_jsx(\"div\",{className:\"loading-message\",children:/*#__PURE__*/_jsxs(\"span\",{children:[\"Getting coordinates for \",selectedCity,\"...\"]})})]});};export default CitySelector;","map":{"version":3,"names":["React","useState","ukRegions","postcodeService","jsx","_jsx","jsxs","_jsxs","CitySelector","_ref","onLocationSelect","isLoading","setIsLoading","selectedCountry","setSelectedCountry","selectedRegion","setSelectedRegion","selectedCity","setSelectedCity","error","setError","countries","Object","keys","regions","cities","handleCountryChange","e","target","value","handleRegionChange","handleCityChange","cityValue","cityData","find","city","name","result","validatePostcode","postcode","success","type","data","latitude","longitude","location","concat","country","region","className","children","htmlFor","id","onChange","disabled","map"],"sources":["/Users/xuefei/Desktop/calculator00/calculator/renewableCalculator.ui/src/components/steps/address-input/CitySelector.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { ukRegions } from '../../../data/ukCities';\nimport { postcodeService } from '../../../services/postcodeService';\n\nconst CitySelector = ({ onLocationSelect, isLoading, setIsLoading }) => {\n  const [selectedCountry, setSelectedCountry] = useState('');\n  const [selectedRegion, setSelectedRegion] = useState('');\n  const [selectedCity, setSelectedCity] = useState('');\n  const [error, setError] = useState('');\n\n  const countries = Object.keys(ukRegions);\n  const regions = selectedCountry ? Object.keys(ukRegions[selectedCountry]) : [];\n  const cities = selectedCountry && selectedRegion ? ukRegions[selectedCountry][selectedRegion] : [];\n\n  const handleCountryChange = (e) => {\n    setSelectedCountry(e.target.value);\n    setSelectedRegion('');\n    setSelectedCity('');\n    setError('');\n  };\n\n  const handleRegionChange = (e) => {\n    setSelectedRegion(e.target.value);\n    setSelectedCity('');\n    setError('');\n  };\n\n  const handleCityChange = async (e) => {\n    const cityValue = e.target.value;\n    setSelectedCity(cityValue);\n    setError('');\n\n    if (cityValue) {\n      setIsLoading(true);\n      \n      try {\n        const cityData = cities.find(city => city.name === cityValue);\n        if (cityData) {\n          const result = await postcodeService.validatePostcode(cityData.postcode);\n          \n          if (result.success) {\n            onLocationSelect({\n              type: 'city',\n              postcode: result.data.postcode,\n              latitude: result.data.latitude,\n              longitude: result.data.longitude,\n              location: `${cityData.name}, ${selectedRegion}, ${selectedCountry}`,\n              country: result.data.country,\n              city: cityData.name,\n              region: selectedRegion\n            });\n          } else {\n            setError(`Failed to get coordinates for ${cityData.name}`);\n          }\n        }\n      } catch (error) {\n        setError('Failed to validate city location');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n  };\n\n  return (\n    <div className=\"city-selector-container\">\n      <h3>Select Your City</h3>\n      <p>Choose your location from our city database</p>\n      \n      <div className=\"selector-group\">\n        <div className=\"form-group\">\n          <label htmlFor=\"country\">Country</label>\n          <select\n            id=\"country\"\n            value={selectedCountry}\n            onChange={handleCountryChange}\n            disabled={isLoading}\n          >\n            <option value=\"\">Select Country</option>\n            {countries.map(country => (\n              <option key={country} value={country}>\n                {country}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        {selectedCountry && (\n          <div className=\"form-group\">\n            <label htmlFor=\"region\">Region</label>\n            <select\n              id=\"region\"\n              value={selectedRegion}\n              onChange={handleRegionChange}\n              disabled={isLoading}\n            >\n              <option value=\"\">Select Region</option>\n              {regions.map(region => (\n                <option key={region} value={region}>\n                  {region}\n                </option>\n              ))}\n            </select>\n          </div>\n        )}\n\n        {selectedRegion && (\n          <div className=\"form-group\">\n            <label htmlFor=\"city\">City</label>\n            <select\n              id=\"city\"\n              value={selectedCity}\n              onChange={handleCityChange}\n              disabled={isLoading}\n            >\n              <option value=\"\">Select City</option>\n              {cities.map(city => (\n                <option key={city.name} value={city.name}>\n                  {city.name}\n                </option>\n              ))}\n            </select>\n          </div>\n        )}\n      </div>\n\n      {error && (\n        <div className=\"error-message\">\n          <span>Warning: {error}</span>\n        </div>\n      )}\n\n      {isLoading && selectedCity && (\n        <div className=\"loading-message\">\n          <span>Getting coordinates for {selectedCity}...</span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CitySelector; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}