{"ast":null,"code":"import _objectSpread from\"/Users/xuefei/Desktop/calculator00/calculator/renewableCalculator.ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{Line}from'react-chartjs-2';import{Chart as ChartJS,CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend}from'chart.js';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend);const ConfigurationComparison=_ref=>{let{selectedEquipment,userData,onBack}=_ref;const[availableEquipment,setAvailableEquipment]=useState({});const[configurations,setConfigurations]=useState([]);const[loading,setLoading]=useState(true);const[showChart,setShowChart]=useState({visible:false,data:null,title:''});useEffect(()=>{loadAvailableEquipment();},[selectedEquipment]);const loadAvailableEquipment=async()=>{try{const promises=[];if(selectedEquipment.solarPanels){promises.push(fetch('http://localhost:8080/api/equipment/solar-panels/available').then(res=>res.json()).then(data=>({type:'solar',data})));}if(selectedEquipment.heatPump){promises.push(fetch('http://localhost:8080/api/equipment/heat-pumps/available').then(res=>res.json()).then(data=>({type:'heatPump',data})));}if(selectedEquipment.batteryStorage){promises.push(fetch('http://localhost:8080/api/equipment/batteries/available').then(res=>res.json()).then(data=>({type:'battery',data})));}const results=await Promise.all(promises);const available={};results.forEach(result=>{available[result.type]=result.data;});setAvailableEquipment(available);// Generate 3 recommended configurations\nconst recommendedConfigurations=await generateRecommendedConfigurations(available);setConfigurations(recommendedConfigurations);}catch(error){console.error('Error loading available equipment:',error);}finally{setLoading(false);}};const generateRecommendedConfigurations=async available=>{const configs=[];// Configuration 1: Most Cost-Effective (cheapest installation cost)\nconfigs.push({id:1,name:\"💰 Most Cost-Effective\",selections:getCostEffectiveSelections(available),calculations:{installationCost:0,annualGeneration:0,annualSavings:0,annualExportRevenue:0,annualCO2Savings:0,paybackPeriod:0,monthlyData:{generation:new Array(12).fill(0),savings:new Array(12).fill(0),exportRevenue:new Array(12).fill(0),co2Savings:new Array(12).fill(0)}},loading:false});// Configuration 2: Most Eco-Friendly (maximum CO2 savings)\nconfigs.push({id:2,name:\"🌱 Most Eco-Friendly\",selections:getEcoFriendlySelections(available),calculations:{installationCost:0,annualGeneration:0,annualSavings:0,annualExportRevenue:0,annualCO2Savings:0,paybackPeriod:0,monthlyData:{generation:new Array(12).fill(0),savings:new Array(12).fill(0),exportRevenue:new Array(12).fill(0),co2Savings:new Array(12).fill(0)}},loading:false});// Configuration 3: Balanced Option (best overall value)\nconfigs.push({id:3,name:\"⚖️ Balanced Option\",selections:getBalancedSelections(available),calculations:{installationCost:0,annualGeneration:0,annualSavings:0,annualExportRevenue:0,annualCO2Savings:0,paybackPeriod:0,monthlyData:{generation:new Array(12).fill(0),savings:new Array(12).fill(0),exportRevenue:new Array(12).fill(0),co2Savings:new Array(12).fill(0)}},loading:false});// Calculate performance for each configuration\nfor(let config of configs){if(hasValidSelections(config.selections)){await calculateConfigurationPerformance(config);}}return configs;};const getCostEffectiveSelections=available=>{const selections={solar:selectedEquipment.solarPanels?null:null,heatPump:selectedEquipment.heatPump?null:null,battery:selectedEquipment.batteryStorage?null:null};// Select cheapest options (assuming lower price or basic models)\nif(available.solar&&available.solar.length>0){// Find the most cost-effective solar panel (lowest price if available, otherwise first option)\nconst cheapestSolar=available.solar.reduce((min,panel)=>panel.price&&min.price&&panel.price<min.price?panel:min);selections.solar=cheapestSolar.id;}if(available.heatPump&&available.heatPump.length>0){// Select most cost-effective heat pump (lowest cost)\nconst cheapestHeatPump=available.heatPump.reduce((min,pump)=>pump.cost&&min.cost&&pump.cost<min.cost?pump:min);selections.heatPump=cheapestHeatPump.id;}if(available.battery&&available.battery.length>0){// Select most cost-effective battery\nconst cheapestBattery=available.battery.reduce((min,battery)=>battery.cost&&min.cost&&battery.cost<min.cost?battery:min);selections.battery=cheapestBattery.id;}return selections;};const getEcoFriendlySelections=available=>{const selections={solar:selectedEquipment.solarPanels?null:null,heatPump:selectedEquipment.heatPump?null:null,battery:selectedEquipment.batteryStorage?null:null};// Select highest efficiency/performance options\nif(available.solar&&available.solar.length>0){// Find highest efficiency or power solar panel\nconst bestSolar=available.solar.reduce((best,panel)=>panel.efficiency&&best.efficiency&&panel.efficiency>best.efficiency?panel:panel.ratedPowerPerPanel&&best.ratedPowerPerPanel&&panel.ratedPowerPerPanel>best.ratedPowerPerPanel?panel:best);selections.solar=bestSolar.id;}if(available.heatPump&&available.heatPump.length>0){// Select highest COP heat pump\nconst bestHeatPump=available.heatPump.reduce((best,pump)=>pump.cop&&best.cop&&pump.cop>best.cop?pump:best);selections.heatPump=bestHeatPump.id;}if(available.battery&&available.battery.length>0){// Select largest capacity battery\nconst bestBattery=available.battery.reduce((best,battery)=>battery.capacityKwh&&best.capacityKwh&&battery.capacityKwh>best.capacityKwh?battery:best);selections.battery=bestBattery.id;}return selections;};const getBalancedSelections=available=>{const selections={solar:selectedEquipment.solarPanels?null:null,heatPump:selectedEquipment.heatPump?null:null,battery:selectedEquipment.batteryStorage?null:null};// Select middle-range options (good balance of cost and performance)\nif(available.solar&&available.solar.length>0){const sortedSolar=[...available.solar].sort((a,b)=>(a.price||0)-(b.price||0));const middleIndex=Math.floor(sortedSolar.length/2);selections.solar=sortedSolar[middleIndex].id;}if(available.heatPump&&available.heatPump.length>0){const sortedHeatPumps=[...available.heatPump].sort((a,b)=>(a.cost||0)-(b.cost||0));const middleIndex=Math.floor(sortedHeatPumps.length/2);selections.heatPump=sortedHeatPumps[middleIndex].id;}if(available.battery&&available.battery.length>0){const sortedBatteries=[...available.battery].sort((a,b)=>(a.cost||0)-(b.cost||0));const middleIndex=Math.floor(sortedBatteries.length/2);selections.battery=sortedBatteries[middleIndex].id;}return selections;};const hasValidSelections=selections=>{return Object.values(selections).some(selection=>selection!==null&&selection!=='');};const calculateConfigurationPerformance=async config=>{try{const calculationRequest={hasSolarPanels:selectedEquipment.solarPanels,hasHeatPump:selectedEquipment.heatPump,hasBattery:selectedEquipment.batteryStorage,solarPanelTypeIds:config.selections.solar?[config.selections.solar]:[],heatPumpTypeIds:config.selections.heatPump?[config.selections.heatPump]:[],batteryIds:config.selections.battery?[config.selections.battery]:[],houseArea:userData.houseArea||100,occupants:userData.occupants||3,roofArea:userData.roofArea||30,latitude:userData.latitude||51.5,longitude:userData.longitude||-0.1,annualElectricityUsageKwh:userData.annualElectricityUsage||3000,annualGasUsageKwh:userData.annualGasUsage||15000,monthlyElectricityUsageKwh:userData.monthlyElectricityUsage||250,homeOccupancyFactor:userData.homeOccupancyFactor||0.5,electricityRate:userData.electricityRate||30,gasRate:userData.gasRate||6,exportRate:userData.exportRate||5,peakElectricityRate:userData.peakElectricityRate||40,offPeakElectricityRate:userData.offPeakElectricityRate||15};const response=await fetch('http://localhost:8080/api/equipment/compare',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(calculationRequest)});if(response.ok){const result=await response.json();config.calculations=processCalculationResult(result);}}catch(error){console.error('Error calculating configuration performance:',error);}};const createEmptyConfiguration=configNumber=>({id:configNumber,name:\"Configuration \".concat(configNumber),selections:{solar:selectedEquipment.solarPanels?'':null,heatPump:selectedEquipment.heatPump?'':null,battery:selectedEquipment.batteryStorage?'':null},calculations:{installationCost:0,annualGeneration:0,annualSavings:0,annualExportRevenue:0,annualCO2Savings:0,paybackPeriod:0,monthlyData:{generation:new Array(12).fill(0),savings:new Array(12).fill(0),exportRevenue:new Array(12).fill(0),co2Savings:new Array(12).fill(0)}},loading:false});const handleEquipmentChange=async(configId,equipmentType,equipmentId)=>{// Update the selection\nsetConfigurations(prev=>prev.map(config=>{if(config.id===configId){return _objectSpread(_objectSpread({},config),{},{selections:_objectSpread(_objectSpread({},config.selections),{},{[equipmentType]:equipmentId}),loading:true});}return config;}));// Recalculate for this configuration\nawait recalculateConfiguration(configId,equipmentType,equipmentId);};const recalculateConfiguration=async(configId,changedEquipmentType,changedEquipmentId)=>{try{const config=configurations.find(c=>c.id===configId);if(!config)return;// Update the changed selection\nconst updatedSelections=_objectSpread(_objectSpread({},config.selections),{},{[changedEquipmentType]:changedEquipmentId});// Build request for calculation\nconst calculationRequest={hasSolarPanels:selectedEquipment.solarPanels,hasHeatPump:selectedEquipment.heatPump,hasBattery:selectedEquipment.batteryStorage,solarPanelTypeIds:updatedSelections.solar?[updatedSelections.solar]:[],heatPumpTypeIds:updatedSelections.heatPump?[updatedSelections.heatPump]:[],batteryIds:updatedSelections.battery?[updatedSelections.battery]:[],houseArea:userData.houseArea||100,occupants:userData.occupants||3,roofArea:userData.roofArea||30,latitude:userData.latitude||51.5,longitude:userData.longitude||-0.1,annualElectricityUsageKwh:userData.annualElectricityUsage||3000,annualGasUsageKwh:userData.annualGasUsage||15000,monthlyElectricityUsageKwh:userData.monthlyElectricityUsage||250,homeOccupancyFactor:userData.homeOccupancyFactor||0.5,electricityRate:userData.electricityRate||30,gasRate:userData.gasRate||6,exportRate:userData.exportRate||5,peakElectricityRate:userData.peakElectricityRate||40,offPeakElectricityRate:userData.offPeakElectricityRate||15};const response=await fetch('http://localhost:8080/api/equipment/compare',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(calculationRequest)});if(response.ok){const result=await response.json();const calculations=processCalculationResult(result);setConfigurations(prev=>prev.map(config=>{if(config.id===configId){return _objectSpread(_objectSpread({},config),{},{selections:updatedSelections,calculations,loading:false});}return config;}));}}catch(error){console.error('Error recalculating configuration:',error);setConfigurations(prev=>prev.map(config=>{if(config.id===configId){return _objectSpread(_objectSpread({},config),{},{loading:false});}return config;}));}};const processCalculationResult=result=>{let totalCost=0;let totalGeneration=0;let totalSavings=0;let totalExportRevenue=0;let totalCO2Savings=0;const monthlyGeneration=new Array(12).fill(0);const monthlySavings=new Array(12).fill(0);const monthlyExportRevenue=new Array(12).fill(0);const monthlyCO2Savings=new Array(12).fill(0);// Aggregate data from all equipment types\n[...(result.solarPanelOptions||[]),...(result.heatPumpOptions||[]),...(result.batteryOptions||[])].forEach(option=>{totalCost+=option.installationCost||0;totalGeneration+=option.annualGeneration||0;totalSavings+=option.annualCostSavings||0;totalExportRevenue+=option.annualExportRevenue||0;totalCO2Savings+=option.annualTotalCO2Savings||0;// Aggregate monthly data\nif(option.monthlyGeneration){option.monthlyGeneration.forEach((value,index)=>{monthlyGeneration[index]+=value||0;});}if(option.monthlyCostSavings){option.monthlyCostSavings.forEach((value,index)=>{monthlySavings[index]+=value||0;});}if(option.monthlyExportRevenue){option.monthlyExportRevenue.forEach((value,index)=>{monthlyExportRevenue[index]+=value||0;});}if(option.monthlyDirectCO2Savings&&option.monthlyIndirectCO2Savings){option.monthlyDirectCO2Savings.forEach((direct,index)=>{const indirect=option.monthlyIndirectCO2Savings[index]||0;monthlyCO2Savings[index]+=(direct||0)+indirect;});}});const paybackPeriod=totalSavings+totalExportRevenue>0?totalCost/(totalSavings+totalExportRevenue):999;return{installationCost:totalCost,annualGeneration:totalGeneration,annualSavings:totalSavings,annualExportRevenue:totalExportRevenue,annualCO2Savings:totalCO2Savings,paybackPeriod:paybackPeriod,monthlyData:{generation:monthlyGeneration,savings:monthlySavings,exportRevenue:monthlyExportRevenue,co2Savings:monthlyCO2Savings}};};const addConfiguration=()=>{const newId=Math.max(...configurations.map(c=>c.id))+1;setConfigurations(prev=>[...prev,createEmptyConfiguration(newId)]);};const removeConfiguration=configId=>{if(configurations.length>1){setConfigurations(prev=>prev.filter(c=>c.id!==configId));}};const showMonthlyChart=(config,dataType,title)=>{const months=['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];let monthlyData=[];switch(dataType){case'generation':monthlyData=config.calculations.monthlyData.generation;break;case'savings':monthlyData=config.calculations.monthlyData.savings;break;case'exportRevenue':monthlyData=config.calculations.monthlyData.exportRevenue;break;case'co2Savings':monthlyData=config.calculations.monthlyData.co2Savings;break;default:monthlyData=[];}const chartData={labels:months,datasets:[{label:title,data:monthlyData,borderColor:getChartColor(dataType),backgroundColor:getChartColor(dataType)+'20',tension:0.4,fill:true}]};const chartOptions={responsive:true,plugins:{legend:{position:'top'},title:{display:true,text:\"\".concat(config.name,\" - \").concat(title)}},scales:{y:{beginAtZero:true}}};setShowChart({visible:true,data:chartData,options:chartOptions,title:\"\".concat(config.name,\" - \").concat(title)});};const getChartColor=dataType=>{const colors={generation:'#3498db',savings:'#27ae60',exportRevenue:'#f39c12',co2Savings:'#e74c3c'};return colors[dataType]||'#34495e';};const formatCurrency=value=>{return value?\"\\xA3\".concat(Math.round(value).toLocaleString()):'£0';};const formatNumber=function(value){let unit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'';return value?\"\".concat(Math.round(value).toLocaleString()).concat(unit):\"0\".concat(unit);};const getEquipmentName=(equipmentType,equipmentId)=>{if(!equipmentId||!availableEquipment[equipmentType])return'';const equipment=availableEquipment[equipmentType].find(e=>e.id==equipmentId);return equipment?equipment.name:'';};if(loading){return/*#__PURE__*/_jsxs(\"div\",{className:\"configuration-comparison-loading\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Loading Equipment Options...\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Generating recommended configurations for you.\"})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"configuration-comparison\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"comparison-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"System Configuration Comparison\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Here are our recommended configurations. You can modify them or add your own.\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"configuration-table-container\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"configuration-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Configuration Name\"}),selectedEquipment.solarPanels&&/*#__PURE__*/_jsx(\"th\",{children:\"Solar Panels\"}),selectedEquipment.heatPump&&/*#__PURE__*/_jsx(\"th\",{children:\"Heat Pump\"}),selectedEquipment.batteryStorage&&/*#__PURE__*/_jsx(\"th\",{children:\"Battery Storage\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Installation Cost\"}),/*#__PURE__*/_jsx(\"th\",{className:\"clickable-header\",title:\"Click to view monthly chart\",children:\"Annual Generation\"}),/*#__PURE__*/_jsx(\"th\",{className:\"clickable-header\",title:\"Click to view monthly chart\",children:\"Annual Savings\"}),/*#__PURE__*/_jsx(\"th\",{className:\"clickable-header\",title:\"Click to view monthly chart\",children:\"Export Revenue\"}),/*#__PURE__*/_jsx(\"th\",{className:\"clickable-header\",title:\"Click to view monthly chart\",children:\"CO\\u2082 Savings\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Payback Period\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:configurations.map(config=>{var _availableEquipment$s,_availableEquipment$h,_availableEquipment$b;return/*#__PURE__*/_jsxs(\"tr\",{className:config.loading?'loading-row':'',children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:config.name,onChange:e=>{setConfigurations(prev=>prev.map(c=>c.id===config.id?_objectSpread(_objectSpread({},c),{},{name:e.target.value}):c));},className:\"config-name-input\"})}),selectedEquipment.solarPanels&&/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(\"select\",{value:config.selections.solar||'',onChange:e=>handleEquipmentChange(config.id,'solar',e.target.value),className:\"equipment-select\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Please select...\"}),(_availableEquipment$s=availableEquipment.solar)===null||_availableEquipment$s===void 0?void 0:_availableEquipment$s.map(panel=>/*#__PURE__*/_jsxs(\"option\",{value:panel.id,children:[panel.name,\" (\",panel.ratedPowerPerPanel,\"W)\"]},panel.id))]})}),selectedEquipment.heatPump&&/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(\"select\",{value:config.selections.heatPump||'',onChange:e=>handleEquipmentChange(config.id,'heatPump',e.target.value),className:\"equipment-select\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Please select...\"}),(_availableEquipment$h=availableEquipment.heatPump)===null||_availableEquipment$h===void 0?void 0:_availableEquipment$h.map(heatPump=>/*#__PURE__*/_jsxs(\"option\",{value:heatPump.id,children:[heatPump.name,\" (COP: \",heatPump.cop,\")\"]},heatPump.id))]})}),selectedEquipment.batteryStorage&&/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(\"select\",{value:config.selections.battery||'',onChange:e=>handleEquipmentChange(config.id,'battery',e.target.value),className:\"equipment-select\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Please select...\"}),(_availableEquipment$b=availableEquipment.battery)===null||_availableEquipment$b===void 0?void 0:_availableEquipment$b.map(battery=>/*#__PURE__*/_jsxs(\"option\",{value:battery.id,children:[battery.name,\" (\",battery.capacityKwh,\"kWh)\"]},battery.id))]})}),/*#__PURE__*/_jsx(\"td\",{children:config.loading?'Calculating...':formatCurrency(config.calculations.installationCost)}),/*#__PURE__*/_jsx(\"td\",{className:\"clickable-cell\",onClick:()=>!config.loading&&showMonthlyChart(config,'generation','Monthly Generation (kWh)'),children:config.loading?'Calculating...':formatNumber(config.calculations.annualGeneration,' kWh')}),/*#__PURE__*/_jsx(\"td\",{className:\"clickable-cell\",onClick:()=>!config.loading&&showMonthlyChart(config,'savings','Monthly Savings (£)'),children:config.loading?'Calculating...':formatCurrency(config.calculations.annualSavings)}),/*#__PURE__*/_jsx(\"td\",{className:\"clickable-cell\",onClick:()=>!config.loading&&showMonthlyChart(config,'exportRevenue','Monthly Export Revenue (£)'),children:config.loading?'Calculating...':formatCurrency(config.calculations.annualExportRevenue)}),/*#__PURE__*/_jsx(\"td\",{className:\"clickable-cell\",onClick:()=>!config.loading&&showMonthlyChart(config,'co2Savings','Monthly CO₂ Savings (kg)'),children:config.loading?'Calculating...':formatNumber(config.calculations.annualCO2Savings,' kg')}),/*#__PURE__*/_jsx(\"td\",{children:config.loading?'Calculating...':formatNumber(config.calculations.paybackPeriod,' years')}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"button\",{className:\"btn-remove\",onClick:()=>removeConfiguration(config.id),disabled:configurations.length<=1,title:\"Remove configuration\",children:\"\\xD7\"})})]},config.id);})})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"table-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary\",onClick:addConfiguration,children:\"+ Add Custom Configuration\"}),/*#__PURE__*/_jsx(\"span\",{className:\"table-hint\",children:\"\\uD83D\\uDCA1 The first 3 are our recommendations. Modify them or add your own configurations.\"})]}),showChart.visible&&/*#__PURE__*/_jsx(\"div\",{className:\"chart-modal-overlay\",onClick:()=>setShowChart({visible:false,data:null,title:''}),children:/*#__PURE__*/_jsxs(\"div\",{className:\"chart-modal\",onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chart-modal-header\",children:[/*#__PURE__*/_jsx(\"h4\",{children:showChart.title}),/*#__PURE__*/_jsx(\"button\",{className:\"chart-close-button\",onClick:()=>setShowChart({visible:false,data:null,title:''}),children:\"\\xD7\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"chart-container\",children:/*#__PURE__*/_jsx(Line,{data:showChart.data,options:showChart.options})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"comparison-actions\",children:/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary\",onClick:onBack,children:\"Back to Equipment Selection\"})})]});};export default ConfigurationComparison;","map":{"version":3,"names":["React","useState","useEffect","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsx","_jsx","jsxs","_jsxs","register","ConfigurationComparison","_ref","selectedEquipment","userData","onBack","availableEquipment","setAvailableEquipment","configurations","setConfigurations","loading","setLoading","showChart","setShowChart","visible","data","title","loadAvailableEquipment","promises","solarPanels","push","fetch","then","res","json","type","heatPump","batteryStorage","results","Promise","all","available","forEach","result","recommendedConfigurations","generateRecommendedConfigurations","error","console","configs","id","name","selections","getCostEffectiveSelections","calculations","installationCost","annualGeneration","annualSavings","annualExportRevenue","annualCO2Savings","paybackPeriod","monthlyData","generation","Array","fill","savings","exportRevenue","co2Savings","getEcoFriendlySelections","getBalancedSelections","config","hasValidSelections","calculateConfigurationPerformance","solar","battery","length","cheapestSolar","reduce","min","panel","price","cheapestHeatPump","pump","cost","cheapestBattery","bestSolar","best","efficiency","ratedPowerPerPanel","bestHeatPump","cop","bestBattery","capacityKwh","sortedSolar","sort","a","b","middleIndex","Math","floor","sortedHeatPumps","sortedBatteries","Object","values","some","selection","calculationRequest","hasSolarPanels","hasHeatPump","hasBattery","solarPanelTypeIds","heatPumpTypeIds","batteryIds","houseArea","occupants","roofArea","latitude","longitude","annualElectricityUsageKwh","annualElectricityUsage","annualGasUsageKwh","annualGasUsage","monthlyElectricityUsageKwh","monthlyElectricityUsage","homeOccupancyFactor","electricityRate","gasRate","exportRate","peakElectricityRate","offPeakElectricityRate","response","method","headers","body","JSON","stringify","ok","processCalculationResult","createEmptyConfiguration","configNumber","concat","handleEquipmentChange","configId","equipmentType","equipmentId","prev","map","_objectSpread","recalculateConfiguration","changedEquipmentType","changedEquipmentId","find","c","updatedSelections","totalCost","totalGeneration","totalSavings","totalExportRevenue","totalCO2Savings","monthlyGeneration","monthlySavings","monthlyExportRevenue","monthlyCO2Savings","solarPanelOptions","heatPumpOptions","batteryOptions","option","annualCostSavings","annualTotalCO2Savings","value","index","monthlyCostSavings","monthlyDirectCO2Savings","monthlyIndirectCO2Savings","direct","indirect","addConfiguration","newId","max","removeConfiguration","filter","showMonthlyChart","dataType","months","chartData","labels","datasets","label","borderColor","getChartColor","backgroundColor","tension","chartOptions","responsive","plugins","legend","position","display","text","scales","y","beginAtZero","options","colors","formatCurrency","round","toLocaleString","formatNumber","unit","arguments","undefined","getEquipmentName","equipment","e","className","children","_availableEquipment$s","_availableEquipment$h","_availableEquipment$b","onChange","target","onClick","disabled","stopPropagation"],"sources":["/Users/xuefei/Desktop/calculator00/calculator/renewableCalculator.ui/src/components/steps/ConfigurationComparison.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst ConfigurationComparison = ({ selectedEquipment, userData, onBack }) => {\n  const [availableEquipment, setAvailableEquipment] = useState({});\n  const [configurations, setConfigurations] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showChart, setShowChart] = useState({ visible: false, data: null, title: '' });\n\n  useEffect(() => {\n    loadAvailableEquipment();\n  }, [selectedEquipment]);\n\n  const loadAvailableEquipment = async () => {\n    try {\n      const promises = [];\n      \n      if (selectedEquipment.solarPanels) {\n        promises.push(\n          fetch('http://localhost:8080/api/equipment/solar-panels/available')\n            .then(res => res.json())\n            .then(data => ({ type: 'solar', data }))\n        );\n      }\n      \n      if (selectedEquipment.heatPump) {\n        promises.push(\n          fetch('http://localhost:8080/api/equipment/heat-pumps/available')\n            .then(res => res.json())\n            .then(data => ({ type: 'heatPump', data }))\n        );\n      }\n      \n      if (selectedEquipment.batteryStorage) {\n        promises.push(\n          fetch('http://localhost:8080/api/equipment/batteries/available')\n            .then(res => res.json())\n            .then(data => ({ type: 'battery', data }))\n        );\n      }\n\n      const results = await Promise.all(promises);\n      \n      const available = {};\n      results.forEach(result => {\n        available[result.type] = result.data;\n      });\n      \n      setAvailableEquipment(available);\n      \n      // Generate 3 recommended configurations\n      const recommendedConfigurations = await generateRecommendedConfigurations(available);\n      setConfigurations(recommendedConfigurations);\n      \n    } catch (error) {\n      console.error('Error loading available equipment:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const generateRecommendedConfigurations = async (available) => {\n    const configs = [];\n    \n    // Configuration 1: Most Cost-Effective (cheapest installation cost)\n    configs.push({\n      id: 1,\n      name: \"💰 Most Cost-Effective\",\n      selections: getCostEffectiveSelections(available),\n      calculations: {\n        installationCost: 0,\n        annualGeneration: 0,\n        annualSavings: 0,\n        annualExportRevenue: 0,\n        annualCO2Savings: 0,\n        paybackPeriod: 0,\n        monthlyData: {\n          generation: new Array(12).fill(0),\n          savings: new Array(12).fill(0),\n          exportRevenue: new Array(12).fill(0),\n          co2Savings: new Array(12).fill(0)\n        }\n      },\n      loading: false\n    });\n\n    // Configuration 2: Most Eco-Friendly (maximum CO2 savings)\n    configs.push({\n      id: 2,\n      name: \"🌱 Most Eco-Friendly\",\n      selections: getEcoFriendlySelections(available),\n      calculations: {\n        installationCost: 0,\n        annualGeneration: 0,\n        annualSavings: 0,\n        annualExportRevenue: 0,\n        annualCO2Savings: 0,\n        paybackPeriod: 0,\n        monthlyData: {\n          generation: new Array(12).fill(0),\n          savings: new Array(12).fill(0),\n          exportRevenue: new Array(12).fill(0),\n          co2Savings: new Array(12).fill(0)\n        }\n      },\n      loading: false\n    });\n\n    // Configuration 3: Balanced Option (best overall value)\n    configs.push({\n      id: 3,\n      name: \"⚖️ Balanced Option\",\n      selections: getBalancedSelections(available),\n      calculations: {\n        installationCost: 0,\n        annualGeneration: 0,\n        annualSavings: 0,\n        annualExportRevenue: 0,\n        annualCO2Savings: 0,\n        paybackPeriod: 0,\n        monthlyData: {\n          generation: new Array(12).fill(0),\n          savings: new Array(12).fill(0),\n          exportRevenue: new Array(12).fill(0),\n          co2Savings: new Array(12).fill(0)\n        }\n      },\n      loading: false\n    });\n\n    // Calculate performance for each configuration\n    for (let config of configs) {\n      if (hasValidSelections(config.selections)) {\n        await calculateConfigurationPerformance(config);\n      }\n    }\n\n    return configs;\n  };\n\n  const getCostEffectiveSelections = (available) => {\n    const selections = {\n      solar: selectedEquipment.solarPanels ? null : null,\n      heatPump: selectedEquipment.heatPump ? null : null,\n      battery: selectedEquipment.batteryStorage ? null : null,\n    };\n\n    // Select cheapest options (assuming lower price or basic models)\n    if (available.solar && available.solar.length > 0) {\n      // Find the most cost-effective solar panel (lowest price if available, otherwise first option)\n      const cheapestSolar = available.solar.reduce((min, panel) => \n        (panel.price && min.price && panel.price < min.price) ? panel : min\n      );\n      selections.solar = cheapestSolar.id;\n    }\n\n    if (available.heatPump && available.heatPump.length > 0) {\n      // Select most cost-effective heat pump (lowest cost)\n      const cheapestHeatPump = available.heatPump.reduce((min, pump) => \n        (pump.cost && min.cost && pump.cost < min.cost) ? pump : min\n      );\n      selections.heatPump = cheapestHeatPump.id;\n    }\n\n    if (available.battery && available.battery.length > 0) {\n      // Select most cost-effective battery\n      const cheapestBattery = available.battery.reduce((min, battery) => \n        (battery.cost && min.cost && battery.cost < min.cost) ? battery : min\n      );\n      selections.battery = cheapestBattery.id;\n    }\n\n    return selections;\n  };\n\n  const getEcoFriendlySelections = (available) => {\n    const selections = {\n      solar: selectedEquipment.solarPanels ? null : null,\n      heatPump: selectedEquipment.heatPump ? null : null,\n      battery: selectedEquipment.batteryStorage ? null : null,\n    };\n\n    // Select highest efficiency/performance options\n    if (available.solar && available.solar.length > 0) {\n      // Find highest efficiency or power solar panel\n      const bestSolar = available.solar.reduce((best, panel) => \n        (panel.efficiency && best.efficiency && panel.efficiency > best.efficiency) ? panel : \n        (panel.ratedPowerPerPanel && best.ratedPowerPerPanel && panel.ratedPowerPerPanel > best.ratedPowerPerPanel) ? panel : best\n      );\n      selections.solar = bestSolar.id;\n    }\n\n    if (available.heatPump && available.heatPump.length > 0) {\n      // Select highest COP heat pump\n      const bestHeatPump = available.heatPump.reduce((best, pump) => \n        (pump.cop && best.cop && pump.cop > best.cop) ? pump : best\n      );\n      selections.heatPump = bestHeatPump.id;\n    }\n\n    if (available.battery && available.battery.length > 0) {\n      // Select largest capacity battery\n      const bestBattery = available.battery.reduce((best, battery) => \n        (battery.capacityKwh && best.capacityKwh && battery.capacityKwh > best.capacityKwh) ? battery : best\n      );\n      selections.battery = bestBattery.id;\n    }\n\n    return selections;\n  };\n\n  const getBalancedSelections = (available) => {\n    const selections = {\n      solar: selectedEquipment.solarPanels ? null : null,\n      heatPump: selectedEquipment.heatPump ? null : null,\n      battery: selectedEquipment.batteryStorage ? null : null,\n    };\n\n    // Select middle-range options (good balance of cost and performance)\n    if (available.solar && available.solar.length > 0) {\n      const sortedSolar = [...available.solar].sort((a, b) => \n        (a.price || 0) - (b.price || 0)\n      );\n      const middleIndex = Math.floor(sortedSolar.length / 2);\n      selections.solar = sortedSolar[middleIndex].id;\n    }\n\n    if (available.heatPump && available.heatPump.length > 0) {\n      const sortedHeatPumps = [...available.heatPump].sort((a, b) => \n        (a.cost || 0) - (b.cost || 0)\n      );\n      const middleIndex = Math.floor(sortedHeatPumps.length / 2);\n      selections.heatPump = sortedHeatPumps[middleIndex].id;\n    }\n\n    if (available.battery && available.battery.length > 0) {\n      const sortedBatteries = [...available.battery].sort((a, b) => \n        (a.cost || 0) - (b.cost || 0)\n      );\n      const middleIndex = Math.floor(sortedBatteries.length / 2);\n      selections.battery = sortedBatteries[middleIndex].id;\n    }\n\n    return selections;\n  };\n\n  const hasValidSelections = (selections) => {\n    return Object.values(selections).some(selection => selection !== null && selection !== '');\n  };\n\n  const calculateConfigurationPerformance = async (config) => {\n    try {\n      const calculationRequest = {\n        hasSolarPanels: selectedEquipment.solarPanels,\n        hasHeatPump: selectedEquipment.heatPump,\n        hasBattery: selectedEquipment.batteryStorage,\n        solarPanelTypeIds: config.selections.solar ? [config.selections.solar] : [],\n        heatPumpTypeIds: config.selections.heatPump ? [config.selections.heatPump] : [],\n        batteryIds: config.selections.battery ? [config.selections.battery] : [],\n        houseArea: userData.houseArea || 100,\n        occupants: userData.occupants || 3,\n        roofArea: userData.roofArea || 30,\n        latitude: userData.latitude || 51.5,\n        longitude: userData.longitude || -0.1,\n        annualElectricityUsageKwh: userData.annualElectricityUsage || 3000,\n        annualGasUsageKwh: userData.annualGasUsage || 15000,\n        monthlyElectricityUsageKwh: userData.monthlyElectricityUsage || 250,\n        homeOccupancyFactor: userData.homeOccupancyFactor || 0.5,\n        electricityRate: userData.electricityRate || 30,\n        gasRate: userData.gasRate || 6,\n        exportRate: userData.exportRate || 5,\n        peakElectricityRate: userData.peakElectricityRate || 40,\n        offPeakElectricityRate: userData.offPeakElectricityRate || 15,\n      };\n\n      const response = await fetch('http://localhost:8080/api/equipment/compare', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(calculationRequest)\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        config.calculations = processCalculationResult(result);\n      }\n    } catch (error) {\n      console.error('Error calculating configuration performance:', error);\n    }\n  };\n\n  const createEmptyConfiguration = (configNumber) => ({\n    id: configNumber,\n    name: `Configuration ${configNumber}`,\n    selections: {\n      solar: selectedEquipment.solarPanels ? '' : null,\n      heatPump: selectedEquipment.heatPump ? '' : null,\n      battery: selectedEquipment.batteryStorage ? '' : null,\n    },\n    calculations: {\n      installationCost: 0,\n      annualGeneration: 0,\n      annualSavings: 0,\n      annualExportRevenue: 0,\n      annualCO2Savings: 0,\n      paybackPeriod: 0,\n      monthlyData: {\n        generation: new Array(12).fill(0),\n        savings: new Array(12).fill(0),\n        exportRevenue: new Array(12).fill(0),\n        co2Savings: new Array(12).fill(0)\n      }\n    },\n    loading: false\n  });\n\n  const handleEquipmentChange = async (configId, equipmentType, equipmentId) => {\n    // Update the selection\n    setConfigurations(prev => prev.map(config => {\n      if (config.id === configId) {\n        return {\n          ...config,\n          selections: {\n            ...config.selections,\n            [equipmentType]: equipmentId\n          },\n          loading: true\n        };\n      }\n      return config;\n    }));\n\n    // Recalculate for this configuration\n    await recalculateConfiguration(configId, equipmentType, equipmentId);\n  };\n\n  const recalculateConfiguration = async (configId, changedEquipmentType, changedEquipmentId) => {\n    try {\n      const config = configurations.find(c => c.id === configId);\n      if (!config) return;\n\n      // Update the changed selection\n      const updatedSelections = {\n        ...config.selections,\n        [changedEquipmentType]: changedEquipmentId\n      };\n\n      // Build request for calculation\n      const calculationRequest = {\n        hasSolarPanels: selectedEquipment.solarPanels,\n        hasHeatPump: selectedEquipment.heatPump,\n        hasBattery: selectedEquipment.batteryStorage,\n        solarPanelTypeIds: updatedSelections.solar ? [updatedSelections.solar] : [],\n        heatPumpTypeIds: updatedSelections.heatPump ? [updatedSelections.heatPump] : [],\n        batteryIds: updatedSelections.battery ? [updatedSelections.battery] : [],\n        houseArea: userData.houseArea || 100,\n        occupants: userData.occupants || 3,\n        roofArea: userData.roofArea || 30,\n        latitude: userData.latitude || 51.5,\n        longitude: userData.longitude || -0.1,\n        annualElectricityUsageKwh: userData.annualElectricityUsage || 3000,\n        annualGasUsageKwh: userData.annualGasUsage || 15000,\n        monthlyElectricityUsageKwh: userData.monthlyElectricityUsage || 250,\n        homeOccupancyFactor: userData.homeOccupancyFactor || 0.5,\n        electricityRate: userData.electricityRate || 30,\n        gasRate: userData.gasRate || 6,\n        exportRate: userData.exportRate || 5,\n        peakElectricityRate: userData.peakElectricityRate || 40,\n        offPeakElectricityRate: userData.offPeakElectricityRate || 15,\n      };\n\n      const response = await fetch('http://localhost:8080/api/equipment/compare', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(calculationRequest)\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        const calculations = processCalculationResult(result);\n        \n        setConfigurations(prev => prev.map(config => {\n          if (config.id === configId) {\n            return {\n              ...config,\n              selections: updatedSelections,\n              calculations,\n              loading: false\n            };\n          }\n          return config;\n        }));\n      }\n    } catch (error) {\n      console.error('Error recalculating configuration:', error);\n      setConfigurations(prev => prev.map(config => {\n        if (config.id === configId) {\n          return { ...config, loading: false };\n        }\n        return config;\n      }));\n    }\n  };\n\n  const processCalculationResult = (result) => {\n    let totalCost = 0;\n    let totalGeneration = 0;\n    let totalSavings = 0;\n    let totalExportRevenue = 0;\n    let totalCO2Savings = 0;\n    const monthlyGeneration = new Array(12).fill(0);\n    const monthlySavings = new Array(12).fill(0);\n    const monthlyExportRevenue = new Array(12).fill(0);\n    const monthlyCO2Savings = new Array(12).fill(0);\n\n    // Aggregate data from all equipment types\n    [...(result.solarPanelOptions || []), ...(result.heatPumpOptions || []), ...(result.batteryOptions || [])].forEach(option => {\n      totalCost += option.installationCost || 0;\n      totalGeneration += option.annualGeneration || 0;\n      totalSavings += option.annualCostSavings || 0;\n      totalExportRevenue += option.annualExportRevenue || 0;\n      totalCO2Savings += option.annualTotalCO2Savings || 0;\n\n      // Aggregate monthly data\n      if (option.monthlyGeneration) {\n        option.monthlyGeneration.forEach((value, index) => {\n          monthlyGeneration[index] += value || 0;\n        });\n      }\n      if (option.monthlyCostSavings) {\n        option.monthlyCostSavings.forEach((value, index) => {\n          monthlySavings[index] += value || 0;\n        });\n      }\n      if (option.monthlyExportRevenue) {\n        option.monthlyExportRevenue.forEach((value, index) => {\n          monthlyExportRevenue[index] += value || 0;\n        });\n      }\n      if (option.monthlyDirectCO2Savings && option.monthlyIndirectCO2Savings) {\n        option.monthlyDirectCO2Savings.forEach((direct, index) => {\n          const indirect = option.monthlyIndirectCO2Savings[index] || 0;\n          monthlyCO2Savings[index] += (direct || 0) + indirect;\n        });\n      }\n    });\n\n    const paybackPeriod = (totalSavings + totalExportRevenue) > 0 ? \n      totalCost / (totalSavings + totalExportRevenue) : 999;\n\n    return {\n      installationCost: totalCost,\n      annualGeneration: totalGeneration,\n      annualSavings: totalSavings,\n      annualExportRevenue: totalExportRevenue,\n      annualCO2Savings: totalCO2Savings,\n      paybackPeriod: paybackPeriod,\n      monthlyData: {\n        generation: monthlyGeneration,\n        savings: monthlySavings,\n        exportRevenue: monthlyExportRevenue,\n        co2Savings: monthlyCO2Savings\n      }\n    };\n  };\n\n  const addConfiguration = () => {\n    const newId = Math.max(...configurations.map(c => c.id)) + 1;\n    setConfigurations(prev => [...prev, createEmptyConfiguration(newId)]);\n  };\n\n  const removeConfiguration = (configId) => {\n    if (configurations.length > 1) {\n      setConfigurations(prev => prev.filter(c => c.id !== configId));\n    }\n  };\n\n  const showMonthlyChart = (config, dataType, title) => {\n    const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', \n                   'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    \n    let monthlyData = [];\n    switch (dataType) {\n      case 'generation':\n        monthlyData = config.calculations.monthlyData.generation;\n        break;\n      case 'savings':\n        monthlyData = config.calculations.monthlyData.savings;\n        break;\n      case 'exportRevenue':\n        monthlyData = config.calculations.monthlyData.exportRevenue;\n        break;\n      case 'co2Savings':\n        monthlyData = config.calculations.monthlyData.co2Savings;\n        break;\n      default:\n        monthlyData = [];\n    }\n\n    const chartData = {\n      labels: months,\n      datasets: [{\n        label: title,\n        data: monthlyData,\n        borderColor: getChartColor(dataType),\n        backgroundColor: getChartColor(dataType) + '20',\n        tension: 0.4,\n        fill: true\n      }]\n    };\n\n    const chartOptions = {\n      responsive: true,\n      plugins: {\n        legend: { position: 'top' },\n        title: { display: true, text: `${config.name} - ${title}` }\n      },\n      scales: {\n        y: { beginAtZero: true }\n      }\n    };\n\n    setShowChart({\n      visible: true,\n      data: chartData,\n      options: chartOptions,\n      title: `${config.name} - ${title}`\n    });\n  };\n\n  const getChartColor = (dataType) => {\n    const colors = {\n      generation: '#3498db',\n      savings: '#27ae60',\n      exportRevenue: '#f39c12',\n      co2Savings: '#e74c3c'\n    };\n    return colors[dataType] || '#34495e';\n  };\n\n  const formatCurrency = (value) => {\n    return value ? `£${Math.round(value).toLocaleString()}` : '£0';\n  };\n\n  const formatNumber = (value, unit = '') => {\n    return value ? `${Math.round(value).toLocaleString()}${unit}` : `0${unit}`;\n  };\n\n  const getEquipmentName = (equipmentType, equipmentId) => {\n    if (!equipmentId || !availableEquipment[equipmentType]) return '';\n    const equipment = availableEquipment[equipmentType].find(e => e.id == equipmentId);\n    return equipment ? equipment.name : '';\n  };\n\n  if (loading) {\n    return (\n      <div className=\"configuration-comparison-loading\">\n        <h3>Loading Equipment Options...</h3>\n        <p>Generating recommended configurations for you.</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"configuration-comparison\">\n      <div className=\"comparison-header\">\n        <h3>System Configuration Comparison</h3>\n        <p>Here are our recommended configurations. You can modify them or add your own.</p>\n      </div>\n\n      <div className=\"configuration-table-container\">\n        <table className=\"configuration-table\">\n          <thead>\n            <tr>\n              <th>Configuration Name</th>\n              {selectedEquipment.solarPanels && <th>Solar Panels</th>}\n              {selectedEquipment.heatPump && <th>Heat Pump</th>}\n              {selectedEquipment.batteryStorage && <th>Battery Storage</th>}\n              <th>Installation Cost</th>\n              <th className=\"clickable-header\" title=\"Click to view monthly chart\">Annual Generation</th>\n              <th className=\"clickable-header\" title=\"Click to view monthly chart\">Annual Savings</th>\n              <th className=\"clickable-header\" title=\"Click to view monthly chart\">Export Revenue</th>\n              <th className=\"clickable-header\" title=\"Click to view monthly chart\">CO₂ Savings</th>\n              <th>Payback Period</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {configurations.map(config => (\n              <tr key={config.id} className={config.loading ? 'loading-row' : ''}>\n                <td>\n                  <input \n                    type=\"text\" \n                    value={config.name}\n                    onChange={(e) => {\n                      setConfigurations(prev => prev.map(c => \n                        c.id === config.id ? { ...c, name: e.target.value } : c\n                      ));\n                    }}\n                    className=\"config-name-input\"\n                  />\n                </td>\n                \n                {selectedEquipment.solarPanels && (\n                  <td>\n                    <select \n                      value={config.selections.solar || ''}\n                      onChange={(e) => handleEquipmentChange(config.id, 'solar', e.target.value)}\n                      className=\"equipment-select\"\n                    >\n                      <option value=\"\">Please select...</option>\n                      {availableEquipment.solar?.map(panel => (\n                        <option key={panel.id} value={panel.id}>\n                          {panel.name} ({panel.ratedPowerPerPanel}W)\n                        </option>\n                      ))}\n                    </select>\n                  </td>\n                )}\n                \n                {selectedEquipment.heatPump && (\n                  <td>\n                    <select \n                      value={config.selections.heatPump || ''}\n                      onChange={(e) => handleEquipmentChange(config.id, 'heatPump', e.target.value)}\n                      className=\"equipment-select\"\n                    >\n                      <option value=\"\">Please select...</option>\n                      {availableEquipment.heatPump?.map(heatPump => (\n                        <option key={heatPump.id} value={heatPump.id}>\n                          {heatPump.name} (COP: {heatPump.cop})\n                        </option>\n                      ))}\n                    </select>\n                  </td>\n                )}\n                \n                {selectedEquipment.batteryStorage && (\n                  <td>\n                    <select \n                      value={config.selections.battery || ''}\n                      onChange={(e) => handleEquipmentChange(config.id, 'battery', e.target.value)}\n                      className=\"equipment-select\"\n                    >\n                      <option value=\"\">Please select...</option>\n                      {availableEquipment.battery?.map(battery => (\n                        <option key={battery.id} value={battery.id}>\n                          {battery.name} ({battery.capacityKwh}kWh)\n                        </option>\n                      ))}\n                    </select>\n                  </td>\n                )}\n                \n                <td>{config.loading ? 'Calculating...' : formatCurrency(config.calculations.installationCost)}</td>\n                \n                <td \n                  className=\"clickable-cell\"\n                  onClick={() => !config.loading && showMonthlyChart(config, 'generation', 'Monthly Generation (kWh)')}\n                >\n                  {config.loading ? 'Calculating...' : formatNumber(config.calculations.annualGeneration, ' kWh')}\n                </td>\n                \n                <td \n                  className=\"clickable-cell\"\n                  onClick={() => !config.loading && showMonthlyChart(config, 'savings', 'Monthly Savings (£)')}\n                >\n                  {config.loading ? 'Calculating...' : formatCurrency(config.calculations.annualSavings)}\n                </td>\n                \n                <td \n                  className=\"clickable-cell\"\n                  onClick={() => !config.loading && showMonthlyChart(config, 'exportRevenue', 'Monthly Export Revenue (£)')}\n                >\n                  {config.loading ? 'Calculating...' : formatCurrency(config.calculations.annualExportRevenue)}\n                </td>\n                \n                <td \n                  className=\"clickable-cell\"\n                  onClick={() => !config.loading && showMonthlyChart(config, 'co2Savings', 'Monthly CO₂ Savings (kg)')}\n                >\n                  {config.loading ? 'Calculating...' : formatNumber(config.calculations.annualCO2Savings, ' kg')}\n                </td>\n                \n                <td>{config.loading ? 'Calculating...' : formatNumber(config.calculations.paybackPeriod, ' years')}</td>\n                \n                <td>\n                  <button \n                    className=\"btn-remove\" \n                    onClick={() => removeConfiguration(config.id)}\n                    disabled={configurations.length <= 1}\n                    title=\"Remove configuration\"\n                  >\n                    ×\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n\n      <div className=\"table-actions\">\n        <button className=\"btn btn-secondary\" onClick={addConfiguration}>\n          + Add Custom Configuration\n        </button>\n        <span className=\"table-hint\">\n          💡 The first 3 are our recommendations. Modify them or add your own configurations.\n        </span>\n      </div>\n\n      {/* Monthly Chart Modal */}\n      {showChart.visible && (\n        <div className=\"chart-modal-overlay\" onClick={() => setShowChart({ visible: false, data: null, title: '' })}>\n          <div className=\"chart-modal\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"chart-modal-header\">\n              <h4>{showChart.title}</h4>\n              <button \n                className=\"chart-close-button\"\n                onClick={() => setShowChart({ visible: false, data: null, title: '' })}\n              >\n                ×\n              </button>\n            </div>\n            <div className=\"chart-container\">\n              <Line data={showChart.data} options={showChart.options} />\n            </div>\n          </div>\n        </div>\n      )}\n\n      <div className=\"comparison-actions\">\n        <button className=\"btn btn-secondary\" onClick={onBack}>\n          Back to Equipment Selection\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ConfigurationComparison; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}