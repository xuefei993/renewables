{"ast":null,"code":"var _jsxFileName = \"/Users/xuefei/Desktop/calculator00/calculator/renewableCalculator.ui/src/components/steps/EnergyDemand.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ElectricityUsageSection from \"./energy-demand/ElectricityUsageSection\";\nimport HeatingSection from \"./energy-demand/HeatingSection\";\nimport HotWaterSection from \"./energy-demand/HotWaterSection\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EnergyDemand = ({\n  data,\n  onDataChange,\n  onNext,\n  onBack\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    householdSize: data.householdSize || \"\",\n    knowsMonthlyUsage: data.knowsMonthlyUsage || \"\",\n    monthlyElectricityUsage: data.monthlyElectricityUsage || {\n      january: \"\",\n      february: \"\",\n      march: \"\",\n      april: \"\",\n      may: \"\",\n      june: \"\",\n      july: \"\",\n      august: \"\",\n      september: \"\",\n      october: \"\",\n      november: \"\",\n      december: \"\"\n    },\n    knowsAnnualUsage: data.knowsAnnualUsage || \"\",\n    annualElectricityUsage: data.annualElectricityUsage || \"\",\n    floorArea: data.floorArea || \"\",\n    heatingMethod: data.heatingMethod || \"\",\n    hotWaterMethod: data.hotWaterMethod || \"\",\n    daytimeHomeHabits: data.daytimeHomeHabits || \"\",\n    knowsMonthlyGasUsage: data.knowsMonthlyGasUsage || \"\",\n    monthlyGasUsage: data.monthlyGasUsage || {\n      january: \"\",\n      february: \"\",\n      march: \"\",\n      april: \"\",\n      may: \"\",\n      june: \"\",\n      july: \"\",\n      august: \"\",\n      september: \"\",\n      october: \"\",\n      november: \"\",\n      december: \"\"\n    },\n    knowsAnnualGasUsage: data.knowsAnnualGasUsage || \"\",\n    annualGasUsage: data.annualGasUsage || \"\",\n    heatPumpCOP: data.heatPumpCOP || \"3.0\",\n    hotWaterHeatPumpCOP: data.hotWaterHeatPumpCOP || \"3.0\",\n    knowsBoilerEfficiency: data.knowsBoilerEfficiency || \"\",\n    boilerEfficiency: data.boilerEfficiency || \"\",\n    boilerAge: data.boilerAge || \"\",\n    ...data\n  });\n\n  // Help modal state\n  const [activeHelpModal, setActiveHelpModal] = useState(null);\n\n  // Helper function to check if gas is needed for either heating or hot water\n  const needsGasUsage = () => {\n    return formData.heatingMethod === \"gas boiler\" || formData.hotWaterMethod === \"gas boiler\";\n  };\n\n  // Helper function to check if any boiler is being used\n  const usesBoiler = () => {\n    return formData.heatingMethod === \"gas boiler\" || formData.hotWaterMethod === \"gas boiler\";\n  };\n  const updateFormData = updates => {\n    setFormData(prev => ({\n      ...prev,\n      ...updates\n    }));\n    onDataChange(updates);\n  };\n\n  // Basic form handlers\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    updateFormData({\n      [name]: value\n    });\n  };\n\n  // Help modal handlers\n  const openHelpModal = modalType => {\n    setActiveHelpModal(modalType);\n  };\n  const closeHelpModal = () => {\n    setActiveHelpModal(null);\n  };\n\n  // Electricity usage handlers\n  const handleKnowsMonthlyUsageChange = e => {\n    const value = e.target.value;\n    let updates = {\n      knowsMonthlyUsage: value\n    };\n    if (value === \"yes\") {\n      updates.knowsAnnualUsage = \"\";\n      updates.annualElectricityUsage = \"\";\n    } else if (value === \"no\") {\n      updates.monthlyElectricityUsage = {\n        january: \"\",\n        february: \"\",\n        march: \"\",\n        april: \"\",\n        may: \"\",\n        june: \"\",\n        july: \"\",\n        august: \"\",\n        september: \"\",\n        october: \"\",\n        november: \"\",\n        december: \"\"\n      };\n    }\n    updateFormData(updates);\n  };\n  const handleKnowsAnnualUsageChange = e => {\n    const value = e.target.value;\n    let updates = {\n      knowsAnnualUsage: value\n    };\n    if (value === \"yes\") {\n      updates.monthlyElectricityUsage = {\n        january: \"\",\n        february: \"\",\n        march: \"\",\n        april: \"\",\n        may: \"\",\n        june: \"\",\n        july: \"\",\n        august: \"\",\n        september: \"\",\n        october: \"\",\n        november: \"\",\n        december: \"\"\n      };\n    }\n    updateFormData(updates);\n  };\n  const handleMonthlyElectricityChange = (month, value) => {\n    const updatedMonthlyUsage = {\n      ...formData.monthlyElectricityUsage,\n      [month]: value\n    };\n    updateFormData({\n      monthlyElectricityUsage: updatedMonthlyUsage\n    });\n  };\n  const handleAnnualElectricityChange = e => {\n    updateFormData({\n      annualElectricityUsage: e.target.value\n    });\n  };\n\n  // Heating method handlers\n  const handleHeatingMethodChange = e => {\n    const value = e.target.value;\n    let updates = {\n      heatingMethod: value\n    };\n\n    // If neither heating nor hot water will need gas after this change, clear gas data\n    if (value !== \"gas boiler\" && formData.hotWaterMethod !== \"gas boiler\") {\n      updates = {\n        ...updates,\n        knowsMonthlyGasUsage: \"\",\n        monthlyGasUsage: {\n          january: \"\",\n          february: \"\",\n          march: \"\",\n          april: \"\",\n          may: \"\",\n          june: \"\",\n          july: \"\",\n          august: \"\",\n          september: \"\",\n          october: \"\",\n          november: \"\",\n          december: \"\"\n        },\n        knowsAnnualGasUsage: \"\",\n        annualGasUsage: \"\"\n      };\n    }\n    if (value !== \"heat pumps\") {\n      updates.heatPumpCOP = \"3.0\";\n    }\n    updateFormData(updates);\n  };\n\n  // Hot water method handlers\n  const handleHotWaterMethodChange = e => {\n    const value = e.target.value;\n    let updates = {\n      hotWaterMethod: value\n    };\n\n    // If neither heating nor hot water will need gas after this change, clear gas data\n    if (value !== \"gas boiler\" && formData.heatingMethod !== \"gas boiler\") {\n      updates = {\n        ...updates,\n        knowsMonthlyGasUsage: \"\",\n        monthlyGasUsage: {\n          january: \"\",\n          february: \"\",\n          march: \"\",\n          april: \"\",\n          may: \"\",\n          june: \"\",\n          july: \"\",\n          august: \"\",\n          september: \"\",\n          october: \"\",\n          november: \"\",\n          december: \"\"\n        },\n        knowsAnnualGasUsage: \"\",\n        annualGasUsage: \"\"\n      };\n    }\n    if (value !== \"heat pumps\") {\n      updates.hotWaterHeatPumpCOP = \"3.0\";\n    }\n    updateFormData(updates);\n  };\n  const handleKnowsMonthlyGasUsageChange = e => {\n    const value = e.target.value;\n    let updates = {\n      knowsMonthlyGasUsage: value\n    };\n    if (value === \"yes\") {\n      updates.knowsAnnualGasUsage = \"\";\n      updates.annualGasUsage = \"\";\n    } else if (value === \"no\") {\n      updates.monthlyGasUsage = {\n        january: \"\",\n        february: \"\",\n        march: \"\",\n        april: \"\",\n        may: \"\",\n        june: \"\",\n        july: \"\",\n        august: \"\",\n        september: \"\",\n        october: \"\",\n        november: \"\",\n        december: \"\"\n      };\n    }\n    updateFormData(updates);\n  };\n  const handleKnowsAnnualGasUsageChange = e => {\n    const value = e.target.value;\n    let updates = {\n      knowsAnnualGasUsage: value\n    };\n    if (value === \"yes\") {\n      updates.monthlyGasUsage = {\n        january: \"\",\n        february: \"\",\n        march: \"\",\n        april: \"\",\n        may: \"\",\n        june: \"\",\n        july: \"\",\n        august: \"\",\n        september: \"\",\n        october: \"\",\n        november: \"\",\n        december: \"\"\n      };\n    }\n    updateFormData(updates);\n  };\n  const handleMonthlyGasChange = (month, value) => {\n    const updatedMonthlyGasUsage = {\n      ...formData.monthlyGasUsage,\n      [month]: value\n    };\n    updateFormData({\n      monthlyGasUsage: updatedMonthlyGasUsage\n    });\n  };\n  const handleAnnualGasUsageChange = e => {\n    updateFormData({\n      annualGasUsage: e.target.value\n    });\n  };\n  const handleHeatPumpCOPChange = e => {\n    updateFormData({\n      heatPumpCOP: e.target.value\n    });\n  };\n  const handleHotWaterHeatPumpCOPChange = e => {\n    updateFormData({\n      hotWaterHeatPumpCOP: e.target.value\n    });\n  };\n  const handleNext = () => {\n    onNext();\n  };\n  const isFormValid = () => {\n    if (!formData.householdSize || !formData.knowsMonthlyUsage || !formData.floorArea || !formData.heatingMethod || !formData.hotWaterMethod || !formData.daytimeHomeHabits) {\n      return false;\n    }\n\n    // Validate electricity usage\n    if (formData.knowsMonthlyUsage === \"yes\") {\n      const months = [\"january\", \"february\", \"march\", \"april\", \"may\", \"june\", \"july\", \"august\", \"september\", \"october\", \"november\", \"december\"];\n      const electricityValid = months.every(month => formData.monthlyElectricityUsage[month] && formData.monthlyElectricityUsage[month].trim() !== \"\");\n      if (!electricityValid) return false;\n    } else if (formData.knowsMonthlyUsage === \"no\") {\n      if (!formData.knowsAnnualUsage) {\n        return false;\n      }\n      if (formData.knowsAnnualUsage === \"yes\" && !formData.annualElectricityUsage) {\n        return false;\n      }\n    }\n\n    // Validate gas usage if needed for either heating or hot water\n    if (needsGasUsage()) {\n      if (!formData.knowsMonthlyGasUsage) {\n        return false;\n      }\n      if (formData.knowsMonthlyGasUsage === \"yes\") {\n        const months = [\"january\", \"february\", \"march\", \"april\", \"may\", \"june\", \"july\", \"august\", \"september\", \"october\", \"november\", \"december\"];\n        return months.every(month => formData.monthlyGasUsage[month] && formData.monthlyGasUsage[month].trim() !== \"\");\n      } else if (formData.knowsMonthlyGasUsage === \"no\") {\n        if (!formData.knowsAnnualGasUsage) {\n          return false;\n        }\n        if (formData.knowsAnnualGasUsage === \"yes\" && !formData.annualGasUsage) {\n          return false;\n        }\n      }\n    }\n    return true;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"step-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"step-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Energy Demand\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Tell us about your household's energy usage patterns to calculate accurate renewable energy recommendations.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"householdSize\",\n        children: \"How many people live in your household regularly?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"householdSize\",\n        name: \"householdSize\",\n        value: formData.householdSize,\n        onChange: handleChange,\n        placeholder: \"Enter number of people\",\n        min: \"1\",\n        max: \"20\",\n        className: \"form-input\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ElectricityUsageSection, {\n      formData: formData,\n      onKnowsMonthlyUsageChange: handleKnowsMonthlyUsageChange,\n      onKnowsAnnualUsageChange: handleKnowsAnnualUsageChange,\n      onMonthlyElectricityChange: handleMonthlyElectricityChange,\n      onAnnualElectricityChange: handleAnnualElectricityChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"floorArea\",\n        children: \"What is your approximate floor area? (m\\xB2)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"floorArea\",\n        name: \"floorArea\",\n        value: formData.floorArea,\n        onChange: handleChange,\n        placeholder: \"Enter floor area in square metres\",\n        min: \"1\",\n        step: \"0.1\",\n        className: \"form-input\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HeatingSection, {\n      formData: formData,\n      onHeatingMethodChange: handleHeatingMethodChange,\n      onHeatPumpCOPChange: handleHeatPumpCOPChange,\n      needsGasUsage: needsGasUsage()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HotWaterSection, {\n      formData: formData,\n      onHotWaterMethodChange: handleHotWaterMethodChange,\n      onHotWaterHeatPumpCOPChange: handleHotWaterHeatPumpCOPChange,\n      needsGasUsage: needsGasUsage(),\n      onKnowsMonthlyGasUsageChange: handleKnowsMonthlyGasUsageChange,\n      onKnowsAnnualGasUsageChange: handleKnowsAnnualGasUsageChange,\n      onMonthlyGasChange: handleMonthlyGasChange,\n      onAnnualGasUsageChange: handleAnnualGasUsageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this), usesBoiler() && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"boiler-efficiency-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-label-with-help\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"knowsBoilerEfficiency\",\n            children: \"Do you know your boiler's efficiency?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"field-help-btn\",\n            onClick: () => openHelpModal('boilerEfficiency'),\n            \"aria-label\": \"Boiler Efficiency Help\",\n            children: \"?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"knowsBoilerEfficiency\",\n          name: \"knowsBoilerEfficiency\",\n          value: formData.knowsBoilerEfficiency,\n          onChange: handleChange,\n          className: \"form-select\",\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select an option\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"yes\",\n            children: \"Yes, I know the efficiency percentage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"no\",\n            children: \"No, but I know the boiler age\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"unknown\",\n            children: \"No, I don't know either\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 11\n      }, this), formData.knowsBoilerEfficiency === \"yes\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"boilerEfficiency\",\n          children: \"Boiler Efficiency (%)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"boilerEfficiency\",\n          name: \"boilerEfficiency\",\n          value: formData.boilerEfficiency,\n          onChange: handleChange,\n          placeholder: \"e.g. 85\",\n          min: \"50\",\n          max: \"98\",\n          step: \"1\",\n          className: \"form-input\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"input-help\",\n          children: \"Enter the efficiency percentage (typically 60-95%)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 13\n      }, this), formData.knowsBoilerEfficiency === \"no\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"boilerAge\",\n          children: \"Boiler Age (years)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"boilerAge\",\n          name: \"boilerAge\",\n          value: formData.boilerAge,\n          onChange: handleChange,\n          placeholder: \"e.g. 10\",\n          min: \"0\",\n          max: \"50\",\n          step: \"1\",\n          className: \"form-input\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"input-help\",\n          children: \"We'll estimate the efficiency based on age\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"daytimeHomeHabits\",\n        children: \"What are your typical daytime home habits?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"daytimeHomeHabits\",\n        name: \"daytimeHomeHabits\",\n        value: formData.daytimeHomeHabits,\n        onChange: handleChange,\n        className: \"form-select\",\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select your daytime habits\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"mostly-home\",\n          children: \"Mostly at home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"half-day-home\",\n          children: \"At home half the day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"mostly-away\",\n          children: \"Mostly away from home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 7\n    }, this), activeHelpModal === 'boilerEfficiency' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"help-modal-overlay\",\n      onClick: closeHelpModal,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"help-modal\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"help-modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Boiler Efficiency Guide\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"close-btn\",\n            onClick: closeHelpModal,\n            \"aria-label\": \"Close\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"help-modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Boiler efficiency indicates how much of the fuel is converted into useful heat. Here's how to estimate efficiency based on your boiler's age:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"efficiency-guide\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"efficiency-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"New Boilers (0-5 years)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Efficiency: 92-95%\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 435,\n                  columnNumber: 22\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 435,\n                  columnNumber: 57\n                }, this), \"Since April 2018, all new boilers sold in the UK must be A-rated, meaning they are at least 92% efficient.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"efficiency-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"Modern Boilers (6-15 years)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Efficiency: 80-85%\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 441,\n                  columnNumber: 22\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 441,\n                  columnNumber: 57\n                }, this), \"Boilers around 15 years old might be in the 80-85% efficiency range.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"efficiency-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"Older Boilers (16-25 years)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Efficiency: 75-80%\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 447,\n                  columnNumber: 22\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 447,\n                  columnNumber: 57\n                }, this), \"Boilers aged around 20 years may be around 75% efficient.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"efficiency-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"Very Old Boilers (25+ years)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Efficiency: 60-70%\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 453,\n                  columnNumber: 22\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 453,\n                  columnNumber: 57\n                }, this), \"Boilers older than 25 years can be as low as 60-70% efficient and should be considered for replacement.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 453,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"help-tip\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Tip:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 20\n              }, this), \" Check your boiler's data plate or manual for the exact efficiency rating. If you're unsure about the age, select \\\"I don't know either\\\" and we'll use a standard estimate.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary\",\n        onClick: onBack,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: `btn btn-primary ${!isFormValid() ? 'disabled' : ''}`,\n        onClick: handleNext,\n        disabled: !isFormValid(),\n        children: \"Next: Solar Configuration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 261,\n    columnNumber: 5\n  }, this);\n};\n_s(EnergyDemand, \"iA1aSJoweJUiO3Mon3gTUgx+cjI=\");\n_c = EnergyDemand;\nexport default EnergyDemand;\nvar _c;\n$RefreshReg$(_c, \"EnergyDemand\");","map":{"version":3,"names":["React","useState","ElectricityUsageSection","HeatingSection","HotWaterSection","jsxDEV","_jsxDEV","EnergyDemand","data","onDataChange","onNext","onBack","_s","formData","setFormData","householdSize","knowsMonthlyUsage","monthlyElectricityUsage","january","february","march","april","may","june","july","august","september","october","november","december","knowsAnnualUsage","annualElectricityUsage","floorArea","heatingMethod","hotWaterMethod","daytimeHomeHabits","knowsMonthlyGasUsage","monthlyGasUsage","knowsAnnualGasUsage","annualGasUsage","heatPumpCOP","hotWaterHeatPumpCOP","knowsBoilerEfficiency","boilerEfficiency","boilerAge","activeHelpModal","setActiveHelpModal","needsGasUsage","usesBoiler","updateFormData","updates","prev","handleChange","e","name","value","target","openHelpModal","modalType","closeHelpModal","handleKnowsMonthlyUsageChange","handleKnowsAnnualUsageChange","handleMonthlyElectricityChange","month","updatedMonthlyUsage","handleAnnualElectricityChange","handleHeatingMethodChange","handleHotWaterMethodChange","handleKnowsMonthlyGasUsageChange","handleKnowsAnnualGasUsageChange","handleMonthlyGasChange","updatedMonthlyGasUsage","handleAnnualGasUsageChange","handleHeatPumpCOPChange","handleHotWaterHeatPumpCOPChange","handleNext","isFormValid","months","electricityValid","every","trim","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","placeholder","min","max","required","onKnowsMonthlyUsageChange","onKnowsAnnualUsageChange","onMonthlyElectricityChange","onAnnualElectricityChange","step","onHeatingMethodChange","onHeatPumpCOPChange","onHotWaterMethodChange","onHotWaterHeatPumpCOPChange","onKnowsMonthlyGasUsageChange","onKnowsAnnualGasUsageChange","onMonthlyGasChange","onAnnualGasUsageChange","onClick","stopPropagation","disabled","_c","$RefreshReg$"],"sources":["/Users/xuefei/Desktop/calculator00/calculator/renewableCalculator.ui/src/components/steps/EnergyDemand.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport ElectricityUsageSection from \"./energy-demand/ElectricityUsageSection\";\nimport HeatingSection from \"./energy-demand/HeatingSection\";\nimport HotWaterSection from \"./energy-demand/HotWaterSection\";\n\nconst EnergyDemand = ({ data, onDataChange, onNext, onBack }) => {\n  const [formData, setFormData] = useState({\n    householdSize: data.householdSize || \"\",\n    knowsMonthlyUsage: data.knowsMonthlyUsage || \"\",\n    monthlyElectricityUsage: data.monthlyElectricityUsage || {\n      january: \"\", february: \"\", march: \"\", april: \"\", may: \"\", june: \"\",\n      july: \"\", august: \"\", september: \"\", october: \"\", november: \"\", december: \"\"\n    },\n    knowsAnnualUsage: data.knowsAnnualUsage || \"\",\n    annualElectricityUsage: data.annualElectricityUsage || \"\",\n    floorArea: data.floorArea || \"\",\n    heatingMethod: data.heatingMethod || \"\",\n    hotWaterMethod: data.hotWaterMethod || \"\",\n    daytimeHomeHabits: data.daytimeHomeHabits || \"\",\n    knowsMonthlyGasUsage: data.knowsMonthlyGasUsage || \"\",\n    monthlyGasUsage: data.monthlyGasUsage || {\n      january: \"\", february: \"\", march: \"\", april: \"\", may: \"\", june: \"\",\n      july: \"\", august: \"\", september: \"\", october: \"\", november: \"\", december: \"\"\n    },\n    knowsAnnualGasUsage: data.knowsAnnualGasUsage || \"\",\n    annualGasUsage: data.annualGasUsage || \"\",\n    heatPumpCOP: data.heatPumpCOP || \"3.0\",\n    hotWaterHeatPumpCOP: data.hotWaterHeatPumpCOP || \"3.0\",\n    knowsBoilerEfficiency: data.knowsBoilerEfficiency || \"\",\n    boilerEfficiency: data.boilerEfficiency || \"\",\n    boilerAge: data.boilerAge || \"\",\n    ...data\n  });\n\n  // Help modal state\n  const [activeHelpModal, setActiveHelpModal] = useState(null);\n\n  // Helper function to check if gas is needed for either heating or hot water\n  const needsGasUsage = () => {\n    return formData.heatingMethod === \"gas boiler\" || formData.hotWaterMethod === \"gas boiler\";\n  };\n\n  // Helper function to check if any boiler is being used\n  const usesBoiler = () => {\n    return formData.heatingMethod === \"gas boiler\" || formData.hotWaterMethod === \"gas boiler\";\n  };\n\n  const updateFormData = (updates) => {\n    setFormData(prev => ({\n      ...prev,\n      ...updates\n    }));\n    onDataChange(updates);\n  };\n\n  // Basic form handlers\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    updateFormData({ [name]: value });\n  };\n\n  // Help modal handlers\n  const openHelpModal = (modalType) => {\n    setActiveHelpModal(modalType);\n  };\n\n  const closeHelpModal = () => {\n    setActiveHelpModal(null);\n  };\n\n  // Electricity usage handlers\n  const handleKnowsMonthlyUsageChange = (e) => {\n    const value = e.target.value;\n    let updates = { knowsMonthlyUsage: value };\n    \n    if (value === \"yes\") {\n      updates.knowsAnnualUsage = \"\";\n      updates.annualElectricityUsage = \"\";\n    } else if (value === \"no\") {\n      updates.monthlyElectricityUsage = {\n        january: \"\", february: \"\", march: \"\", april: \"\", may: \"\", june: \"\",\n        july: \"\", august: \"\", september: \"\", october: \"\", november: \"\", december: \"\"\n      };\n    }\n    updateFormData(updates);\n  };\n\n  const handleKnowsAnnualUsageChange = (e) => {\n    const value = e.target.value;\n    let updates = { knowsAnnualUsage: value };\n    \n    if (value === \"yes\") {\n      updates.monthlyElectricityUsage = {\n        january: \"\", february: \"\", march: \"\", april: \"\", may: \"\", june: \"\",\n        july: \"\", august: \"\", september: \"\", october: \"\", november: \"\", december: \"\"\n      };\n    }\n    updateFormData(updates);\n  };\n\n  const handleMonthlyElectricityChange = (month, value) => {\n    const updatedMonthlyUsage = {\n      ...formData.monthlyElectricityUsage,\n      [month]: value\n    };\n    updateFormData({ monthlyElectricityUsage: updatedMonthlyUsage });\n  };\n\n  const handleAnnualElectricityChange = (e) => {\n    updateFormData({ annualElectricityUsage: e.target.value });\n  };\n\n  // Heating method handlers\n  const handleHeatingMethodChange = (e) => {\n    const value = e.target.value;\n    let updates = { heatingMethod: value };\n    \n    // If neither heating nor hot water will need gas after this change, clear gas data\n    if (value !== \"gas boiler\" && formData.hotWaterMethod !== \"gas boiler\") {\n      updates = {\n        ...updates,\n        knowsMonthlyGasUsage: \"\",\n        monthlyGasUsage: {\n          january: \"\", february: \"\", march: \"\", april: \"\", may: \"\", june: \"\",\n          july: \"\", august: \"\", september: \"\", october: \"\", november: \"\", december: \"\"\n        },\n        knowsAnnualGasUsage: \"\",\n        annualGasUsage: \"\"\n      };\n    }\n    \n    if (value !== \"heat pumps\") {\n      updates.heatPumpCOP = \"3.0\";\n    }\n    updateFormData(updates);\n  };\n\n  // Hot water method handlers\n  const handleHotWaterMethodChange = (e) => {\n    const value = e.target.value;\n    let updates = { hotWaterMethod: value };\n    \n    // If neither heating nor hot water will need gas after this change, clear gas data\n    if (value !== \"gas boiler\" && formData.heatingMethod !== \"gas boiler\") {\n      updates = {\n        ...updates,\n        knowsMonthlyGasUsage: \"\",\n        monthlyGasUsage: {\n          january: \"\", february: \"\", march: \"\", april: \"\", may: \"\", june: \"\",\n          july: \"\", august: \"\", september: \"\", october: \"\", november: \"\", december: \"\"\n        },\n        knowsAnnualGasUsage: \"\",\n        annualGasUsage: \"\"\n      };\n    }\n    \n    if (value !== \"heat pumps\") {\n      updates.hotWaterHeatPumpCOP = \"3.0\";\n    }\n    updateFormData(updates);\n  };\n\n  const handleKnowsMonthlyGasUsageChange = (e) => {\n    const value = e.target.value;\n    let updates = { knowsMonthlyGasUsage: value };\n    \n    if (value === \"yes\") {\n      updates.knowsAnnualGasUsage = \"\";\n      updates.annualGasUsage = \"\";\n    } else if (value === \"no\") {\n      updates.monthlyGasUsage = {\n        january: \"\", february: \"\", march: \"\", april: \"\", may: \"\", june: \"\",\n        july: \"\", august: \"\", september: \"\", october: \"\", november: \"\", december: \"\"\n      };\n    }\n    updateFormData(updates);\n  };\n\n  const handleKnowsAnnualGasUsageChange = (e) => {\n    const value = e.target.value;\n    let updates = { knowsAnnualGasUsage: value };\n    \n    if (value === \"yes\") {\n      updates.monthlyGasUsage = {\n        january: \"\", february: \"\", march: \"\", april: \"\", may: \"\", june: \"\",\n        july: \"\", august: \"\", september: \"\", october: \"\", november: \"\", december: \"\"\n      };\n    }\n    updateFormData(updates);\n  };\n\n  const handleMonthlyGasChange = (month, value) => {\n    const updatedMonthlyGasUsage = {\n      ...formData.monthlyGasUsage,\n      [month]: value\n    };\n    updateFormData({ monthlyGasUsage: updatedMonthlyGasUsage });\n  };\n\n  const handleAnnualGasUsageChange = (e) => {\n    updateFormData({ annualGasUsage: e.target.value });\n  };\n\n  const handleHeatPumpCOPChange = (e) => {\n    updateFormData({ heatPumpCOP: e.target.value });\n  };\n\n  const handleHotWaterHeatPumpCOPChange = (e) => {\n    updateFormData({ hotWaterHeatPumpCOP: e.target.value });\n  };\n\n  const handleNext = () => {\n    onNext();\n  };\n\n  const isFormValid = () => {\n    if (!formData.householdSize || !formData.knowsMonthlyUsage || !formData.floorArea || !formData.heatingMethod || !formData.hotWaterMethod || !formData.daytimeHomeHabits) {\n      return false;\n    }\n    \n    // Validate electricity usage\n    if (formData.knowsMonthlyUsage === \"yes\") {\n      const months = [\"january\", \"february\", \"march\", \"april\", \"may\", \"june\", \n                     \"july\", \"august\", \"september\", \"october\", \"november\", \"december\"];\n      const electricityValid = months.every(month => formData.monthlyElectricityUsage[month] && \n                                   formData.monthlyElectricityUsage[month].trim() !== \"\");\n      if (!electricityValid) return false;\n    } else if (formData.knowsMonthlyUsage === \"no\") {\n      if (!formData.knowsAnnualUsage) {\n        return false;\n      }\n      if (formData.knowsAnnualUsage === \"yes\" && !formData.annualElectricityUsage) {\n        return false;\n      }\n    }\n    \n    // Validate gas usage if needed for either heating or hot water\n    if (needsGasUsage()) {\n      if (!formData.knowsMonthlyGasUsage) {\n        return false;\n      }\n      if (formData.knowsMonthlyGasUsage === \"yes\") {\n        const months = [\"january\", \"february\", \"march\", \"april\", \"may\", \"june\", \n                       \"july\", \"august\", \"september\", \"october\", \"november\", \"december\"];\n        return months.every(month => formData.monthlyGasUsage[month] && \n                                     formData.monthlyGasUsage[month].trim() !== \"\");\n      } else if (formData.knowsMonthlyGasUsage === \"no\") {\n        if (!formData.knowsAnnualGasUsage) {\n          return false;\n        }\n        if (formData.knowsAnnualGasUsage === \"yes\" && !formData.annualGasUsage) {\n          return false;\n        }\n      }\n    }\n    \n    return true;\n  };\n\n  return (\n    <div className=\"step-container\">\n      <div className=\"step-header\">\n        <h2>Energy Demand</h2>\n        <p>Tell us about your household's energy usage patterns to calculate accurate renewable energy recommendations.</p>\n      </div>\n\n      <div className=\"form-group\">\n        <label htmlFor=\"householdSize\">How many people live in your household regularly?</label>\n        <input\n          type=\"number\"\n          id=\"householdSize\"\n          name=\"householdSize\"\n          value={formData.householdSize}\n          onChange={handleChange}\n          placeholder=\"Enter number of people\"\n          min=\"1\"\n          max=\"20\"\n          className=\"form-input\"\n          required\n        />\n      </div>\n\n      <ElectricityUsageSection\n        formData={formData}\n        onKnowsMonthlyUsageChange={handleKnowsMonthlyUsageChange}\n        onKnowsAnnualUsageChange={handleKnowsAnnualUsageChange}\n        onMonthlyElectricityChange={handleMonthlyElectricityChange}\n        onAnnualElectricityChange={handleAnnualElectricityChange}\n      />\n\n      <div className=\"form-group\">\n        <label htmlFor=\"floorArea\">What is your approximate floor area? (m²)</label>\n        <input\n          type=\"number\"\n          id=\"floorArea\"\n          name=\"floorArea\"\n          value={formData.floorArea}\n          onChange={handleChange}\n          placeholder=\"Enter floor area in square metres\"\n          min=\"1\"\n          step=\"0.1\"\n          className=\"form-input\"\n          required\n        />\n      </div>\n\n      <HeatingSection\n        formData={formData}\n        onHeatingMethodChange={handleHeatingMethodChange}\n        onHeatPumpCOPChange={handleHeatPumpCOPChange}\n        needsGasUsage={needsGasUsage()}\n      />\n\n      <HotWaterSection\n        formData={formData}\n        onHotWaterMethodChange={handleHotWaterMethodChange}\n        onHotWaterHeatPumpCOPChange={handleHotWaterHeatPumpCOPChange}\n        needsGasUsage={needsGasUsage()}\n        onKnowsMonthlyGasUsageChange={handleKnowsMonthlyGasUsageChange}\n        onKnowsAnnualGasUsageChange={handleKnowsAnnualGasUsageChange}\n        onMonthlyGasChange={handleMonthlyGasChange}\n        onAnnualGasUsageChange={handleAnnualGasUsageChange}\n      />\n\n      {/* Boiler Efficiency Section */}\n      {usesBoiler() && (\n        <div className=\"boiler-efficiency-section\">\n          <div className=\"form-group\">\n            <div className=\"form-label-with-help\">\n              <label htmlFor=\"knowsBoilerEfficiency\">Do you know your boiler's efficiency?</label>\n              <button \n                type=\"button\"\n                className=\"field-help-btn\"\n                onClick={() => openHelpModal('boilerEfficiency')}\n                aria-label=\"Boiler Efficiency Help\"\n              >\n                ?\n              </button>\n            </div>\n            <select\n              id=\"knowsBoilerEfficiency\"\n              name=\"knowsBoilerEfficiency\"\n              value={formData.knowsBoilerEfficiency}\n              onChange={handleChange}\n              className=\"form-select\"\n              required\n            >\n              <option value=\"\">Select an option</option>\n              <option value=\"yes\">Yes, I know the efficiency percentage</option>\n              <option value=\"no\">No, but I know the boiler age</option>\n              <option value=\"unknown\">No, I don't know either</option>\n            </select>\n          </div>\n\n          {formData.knowsBoilerEfficiency === \"yes\" && (\n            <div className=\"form-group\">\n              <label htmlFor=\"boilerEfficiency\">Boiler Efficiency (%)</label>\n              <input\n                type=\"number\"\n                id=\"boilerEfficiency\"\n                name=\"boilerEfficiency\"\n                value={formData.boilerEfficiency}\n                onChange={handleChange}\n                placeholder=\"e.g. 85\"\n                min=\"50\"\n                max=\"98\"\n                step=\"1\"\n                className=\"form-input\"\n                required\n              />\n              <small className=\"input-help\">Enter the efficiency percentage (typically 60-95%)</small>\n            </div>\n          )}\n\n          {formData.knowsBoilerEfficiency === \"no\" && (\n            <div className=\"form-group\">\n              <label htmlFor=\"boilerAge\">Boiler Age (years)</label>\n              <input\n                type=\"number\"\n                id=\"boilerAge\"\n                name=\"boilerAge\"\n                value={formData.boilerAge}\n                onChange={handleChange}\n                placeholder=\"e.g. 10\"\n                min=\"0\"\n                max=\"50\"\n                step=\"1\"\n                className=\"form-input\"\n                required\n              />\n              <small className=\"input-help\">We'll estimate the efficiency based on age</small>\n            </div>\n          )}\n        </div>\n      )}\n\n      <div className=\"form-group\">\n        <label htmlFor=\"daytimeHomeHabits\">What are your typical daytime home habits?</label>\n        <select\n          id=\"daytimeHomeHabits\"\n          name=\"daytimeHomeHabits\"\n          value={formData.daytimeHomeHabits}\n          onChange={handleChange}\n          className=\"form-select\"\n          required\n        >\n          <option value=\"\">Select your daytime habits</option>\n          <option value=\"mostly-home\">Mostly at home</option>\n          <option value=\"half-day-home\">At home half the day</option>\n          <option value=\"mostly-away\">Mostly away from home</option>\n        </select>\n      </div>\n\n      {/* Help Modal */}\n      {activeHelpModal === 'boilerEfficiency' && (\n        <div className=\"help-modal-overlay\" onClick={closeHelpModal}>\n          <div className=\"help-modal\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"help-modal-header\">\n              <h4>Boiler Efficiency Guide</h4>\n              <button \n                type=\"button\"\n                className=\"close-btn\"\n                onClick={closeHelpModal}\n                aria-label=\"Close\"\n              >\n                ×\n              </button>\n            </div>\n            <div className=\"help-modal-content\">\n              <p>Boiler efficiency indicates how much of the fuel is converted into useful heat. Here's how to estimate efficiency based on your boiler's age:</p>\n              \n              <div className=\"efficiency-guide\">\n                <div className=\"efficiency-item\">\n                  <h5>New Boilers (0-5 years)</h5>\n                  <p><strong>Efficiency: 92-95%</strong><br />\n                  Since April 2018, all new boilers sold in the UK must be A-rated, meaning they are at least 92% efficient.</p>\n                </div>\n                \n                <div className=\"efficiency-item\">\n                  <h5>Modern Boilers (6-15 years)</h5>\n                  <p><strong>Efficiency: 80-85%</strong><br />\n                  Boilers around 15 years old might be in the 80-85% efficiency range.</p>\n                </div>\n                \n                <div className=\"efficiency-item\">\n                  <h5>Older Boilers (16-25 years)</h5>\n                  <p><strong>Efficiency: 75-80%</strong><br />\n                  Boilers aged around 20 years may be around 75% efficient.</p>\n                </div>\n                \n                <div className=\"efficiency-item\">\n                  <h5>Very Old Boilers (25+ years)</h5>\n                  <p><strong>Efficiency: 60-70%</strong><br />\n                  Boilers older than 25 years can be as low as 60-70% efficient and should be considered for replacement.</p>\n                </div>\n              </div>\n              \n              <div className=\"help-tip\">\n                <p><strong>Tip:</strong> Check your boiler's data plate or manual for the exact efficiency rating. If you're unsure about the age, select \"I don't know either\" and we'll use a standard estimate.</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <div className=\"button-group\">\n        <button \n          type=\"button\" \n          className=\"btn btn-secondary\"\n          onClick={onBack}\n        >\n          Back\n        </button>\n        <button \n          type=\"button\" \n          className={`btn btn-primary ${!isFormValid() ? 'disabled' : ''}`}\n          onClick={handleNext}\n          disabled={!isFormValid()}\n        >\n          Next: Solar Configuration\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default EnergyDemand; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,uBAAuB,MAAM,yCAAyC;AAC7E,OAAOC,cAAc,MAAM,gCAAgC;AAC3D,OAAOC,eAAe,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,MAAMC,YAAY,GAAGA,CAAC;EAAEC,IAAI;EAAEC,YAAY;EAAEC,MAAM;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC/D,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC;IACvCc,aAAa,EAAEP,IAAI,CAACO,aAAa,IAAI,EAAE;IACvCC,iBAAiB,EAAER,IAAI,CAACQ,iBAAiB,IAAI,EAAE;IAC/CC,uBAAuB,EAAET,IAAI,CAACS,uBAAuB,IAAI;MACvDC,OAAO,EAAE,EAAE;MAAEC,QAAQ,EAAE,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,GAAG,EAAE,EAAE;MAAEC,IAAI,EAAE,EAAE;MAClEC,IAAI,EAAE,EAAE;MAAEC,MAAM,EAAE,EAAE;MAAEC,SAAS,EAAE,EAAE;MAAEC,OAAO,EAAE,EAAE;MAAEC,QAAQ,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAC5E,CAAC;IACDC,gBAAgB,EAAEtB,IAAI,CAACsB,gBAAgB,IAAI,EAAE;IAC7CC,sBAAsB,EAAEvB,IAAI,CAACuB,sBAAsB,IAAI,EAAE;IACzDC,SAAS,EAAExB,IAAI,CAACwB,SAAS,IAAI,EAAE;IAC/BC,aAAa,EAAEzB,IAAI,CAACyB,aAAa,IAAI,EAAE;IACvCC,cAAc,EAAE1B,IAAI,CAAC0B,cAAc,IAAI,EAAE;IACzCC,iBAAiB,EAAE3B,IAAI,CAAC2B,iBAAiB,IAAI,EAAE;IAC/CC,oBAAoB,EAAE5B,IAAI,CAAC4B,oBAAoB,IAAI,EAAE;IACrDC,eAAe,EAAE7B,IAAI,CAAC6B,eAAe,IAAI;MACvCnB,OAAO,EAAE,EAAE;MAAEC,QAAQ,EAAE,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,GAAG,EAAE,EAAE;MAAEC,IAAI,EAAE,EAAE;MAClEC,IAAI,EAAE,EAAE;MAAEC,MAAM,EAAE,EAAE;MAAEC,SAAS,EAAE,EAAE;MAAEC,OAAO,EAAE,EAAE;MAAEC,QAAQ,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAC5E,CAAC;IACDS,mBAAmB,EAAE9B,IAAI,CAAC8B,mBAAmB,IAAI,EAAE;IACnDC,cAAc,EAAE/B,IAAI,CAAC+B,cAAc,IAAI,EAAE;IACzCC,WAAW,EAAEhC,IAAI,CAACgC,WAAW,IAAI,KAAK;IACtCC,mBAAmB,EAAEjC,IAAI,CAACiC,mBAAmB,IAAI,KAAK;IACtDC,qBAAqB,EAAElC,IAAI,CAACkC,qBAAqB,IAAI,EAAE;IACvDC,gBAAgB,EAAEnC,IAAI,CAACmC,gBAAgB,IAAI,EAAE;IAC7CC,SAAS,EAAEpC,IAAI,CAACoC,SAAS,IAAI,EAAE;IAC/B,GAAGpC;EACL,CAAC,CAAC;;EAEF;EACA,MAAM,CAACqC,eAAe,EAAEC,kBAAkB,CAAC,GAAG7C,QAAQ,CAAC,IAAI,CAAC;;EAE5D;EACA,MAAM8C,aAAa,GAAGA,CAAA,KAAM;IAC1B,OAAOlC,QAAQ,CAACoB,aAAa,KAAK,YAAY,IAAIpB,QAAQ,CAACqB,cAAc,KAAK,YAAY;EAC5F,CAAC;;EAED;EACA,MAAMc,UAAU,GAAGA,CAAA,KAAM;IACvB,OAAOnC,QAAQ,CAACoB,aAAa,KAAK,YAAY,IAAIpB,QAAQ,CAACqB,cAAc,KAAK,YAAY;EAC5F,CAAC;EAED,MAAMe,cAAc,GAAIC,OAAO,IAAK;IAClCpC,WAAW,CAACqC,IAAI,KAAK;MACnB,GAAGA,IAAI;MACP,GAAGD;IACL,CAAC,CAAC,CAAC;IACHzC,YAAY,CAACyC,OAAO,CAAC;EACvB,CAAC;;EAED;EACA,MAAME,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCP,cAAc,CAAC;MAAE,CAACK,IAAI,GAAGC;IAAM,CAAC,CAAC;EACnC,CAAC;;EAED;EACA,MAAME,aAAa,GAAIC,SAAS,IAAK;IACnCZ,kBAAkB,CAACY,SAAS,CAAC;EAC/B,CAAC;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3Bb,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;;EAED;EACA,MAAMc,6BAA6B,GAAIP,CAAC,IAAK;IAC3C,MAAME,KAAK,GAAGF,CAAC,CAACG,MAAM,CAACD,KAAK;IAC5B,IAAIL,OAAO,GAAG;MAAElC,iBAAiB,EAAEuC;IAAM,CAAC;IAE1C,IAAIA,KAAK,KAAK,KAAK,EAAE;MACnBL,OAAO,CAACpB,gBAAgB,GAAG,EAAE;MAC7BoB,OAAO,CAACnB,sBAAsB,GAAG,EAAE;IACrC,CAAC,MAAM,IAAIwB,KAAK,KAAK,IAAI,EAAE;MACzBL,OAAO,CAACjC,uBAAuB,GAAG;QAChCC,OAAO,EAAE,EAAE;QAAEC,QAAQ,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,GAAG,EAAE,EAAE;QAAEC,IAAI,EAAE,EAAE;QAClEC,IAAI,EAAE,EAAE;QAAEC,MAAM,EAAE,EAAE;QAAEC,SAAS,EAAE,EAAE;QAAEC,OAAO,EAAE,EAAE;QAAEC,QAAQ,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAC5E,CAAC;IACH;IACAoB,cAAc,CAACC,OAAO,CAAC;EACzB,CAAC;EAED,MAAMW,4BAA4B,GAAIR,CAAC,IAAK;IAC1C,MAAME,KAAK,GAAGF,CAAC,CAACG,MAAM,CAACD,KAAK;IAC5B,IAAIL,OAAO,GAAG;MAAEpB,gBAAgB,EAAEyB;IAAM,CAAC;IAEzC,IAAIA,KAAK,KAAK,KAAK,EAAE;MACnBL,OAAO,CAACjC,uBAAuB,GAAG;QAChCC,OAAO,EAAE,EAAE;QAAEC,QAAQ,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,GAAG,EAAE,EAAE;QAAEC,IAAI,EAAE,EAAE;QAClEC,IAAI,EAAE,EAAE;QAAEC,MAAM,EAAE,EAAE;QAAEC,SAAS,EAAE,EAAE;QAAEC,OAAO,EAAE,EAAE;QAAEC,QAAQ,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAC5E,CAAC;IACH;IACAoB,cAAc,CAACC,OAAO,CAAC;EACzB,CAAC;EAED,MAAMY,8BAA8B,GAAGA,CAACC,KAAK,EAAER,KAAK,KAAK;IACvD,MAAMS,mBAAmB,GAAG;MAC1B,GAAGnD,QAAQ,CAACI,uBAAuB;MACnC,CAAC8C,KAAK,GAAGR;IACX,CAAC;IACDN,cAAc,CAAC;MAAEhC,uBAAuB,EAAE+C;IAAoB,CAAC,CAAC;EAClE,CAAC;EAED,MAAMC,6BAA6B,GAAIZ,CAAC,IAAK;IAC3CJ,cAAc,CAAC;MAAElB,sBAAsB,EAAEsB,CAAC,CAACG,MAAM,CAACD;IAAM,CAAC,CAAC;EAC5D,CAAC;;EAED;EACA,MAAMW,yBAAyB,GAAIb,CAAC,IAAK;IACvC,MAAME,KAAK,GAAGF,CAAC,CAACG,MAAM,CAACD,KAAK;IAC5B,IAAIL,OAAO,GAAG;MAAEjB,aAAa,EAAEsB;IAAM,CAAC;;IAEtC;IACA,IAAIA,KAAK,KAAK,YAAY,IAAI1C,QAAQ,CAACqB,cAAc,KAAK,YAAY,EAAE;MACtEgB,OAAO,GAAG;QACR,GAAGA,OAAO;QACVd,oBAAoB,EAAE,EAAE;QACxBC,eAAe,EAAE;UACfnB,OAAO,EAAE,EAAE;UAAEC,QAAQ,EAAE,EAAE;UAAEC,KAAK,EAAE,EAAE;UAAEC,KAAK,EAAE,EAAE;UAAEC,GAAG,EAAE,EAAE;UAAEC,IAAI,EAAE,EAAE;UAClEC,IAAI,EAAE,EAAE;UAAEC,MAAM,EAAE,EAAE;UAAEC,SAAS,EAAE,EAAE;UAAEC,OAAO,EAAE,EAAE;UAAEC,QAAQ,EAAE,EAAE;UAAEC,QAAQ,EAAE;QAC5E,CAAC;QACDS,mBAAmB,EAAE,EAAE;QACvBC,cAAc,EAAE;MAClB,CAAC;IACH;IAEA,IAAIgB,KAAK,KAAK,YAAY,EAAE;MAC1BL,OAAO,CAACV,WAAW,GAAG,KAAK;IAC7B;IACAS,cAAc,CAACC,OAAO,CAAC;EACzB,CAAC;;EAED;EACA,MAAMiB,0BAA0B,GAAId,CAAC,IAAK;IACxC,MAAME,KAAK,GAAGF,CAAC,CAACG,MAAM,CAACD,KAAK;IAC5B,IAAIL,OAAO,GAAG;MAAEhB,cAAc,EAAEqB;IAAM,CAAC;;IAEvC;IACA,IAAIA,KAAK,KAAK,YAAY,IAAI1C,QAAQ,CAACoB,aAAa,KAAK,YAAY,EAAE;MACrEiB,OAAO,GAAG;QACR,GAAGA,OAAO;QACVd,oBAAoB,EAAE,EAAE;QACxBC,eAAe,EAAE;UACfnB,OAAO,EAAE,EAAE;UAAEC,QAAQ,EAAE,EAAE;UAAEC,KAAK,EAAE,EAAE;UAAEC,KAAK,EAAE,EAAE;UAAEC,GAAG,EAAE,EAAE;UAAEC,IAAI,EAAE,EAAE;UAClEC,IAAI,EAAE,EAAE;UAAEC,MAAM,EAAE,EAAE;UAAEC,SAAS,EAAE,EAAE;UAAEC,OAAO,EAAE,EAAE;UAAEC,QAAQ,EAAE,EAAE;UAAEC,QAAQ,EAAE;QAC5E,CAAC;QACDS,mBAAmB,EAAE,EAAE;QACvBC,cAAc,EAAE;MAClB,CAAC;IACH;IAEA,IAAIgB,KAAK,KAAK,YAAY,EAAE;MAC1BL,OAAO,CAACT,mBAAmB,GAAG,KAAK;IACrC;IACAQ,cAAc,CAACC,OAAO,CAAC;EACzB,CAAC;EAED,MAAMkB,gCAAgC,GAAIf,CAAC,IAAK;IAC9C,MAAME,KAAK,GAAGF,CAAC,CAACG,MAAM,CAACD,KAAK;IAC5B,IAAIL,OAAO,GAAG;MAAEd,oBAAoB,EAAEmB;IAAM,CAAC;IAE7C,IAAIA,KAAK,KAAK,KAAK,EAAE;MACnBL,OAAO,CAACZ,mBAAmB,GAAG,EAAE;MAChCY,OAAO,CAACX,cAAc,GAAG,EAAE;IAC7B,CAAC,MAAM,IAAIgB,KAAK,KAAK,IAAI,EAAE;MACzBL,OAAO,CAACb,eAAe,GAAG;QACxBnB,OAAO,EAAE,EAAE;QAAEC,QAAQ,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,GAAG,EAAE,EAAE;QAAEC,IAAI,EAAE,EAAE;QAClEC,IAAI,EAAE,EAAE;QAAEC,MAAM,EAAE,EAAE;QAAEC,SAAS,EAAE,EAAE;QAAEC,OAAO,EAAE,EAAE;QAAEC,QAAQ,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAC5E,CAAC;IACH;IACAoB,cAAc,CAACC,OAAO,CAAC;EACzB,CAAC;EAED,MAAMmB,+BAA+B,GAAIhB,CAAC,IAAK;IAC7C,MAAME,KAAK,GAAGF,CAAC,CAACG,MAAM,CAACD,KAAK;IAC5B,IAAIL,OAAO,GAAG;MAAEZ,mBAAmB,EAAEiB;IAAM,CAAC;IAE5C,IAAIA,KAAK,KAAK,KAAK,EAAE;MACnBL,OAAO,CAACb,eAAe,GAAG;QACxBnB,OAAO,EAAE,EAAE;QAAEC,QAAQ,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,GAAG,EAAE,EAAE;QAAEC,IAAI,EAAE,EAAE;QAClEC,IAAI,EAAE,EAAE;QAAEC,MAAM,EAAE,EAAE;QAAEC,SAAS,EAAE,EAAE;QAAEC,OAAO,EAAE,EAAE;QAAEC,QAAQ,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAC5E,CAAC;IACH;IACAoB,cAAc,CAACC,OAAO,CAAC;EACzB,CAAC;EAED,MAAMoB,sBAAsB,GAAGA,CAACP,KAAK,EAAER,KAAK,KAAK;IAC/C,MAAMgB,sBAAsB,GAAG;MAC7B,GAAG1D,QAAQ,CAACwB,eAAe;MAC3B,CAAC0B,KAAK,GAAGR;IACX,CAAC;IACDN,cAAc,CAAC;MAAEZ,eAAe,EAAEkC;IAAuB,CAAC,CAAC;EAC7D,CAAC;EAED,MAAMC,0BAA0B,GAAInB,CAAC,IAAK;IACxCJ,cAAc,CAAC;MAAEV,cAAc,EAAEc,CAAC,CAACG,MAAM,CAACD;IAAM,CAAC,CAAC;EACpD,CAAC;EAED,MAAMkB,uBAAuB,GAAIpB,CAAC,IAAK;IACrCJ,cAAc,CAAC;MAAET,WAAW,EAAEa,CAAC,CAACG,MAAM,CAACD;IAAM,CAAC,CAAC;EACjD,CAAC;EAED,MAAMmB,+BAA+B,GAAIrB,CAAC,IAAK;IAC7CJ,cAAc,CAAC;MAAER,mBAAmB,EAAEY,CAAC,CAACG,MAAM,CAACD;IAAM,CAAC,CAAC;EACzD,CAAC;EAED,MAAMoB,UAAU,GAAGA,CAAA,KAAM;IACvBjE,MAAM,CAAC,CAAC;EACV,CAAC;EAED,MAAMkE,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAI,CAAC/D,QAAQ,CAACE,aAAa,IAAI,CAACF,QAAQ,CAACG,iBAAiB,IAAI,CAACH,QAAQ,CAACmB,SAAS,IAAI,CAACnB,QAAQ,CAACoB,aAAa,IAAI,CAACpB,QAAQ,CAACqB,cAAc,IAAI,CAACrB,QAAQ,CAACsB,iBAAiB,EAAE;MACvK,OAAO,KAAK;IACd;;IAEA;IACA,IAAItB,QAAQ,CAACG,iBAAiB,KAAK,KAAK,EAAE;MACxC,MAAM6D,MAAM,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EACvD,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CAAC;MAChF,MAAMC,gBAAgB,GAAGD,MAAM,CAACE,KAAK,CAAChB,KAAK,IAAIlD,QAAQ,CAACI,uBAAuB,CAAC8C,KAAK,CAAC,IACzDlD,QAAQ,CAACI,uBAAuB,CAAC8C,KAAK,CAAC,CAACiB,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC;MACnF,IAAI,CAACF,gBAAgB,EAAE,OAAO,KAAK;IACrC,CAAC,MAAM,IAAIjE,QAAQ,CAACG,iBAAiB,KAAK,IAAI,EAAE;MAC9C,IAAI,CAACH,QAAQ,CAACiB,gBAAgB,EAAE;QAC9B,OAAO,KAAK;MACd;MACA,IAAIjB,QAAQ,CAACiB,gBAAgB,KAAK,KAAK,IAAI,CAACjB,QAAQ,CAACkB,sBAAsB,EAAE;QAC3E,OAAO,KAAK;MACd;IACF;;IAEA;IACA,IAAIgB,aAAa,CAAC,CAAC,EAAE;MACnB,IAAI,CAAClC,QAAQ,CAACuB,oBAAoB,EAAE;QAClC,OAAO,KAAK;MACd;MACA,IAAIvB,QAAQ,CAACuB,oBAAoB,KAAK,KAAK,EAAE;QAC3C,MAAMyC,MAAM,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EACvD,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CAAC;QAChF,OAAOA,MAAM,CAACE,KAAK,CAAChB,KAAK,IAAIlD,QAAQ,CAACwB,eAAe,CAAC0B,KAAK,CAAC,IAC/BlD,QAAQ,CAACwB,eAAe,CAAC0B,KAAK,CAAC,CAACiB,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC;MAC7E,CAAC,MAAM,IAAInE,QAAQ,CAACuB,oBAAoB,KAAK,IAAI,EAAE;QACjD,IAAI,CAACvB,QAAQ,CAACyB,mBAAmB,EAAE;UACjC,OAAO,KAAK;QACd;QACA,IAAIzB,QAAQ,CAACyB,mBAAmB,KAAK,KAAK,IAAI,CAACzB,QAAQ,CAAC0B,cAAc,EAAE;UACtE,OAAO,KAAK;QACd;MACF;IACF;IAEA,OAAO,IAAI;EACb,CAAC;EAED,oBACEjC,OAAA;IAAK2E,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7B5E,OAAA;MAAK2E,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1B5E,OAAA;QAAA4E,QAAA,EAAI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtBhF,OAAA;QAAA4E,QAAA,EAAG;MAA4G;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChH,CAAC,eAENhF,OAAA;MAAK2E,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzB5E,OAAA;QAAOiF,OAAO,EAAC,eAAe;QAAAL,QAAA,EAAC;MAAiD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACxFhF,OAAA;QACEkF,IAAI,EAAC,QAAQ;QACbC,EAAE,EAAC,eAAe;QAClBnC,IAAI,EAAC,eAAe;QACpBC,KAAK,EAAE1C,QAAQ,CAACE,aAAc;QAC9B2E,QAAQ,EAAEtC,YAAa;QACvBuC,WAAW,EAAC,wBAAwB;QACpCC,GAAG,EAAC,GAAG;QACPC,GAAG,EAAC,IAAI;QACRZ,SAAS,EAAC,YAAY;QACtBa,QAAQ;MAAA;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENhF,OAAA,CAACJ,uBAAuB;MACtBW,QAAQ,EAAEA,QAAS;MACnBkF,yBAAyB,EAAEnC,6BAA8B;MACzDoC,wBAAwB,EAAEnC,4BAA6B;MACvDoC,0BAA0B,EAAEnC,8BAA+B;MAC3DoC,yBAAyB,EAAEjC;IAA8B;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D,CAAC,eAEFhF,OAAA;MAAK2E,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzB5E,OAAA;QAAOiF,OAAO,EAAC,WAAW;QAAAL,QAAA,EAAC;MAAyC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC5EhF,OAAA;QACEkF,IAAI,EAAC,QAAQ;QACbC,EAAE,EAAC,WAAW;QACdnC,IAAI,EAAC,WAAW;QAChBC,KAAK,EAAE1C,QAAQ,CAACmB,SAAU;QAC1B0D,QAAQ,EAAEtC,YAAa;QACvBuC,WAAW,EAAC,mCAAmC;QAC/CC,GAAG,EAAC,GAAG;QACPO,IAAI,EAAC,KAAK;QACVlB,SAAS,EAAC,YAAY;QACtBa,QAAQ;MAAA;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENhF,OAAA,CAACH,cAAc;MACbU,QAAQ,EAAEA,QAAS;MACnBuF,qBAAqB,EAAElC,yBAA0B;MACjDmC,mBAAmB,EAAE5B,uBAAwB;MAC7C1B,aAAa,EAAEA,aAAa,CAAC;IAAE;MAAAoC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eAEFhF,OAAA,CAACF,eAAe;MACdS,QAAQ,EAAEA,QAAS;MACnByF,sBAAsB,EAAEnC,0BAA2B;MACnDoC,2BAA2B,EAAE7B,+BAAgC;MAC7D3B,aAAa,EAAEA,aAAa,CAAC,CAAE;MAC/ByD,4BAA4B,EAAEpC,gCAAiC;MAC/DqC,2BAA2B,EAAEpC,+BAAgC;MAC7DqC,kBAAkB,EAAEpC,sBAAuB;MAC3CqC,sBAAsB,EAAEnC;IAA2B;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC,EAGDtC,UAAU,CAAC,CAAC,iBACX1C,OAAA;MAAK2E,SAAS,EAAC,2BAA2B;MAAAC,QAAA,gBACxC5E,OAAA;QAAK2E,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzB5E,OAAA;UAAK2E,SAAS,EAAC,sBAAsB;UAAAC,QAAA,gBACnC5E,OAAA;YAAOiF,OAAO,EAAC,uBAAuB;YAAAL,QAAA,EAAC;UAAqC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACpFhF,OAAA;YACEkF,IAAI,EAAC,QAAQ;YACbP,SAAS,EAAC,gBAAgB;YAC1B2B,OAAO,EAAEA,CAAA,KAAMnD,aAAa,CAAC,kBAAkB,CAAE;YACjD,cAAW,wBAAwB;YAAAyB,QAAA,EACpC;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACNhF,OAAA;UACEmF,EAAE,EAAC,uBAAuB;UAC1BnC,IAAI,EAAC,uBAAuB;UAC5BC,KAAK,EAAE1C,QAAQ,CAAC6B,qBAAsB;UACtCgD,QAAQ,EAAEtC,YAAa;UACvB6B,SAAS,EAAC,aAAa;UACvBa,QAAQ;UAAAZ,QAAA,gBAER5E,OAAA;YAAQiD,KAAK,EAAC,EAAE;YAAA2B,QAAA,EAAC;UAAgB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC1ChF,OAAA;YAAQiD,KAAK,EAAC,KAAK;YAAA2B,QAAA,EAAC;UAAqC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAClEhF,OAAA;YAAQiD,KAAK,EAAC,IAAI;YAAA2B,QAAA,EAAC;UAA6B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACzDhF,OAAA;YAAQiD,KAAK,EAAC,SAAS;YAAA2B,QAAA,EAAC;UAAuB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,EAELzE,QAAQ,CAAC6B,qBAAqB,KAAK,KAAK,iBACvCpC,OAAA;QAAK2E,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzB5E,OAAA;UAAOiF,OAAO,EAAC,kBAAkB;UAAAL,QAAA,EAAC;QAAqB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC/DhF,OAAA;UACEkF,IAAI,EAAC,QAAQ;UACbC,EAAE,EAAC,kBAAkB;UACrBnC,IAAI,EAAC,kBAAkB;UACvBC,KAAK,EAAE1C,QAAQ,CAAC8B,gBAAiB;UACjC+C,QAAQ,EAAEtC,YAAa;UACvBuC,WAAW,EAAC,SAAS;UACrBC,GAAG,EAAC,IAAI;UACRC,GAAG,EAAC,IAAI;UACRM,IAAI,EAAC,GAAG;UACRlB,SAAS,EAAC,YAAY;UACtBa,QAAQ;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACFhF,OAAA;UAAO2E,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAC;QAAkD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrF,CACN,EAEAzE,QAAQ,CAAC6B,qBAAqB,KAAK,IAAI,iBACtCpC,OAAA;QAAK2E,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzB5E,OAAA;UAAOiF,OAAO,EAAC,WAAW;UAAAL,QAAA,EAAC;QAAkB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACrDhF,OAAA;UACEkF,IAAI,EAAC,QAAQ;UACbC,EAAE,EAAC,WAAW;UACdnC,IAAI,EAAC,WAAW;UAChBC,KAAK,EAAE1C,QAAQ,CAAC+B,SAAU;UAC1B8C,QAAQ,EAAEtC,YAAa;UACvBuC,WAAW,EAAC,SAAS;UACrBC,GAAG,EAAC,GAAG;UACPC,GAAG,EAAC,IAAI;UACRM,IAAI,EAAC,GAAG;UACRlB,SAAS,EAAC,YAAY;UACtBa,QAAQ;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACFhF,OAAA;UAAO2E,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAC;QAA0C;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7E,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACN,eAEDhF,OAAA;MAAK2E,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzB5E,OAAA;QAAOiF,OAAO,EAAC,mBAAmB;QAAAL,QAAA,EAAC;MAA0C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACrFhF,OAAA;QACEmF,EAAE,EAAC,mBAAmB;QACtBnC,IAAI,EAAC,mBAAmB;QACxBC,KAAK,EAAE1C,QAAQ,CAACsB,iBAAkB;QAClCuD,QAAQ,EAAEtC,YAAa;QACvB6B,SAAS,EAAC,aAAa;QACvBa,QAAQ;QAAAZ,QAAA,gBAER5E,OAAA;UAAQiD,KAAK,EAAC,EAAE;UAAA2B,QAAA,EAAC;QAA0B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACpDhF,OAAA;UAAQiD,KAAK,EAAC,aAAa;UAAA2B,QAAA,EAAC;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACnDhF,OAAA;UAAQiD,KAAK,EAAC,eAAe;UAAA2B,QAAA,EAAC;QAAoB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC3DhF,OAAA;UAAQiD,KAAK,EAAC,aAAa;UAAA2B,QAAA,EAAC;QAAqB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAGLzC,eAAe,KAAK,kBAAkB,iBACrCvC,OAAA;MAAK2E,SAAS,EAAC,oBAAoB;MAAC2B,OAAO,EAAEjD,cAAe;MAAAuB,QAAA,eAC1D5E,OAAA;QAAK2E,SAAS,EAAC,YAAY;QAAC2B,OAAO,EAAGvD,CAAC,IAAKA,CAAC,CAACwD,eAAe,CAAC,CAAE;QAAA3B,QAAA,gBAC9D5E,OAAA;UAAK2E,SAAS,EAAC,mBAAmB;UAAAC,QAAA,gBAChC5E,OAAA;YAAA4E,QAAA,EAAI;UAAuB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAChChF,OAAA;YACEkF,IAAI,EAAC,QAAQ;YACbP,SAAS,EAAC,WAAW;YACrB2B,OAAO,EAAEjD,cAAe;YACxB,cAAW,OAAO;YAAAuB,QAAA,EACnB;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACNhF,OAAA;UAAK2E,SAAS,EAAC,oBAAoB;UAAAC,QAAA,gBACjC5E,OAAA;YAAA4E,QAAA,EAAG;UAA6I;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eAEpJhF,OAAA;YAAK2E,SAAS,EAAC,kBAAkB;YAAAC,QAAA,gBAC/B5E,OAAA;cAAK2E,SAAS,EAAC,iBAAiB;cAAAC,QAAA,gBAC9B5E,OAAA;gBAAA4E,QAAA,EAAI;cAAuB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAChChF,OAAA;gBAAA4E,QAAA,gBAAG5E,OAAA;kBAAA4E,QAAA,EAAQ;gBAAkB;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eAAAhF,OAAA;kBAAA6E,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,8GAC8D;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3G,CAAC,eAENhF,OAAA;cAAK2E,SAAS,EAAC,iBAAiB;cAAAC,QAAA,gBAC9B5E,OAAA;gBAAA4E,QAAA,EAAI;cAA2B;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACpChF,OAAA;gBAAA4E,QAAA,gBAAG5E,OAAA;kBAAA4E,QAAA,EAAQ;gBAAkB;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eAAAhF,OAAA;kBAAA6E,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,wEACwB;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrE,CAAC,eAENhF,OAAA;cAAK2E,SAAS,EAAC,iBAAiB;cAAAC,QAAA,gBAC9B5E,OAAA;gBAAA4E,QAAA,EAAI;cAA2B;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACpChF,OAAA;gBAAA4E,QAAA,gBAAG5E,OAAA;kBAAA4E,QAAA,EAAQ;gBAAkB;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eAAAhF,OAAA;kBAAA6E,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,6DACa;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1D,CAAC,eAENhF,OAAA;cAAK2E,SAAS,EAAC,iBAAiB;cAAAC,QAAA,gBAC9B5E,OAAA;gBAAA4E,QAAA,EAAI;cAA4B;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACrChF,OAAA;gBAAA4E,QAAA,gBAAG5E,OAAA;kBAAA4E,QAAA,EAAQ;gBAAkB;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eAAAhF,OAAA;kBAAA6E,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,2GAC2D;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAENhF,OAAA;YAAK2E,SAAS,EAAC,UAAU;YAAAC,QAAA,eACvB5E,OAAA;cAAA4E,QAAA,gBAAG5E,OAAA;gBAAA4E,QAAA,EAAQ;cAAI;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,gLAA0K;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,eAEDhF,OAAA;MAAK2E,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3B5E,OAAA;QACEkF,IAAI,EAAC,QAAQ;QACbP,SAAS,EAAC,mBAAmB;QAC7B2B,OAAO,EAAEjG,MAAO;QAAAuE,QAAA,EACjB;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACThF,OAAA;QACEkF,IAAI,EAAC,QAAQ;QACbP,SAAS,EAAE,mBAAmB,CAACL,WAAW,CAAC,CAAC,GAAG,UAAU,GAAG,EAAE,EAAG;QACjEgC,OAAO,EAAEjC,UAAW;QACpBmC,QAAQ,EAAE,CAAClC,WAAW,CAAC,CAAE;QAAAM,QAAA,EAC1B;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC1E,EAAA,CA/dIL,YAAY;AAAAwG,EAAA,GAAZxG,YAAY;AAielB,eAAeA,YAAY;AAAC,IAAAwG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}