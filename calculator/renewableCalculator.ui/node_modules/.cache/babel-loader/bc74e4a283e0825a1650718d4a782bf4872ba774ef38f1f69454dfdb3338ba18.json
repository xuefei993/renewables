{"ast":null,"code":"import _objectSpread from\"/Users/xuefei/Desktop/calculator00/calculator/renewableCalculator.ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React from'react';import{getOrientationLabel}from'./roofLabelUtils';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const RoofSelectionList=_ref=>{let{addedRoofs,onRoofsUpdate}=_ref;if(addedRoofs.length===0)return null;// Function to get solar potential rating based on percentage\nconst getSolarPotentialRating=percentage=>{if(percentage>95){return{rating:'Excellent',className:'excellent'};}else if(percentage>=90){return{rating:'Very Good',className:'very-good'};}else if(percentage>=80){return{rating:'Good',className:'good'};}else if(percentage>=60){return{rating:'Medium',className:'medium'};}else{return{rating:'Poor',className:'poor'};}};const handleRoofSelectionChange=(roofId,selected)=>{const updatedRoofs=addedRoofs.map(roof=>roof.id===roofId?_objectSpread(_objectSpread({},roof),{},{selected}):roof);onRoofsUpdate(updatedRoofs);};return/*#__PURE__*/_jsxs(\"div\",{className:\"roof-selection-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Select Roofs for Solar Installation\"}),/*#__PURE__*/_jsx(\"p\",{className:\"selection-instruction\",children:\"Choose which roofs you want to install solar panels on. You can select multiple roofs or change your selection anytime.\"}),/*#__PURE__*/_jsx(\"div\",{className:\"roofs-selection-grid\",children:addedRoofs.map(roof=>{const rating=getSolarPotentialRating(roof.solarPotential);return/*#__PURE__*/_jsxs(\"div\",{className:\"roof-selection-card \".concat(roof.selected?'selected':''),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"roof-selection-header\",children:[/*#__PURE__*/_jsxs(\"h5\",{children:[\"Roof \",roof.id]}),/*#__PURE__*/_jsxs(\"label\",{className:\"selection-checkbox\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:roof.selected,onChange:e=>handleRoofSelectionChange(roof.id,e.target.checked)}),/*#__PURE__*/_jsx(\"span\",{className:\"checkmark\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"roof-selection-summary\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"summary-text\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"roof-basic-info\",children:[roof.area.toFixed(0),\" m\\xB2 \\u2022 \",getOrientationLabel(roof.orientation)]}),/*#__PURE__*/_jsxs(\"div\",{className:\"solar-potential-info\",children:[\"Solar Potential: \",roof.solarPotential.toFixed(1),\"%\",/*#__PURE__*/_jsx(\"span\",{className:\"rating-badge-small \".concat(rating.className),children:rating.rating})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"solar-panel-info\",children:[\"Estimated fits for \",roof.solarPanelCount||0,\" panels\"]})]})})]},roof.id);})})]});};export default RoofSelectionList;","map":{"version":3,"names":["React","getOrientationLabel","jsx","_jsx","jsxs","_jsxs","RoofSelectionList","_ref","addedRoofs","onRoofsUpdate","length","getSolarPotentialRating","percentage","rating","className","handleRoofSelectionChange","roofId","selected","updatedRoofs","map","roof","id","_objectSpread","children","solarPotential","concat","type","checked","onChange","e","target","area","toFixed","orientation","solarPanelCount"],"sources":["/Users/xuefei/Desktop/calculator00/calculator/renewableCalculator.ui/src/components/steps/roof-condition/RoofSelectionList.js"],"sourcesContent":["import React from 'react';\nimport { getOrientationLabel } from './roofLabelUtils';\n\nconst RoofSelectionList = ({ addedRoofs, onRoofsUpdate }) => {\n  if (addedRoofs.length === 0) return null;\n\n  // Function to get solar potential rating based on percentage\n  const getSolarPotentialRating = (percentage) => {\n    if (percentage > 95) {\n      return { rating: 'Excellent', className: 'excellent' };\n    } else if (percentage >= 90) {\n      return { rating: 'Very Good', className: 'very-good' };\n    } else if (percentage >= 80) {\n      return { rating: 'Good', className: 'good' };\n    } else if (percentage >= 60) {\n      return { rating: 'Medium', className: 'medium' };\n    } else {\n      return { rating: 'Poor', className: 'poor' };\n    }\n  };\n\n  const handleRoofSelectionChange = (roofId, selected) => {\n    const updatedRoofs = addedRoofs.map(roof => \n      roof.id === roofId ? { ...roof, selected } : roof\n    );\n    onRoofsUpdate(updatedRoofs);\n  };\n\n  return (\n    <div className=\"roof-selection-section\">\n      <h4>Select Roofs for Solar Installation</h4>\n      <p className=\"selection-instruction\">\n        Choose which roofs you want to install solar panels on. You can select multiple roofs or change your selection anytime.\n      </p>\n      \n      <div className=\"roofs-selection-grid\">\n        {addedRoofs.map((roof) => {\n          const rating = getSolarPotentialRating(roof.solarPotential);\n          \n          return (\n            <div key={roof.id} className={`roof-selection-card ${roof.selected ? 'selected' : ''}`}>\n              <div className=\"roof-selection-header\">\n                <h5>Roof {roof.id}</h5>\n                <label className=\"selection-checkbox\">\n                  <input\n                    type=\"checkbox\"\n                    checked={roof.selected}\n                    onChange={(e) => handleRoofSelectionChange(roof.id, e.target.checked)}\n                  />\n                  <span className=\"checkmark\"></span>\n                </label>\n              </div>\n              \n              <div className=\"roof-selection-summary\">\n                <div className=\"summary-text\">\n                  <div className=\"roof-basic-info\">\n                    {roof.area.toFixed(0)} m² • {getOrientationLabel(roof.orientation)}\n                  </div>\n                  <div className=\"solar-potential-info\">\n                    Solar Potential: {roof.solarPotential.toFixed(1)}%\n                    <span className={`rating-badge-small ${rating.className}`}>\n                      {rating.rating}\n                    </span>\n                  </div>\n                  <div className=\"solar-panel-info\">\n                    Estimated fits for {roof.solarPanelCount || 0} panels\n                  </div>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default RoofSelectionList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}