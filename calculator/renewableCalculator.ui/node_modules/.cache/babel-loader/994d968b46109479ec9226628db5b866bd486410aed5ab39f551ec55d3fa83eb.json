{"ast":null,"code":"var _jsxFileName = \"/Users/xuefei/Desktop/calculator00/calculator/renewableCalculator.ui/src/components/steps/EnergyDemand.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EnergyDemand = ({\n  data,\n  onDataChange,\n  onNext,\n  onBack\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    householdSize: data.householdSize || \"\",\n    knowsMonthlyUsage: data.knowsMonthlyUsage || \"\",\n    monthlyElectricityUsage: data.monthlyElectricityUsage || {\n      january: \"\",\n      february: \"\",\n      march: \"\",\n      april: \"\",\n      may: \"\",\n      june: \"\",\n      july: \"\",\n      august: \"\",\n      september: \"\",\n      october: \"\",\n      november: \"\",\n      december: \"\"\n    },\n    knowsAnnualUsage: data.knowsAnnualUsage || \"\",\n    annualElectricityUsage: data.annualElectricityUsage || \"\",\n    floorArea: data.floorArea || \"\",\n    heatingMethod: data.heatingMethod || \"\",\n    knowsMonthlyGasUsage: data.knowsMonthlyGasUsage || \"\",\n    monthlyGasUsage: data.monthlyGasUsage || {\n      january: \"\",\n      february: \"\",\n      march: \"\",\n      april: \"\",\n      may: \"\",\n      june: \"\",\n      july: \"\",\n      august: \"\",\n      september: \"\",\n      october: \"\",\n      november: \"\",\n      december: \"\"\n    },\n    knowsAnnualGasUsage: data.knowsAnnualGasUsage || \"\",\n    annualGasUsage: data.annualGasUsage || \"\",\n    heatPumpCOP: data.heatPumpCOP || \"3.0\",\n    ...data\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    let updatedData = {\n      [name]: value\n    };\n\n    // Clear related fields when switching between monthly/annual usage options (electricity)\n    if (name === \"knowsMonthlyUsage\") {\n      if (value === \"yes\") {\n        updatedData.knowsAnnualUsage = \"\";\n        updatedData.annualElectricityUsage = \"\";\n      } else if (value === \"no\") {\n        updatedData.monthlyElectricityUsage = {\n          january: \"\",\n          february: \"\",\n          march: \"\",\n          april: \"\",\n          may: \"\",\n          june: \"\",\n          july: \"\",\n          august: \"\",\n          september: \"\",\n          october: \"\",\n          november: \"\",\n          december: \"\"\n        };\n      }\n    } else if (name === \"knowsAnnualUsage\" && value === \"yes\") {\n      // Clear monthly usage when switching to knowing annual\n      updatedData.monthlyElectricityUsage = {\n        january: \"\",\n        february: \"\",\n        march: \"\",\n        april: \"\",\n        may: \"\",\n        june: \"\",\n        july: \"\",\n        august: \"\",\n        september: \"\",\n        october: \"\",\n        november: \"\",\n        december: \"\"\n      };\n    }\n\n    // Clear related fields when switching heating methods\n    if (name === \"heatingMethod\") {\n      updatedData.knowsMonthlyGasUsage = \"\";\n      updatedData.monthlyGasUsage = {\n        january: \"\",\n        february: \"\",\n        march: \"\",\n        april: \"\",\n        may: \"\",\n        june: \"\",\n        july: \"\",\n        august: \"\",\n        september: \"\",\n        october: \"\",\n        november: \"\",\n        december: \"\"\n      };\n      updatedData.knowsAnnualGasUsage = \"\";\n      updatedData.annualGasUsage = \"\";\n      if (value !== \"heat pumps\") {\n        updatedData.heatPumpCOP = \"3.0\";\n      }\n    }\n\n    // Clear related fields when switching between monthly/annual gas usage options\n    if (name === \"knowsMonthlyGasUsage\") {\n      if (value === \"yes\") {\n        updatedData.knowsAnnualGasUsage = \"\";\n        updatedData.annualGasUsage = \"\";\n      } else if (value === \"no\") {\n        updatedData.monthlyGasUsage = {\n          january: \"\",\n          february: \"\",\n          march: \"\",\n          april: \"\",\n          may: \"\",\n          june: \"\",\n          july: \"\",\n          august: \"\",\n          september: \"\",\n          october: \"\",\n          november: \"\",\n          december: \"\"\n        };\n      }\n    } else if (name === \"knowsAnnualGasUsage\" && value === \"yes\") {\n      // Clear monthly gas usage when switching to knowing annual\n      updatedData.monthlyGasUsage = {\n        january: \"\",\n        february: \"\",\n        march: \"\",\n        april: \"\",\n        may: \"\",\n        june: \"\",\n        july: \"\",\n        august: \"\",\n        september: \"\",\n        october: \"\",\n        november: \"\",\n        december: \"\"\n      };\n    }\n    setFormData(prev => ({\n      ...prev,\n      ...updatedData\n    }));\n    onDataChange(updatedData);\n  };\n  const handleMonthlyChange = (month, value) => {\n    const updatedMonthlyUsage = {\n      ...formData.monthlyElectricityUsage,\n      [month]: value\n    };\n    setFormData(prev => ({\n      ...prev,\n      monthlyElectricityUsage: updatedMonthlyUsage\n    }));\n    onDataChange({\n      monthlyElectricityUsage: updatedMonthlyUsage\n    });\n  };\n  const handleMonthlyGasChange = (month, value) => {\n    const updatedMonthlyGasUsage = {\n      ...formData.monthlyGasUsage,\n      [month]: value\n    };\n    setFormData(prev => ({\n      ...prev,\n      monthlyGasUsage: updatedMonthlyGasUsage\n    }));\n    onDataChange({\n      monthlyGasUsage: updatedMonthlyGasUsage\n    });\n  };\n  const handleNext = () => {\n    onNext();\n  };\n  const isFormValid = () => {\n    if (!formData.householdSize || !formData.knowsMonthlyUsage || !formData.floorArea || !formData.heatingMethod) {\n      return false;\n    }\n\n    // Validate electricity usage\n    if (formData.knowsMonthlyUsage === \"yes\") {\n      // Check if all 12 months have values\n      const months = [\"january\", \"february\", \"march\", \"april\", \"may\", \"june\", \"july\", \"august\", \"september\", \"october\", \"november\", \"december\"];\n      const electricityValid = months.every(month => formData.monthlyElectricityUsage[month] && formData.monthlyElectricityUsage[month].trim() !== \"\");\n      if (!electricityValid) return false;\n    } else if (formData.knowsMonthlyUsage === \"no\") {\n      if (!formData.knowsAnnualUsage) {\n        return false;\n      }\n      if (formData.knowsAnnualUsage === \"yes\" && !formData.annualElectricityUsage) {\n        return false;\n      }\n    }\n\n    // Validate heating method specific requirements\n    if (formData.heatingMethod === \"gas boiler\") {\n      if (!formData.knowsMonthlyGasUsage) {\n        return false;\n      }\n      if (formData.knowsMonthlyGasUsage === \"yes\") {\n        const months = [\"january\", \"february\", \"march\", \"april\", \"may\", \"june\", \"july\", \"august\", \"september\", \"october\", \"november\", \"december\"];\n        return months.every(month => formData.monthlyGasUsage[month] && formData.monthlyGasUsage[month].trim() !== \"\");\n      } else if (formData.knowsMonthlyGasUsage === \"no\") {\n        if (!formData.knowsAnnualGasUsage) {\n          return false;\n        }\n        if (formData.knowsAnnualGasUsage === \"yes\" && !formData.annualGasUsage) {\n          return false;\n        }\n      }\n    }\n\n    // Heat pump COP is optional (has default value), so no validation needed\n\n    return true;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"step-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"step-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Energy Demand\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Tell us about your household's energy usage patterns to calculate accurate renewable energy recommendations.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"householdSize\",\n        children: \"How many people live in your household regularly?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"householdSize\",\n        name: \"householdSize\",\n        value: formData.householdSize,\n        onChange: handleChange,\n        placeholder: \"Enter number of people\",\n        min: \"1\",\n        max: \"20\",\n        className: \"form-input\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"knowsMonthlyUsage\",\n        children: \"Do you know your monthly electricity usage?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"knowsMonthlyUsage\",\n        name: \"knowsMonthlyUsage\",\n        value: formData.knowsMonthlyUsage,\n        onChange: handleChange,\n        className: \"form-select\",\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select an option\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"yes\",\n          children: \"Yes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"no\",\n          children: \"No\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), formData.knowsMonthlyUsage === \"yes\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"monthly-usage-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"monthly-usage-title\",\n          children: \"Monthly electricity usage (kWh)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"monthly-usage-description\",\n          children: \"Please enter your electricity usage for each month:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"monthly-usage-grid\",\n          children: [{\n            key: \"january\",\n            label: \"January\"\n          }, {\n            key: \"february\",\n            label: \"February\"\n          }, {\n            key: \"march\",\n            label: \"March\"\n          }, {\n            key: \"april\",\n            label: \"April\"\n          }, {\n            key: \"may\",\n            label: \"May\"\n          }, {\n            key: \"june\",\n            label: \"June\"\n          }, {\n            key: \"july\",\n            label: \"July\"\n          }, {\n            key: \"august\",\n            label: \"August\"\n          }, {\n            key: \"september\",\n            label: \"September\"\n          }, {\n            key: \"october\",\n            label: \"October\"\n          }, {\n            key: \"november\",\n            label: \"November\"\n          }, {\n            key: \"december\",\n            label: \"December\"\n          }].map(month => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"monthly-input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: month.key,\n              className: \"month-label\",\n              children: month.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: month.key,\n              name: month.key,\n              value: formData.monthlyElectricityUsage[month.key],\n              onChange: e => handleMonthlyChange(month.key, e.target.value),\n              placeholder: \"kWh\",\n              min: \"0\",\n              step: \"0.1\",\n              className: \"form-input month-input\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this)]\n          }, month.key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }, this), formData.knowsMonthlyUsage === \"no\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"knowsAnnualUsage\",\n          children: \"Do you know your annual electricity usage?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"knowsAnnualUsage\",\n          name: \"knowsAnnualUsage\",\n          value: formData.knowsAnnualUsage,\n          onChange: handleChange,\n          className: \"form-select\",\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select an option\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"yes\",\n            children: \"Yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"no\",\n            children: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this), formData.knowsAnnualUsage === \"yes\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"annualElectricityUsage\",\n          children: \"Annual electricity usage (kWh)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"annualElectricityUsage\",\n          name: \"annualElectricityUsage\",\n          value: formData.annualElectricityUsage,\n          onChange: handleChange,\n          placeholder: \"Enter annual usage in kWh\",\n          min: \"0\",\n          step: \"1\",\n          className: \"form-input\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"floorArea\",\n        children: \"What is your approximate floor area? (m\\xB2)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"floorArea\",\n        name: \"floorArea\",\n        value: formData.floorArea,\n        onChange: handleChange,\n        placeholder: \"Enter floor area in square metres\",\n        min: \"1\",\n        step: \"0.1\",\n        className: \"form-input\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"heatingMethod\",\n        children: \"What is your home's heating method?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"heatingMethod\",\n        name: \"heatingMethod\",\n        value: formData.heatingMethod,\n        onChange: handleChange,\n        className: \"form-select\",\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select heating method\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"gas boiler\",\n          children: \"Gas boiler\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"electricity heating\",\n          children: \"Electricity heating\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"heat pumps\",\n          children: \"Heat pumps\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this), formData.heatingMethod === \"gas boiler\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"knowsMonthlyGasUsage\",\n          children: \"Do you know your monthly gas usage?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"knowsMonthlyGasUsage\",\n          name: \"knowsMonthlyGasUsage\",\n          value: formData.knowsMonthlyGasUsage,\n          onChange: handleChange,\n          className: \"form-select\",\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select an option\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"yes\",\n            children: \"Yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"no\",\n            children: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 11\n      }, this), formData.knowsMonthlyGasUsage === \"yes\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"monthly-usage-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"monthly-usage-title\",\n            children: \"Monthly gas usage (kWh)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"monthly-usage-description\",\n            children: \"Please enter your gas usage for each month:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"monthly-usage-grid\",\n            children: [{\n              key: \"january\",\n              label: \"January\"\n            }, {\n              key: \"february\",\n              label: \"February\"\n            }, {\n              key: \"march\",\n              label: \"March\"\n            }, {\n              key: \"april\",\n              label: \"April\"\n            }, {\n              key: \"may\",\n              label: \"May\"\n            }, {\n              key: \"june\",\n              label: \"June\"\n            }, {\n              key: \"july\",\n              label: \"July\"\n            }, {\n              key: \"august\",\n              label: \"August\"\n            }, {\n              key: \"september\",\n              label: \"September\"\n            }, {\n              key: \"october\",\n              label: \"October\"\n            }, {\n              key: \"november\",\n              label: \"November\"\n            }, {\n              key: \"december\",\n              label: \"December\"\n            }].map(month => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"monthly-input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `gas-${month.key}`,\n                className: \"month-label\",\n                children: month.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                id: `gas-${month.key}`,\n                name: `gas-${month.key}`,\n                value: formData.monthlyGasUsage[month.key],\n                onChange: e => handleMonthlyGasChange(month.key, e.target.value),\n                placeholder: \"kWh\",\n                min: \"0\",\n                step: \"0.1\",\n                className: \"form-input month-input\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 23\n              }, this)]\n            }, month.key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 13\n      }, this), formData.knowsMonthlyGasUsage === \"no\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"knowsAnnualGasUsage\",\n            children: \"Do you know your annual gas usage?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"knowsAnnualGasUsage\",\n            name: \"knowsAnnualGasUsage\",\n            value: formData.knowsAnnualGasUsage,\n            onChange: handleChange,\n            className: \"form-select\",\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select an option\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"yes\",\n              children: \"Yes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"no\",\n              children: \"No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 15\n        }, this), formData.knowsAnnualGasUsage === \"yes\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"annualGasUsage\",\n            children: \"Annual gas usage (kWh)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"annualGasUsage\",\n            name: \"annualGasUsage\",\n            value: formData.annualGasUsage,\n            onChange: handleChange,\n            placeholder: \"Enter annual gas usage in kWh\",\n            min: \"0\",\n            step: \"1\",\n            className: \"form-input\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true), formData.heatingMethod === \"heat pumps\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"heatPumpCOP\",\n        children: \"Heat Pump COP (Coefficient of Performance)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"heatPumpCOP\",\n        name: \"heatPumpCOP\",\n        value: formData.heatPumpCOP,\n        onChange: handleChange,\n        placeholder: \"Default: 3.0\",\n        min: \"1\",\n        max: \"10\",\n        step: \"0.1\",\n        className: \"form-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        className: \"input-help\",\n        children: \"If you don't know, the default value of 3.0 will be used.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary\",\n        onClick: onBack,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: `btn btn-primary ${!isFormValid() ? 'disabled' : ''}`,\n        onClick: handleNext,\n        disabled: !isFormValid(),\n        children: \"Next: Solar Configuration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n};\n_s(EnergyDemand, \"SwSe43YX6PpfxhVh0BOBpTe+gl0=\");\n_c = EnergyDemand;\nexport default EnergyDemand;\nvar _c;\n$RefreshReg$(_c, \"EnergyDemand\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","EnergyDemand","data","onDataChange","onNext","onBack","_s","formData","setFormData","householdSize","knowsMonthlyUsage","monthlyElectricityUsage","january","february","march","april","may","june","july","august","september","october","november","december","knowsAnnualUsage","annualElectricityUsage","floorArea","heatingMethod","knowsMonthlyGasUsage","monthlyGasUsage","knowsAnnualGasUsage","annualGasUsage","heatPumpCOP","handleChange","e","name","value","target","updatedData","prev","handleMonthlyChange","month","updatedMonthlyUsage","handleMonthlyGasChange","updatedMonthlyGasUsage","handleNext","isFormValid","months","electricityValid","every","trim","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","placeholder","min","max","required","key","label","map","step","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/xuefei/Desktop/calculator00/calculator/renewableCalculator.ui/src/components/steps/EnergyDemand.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst EnergyDemand = ({ data, onDataChange, onNext, onBack }) => {\n  const [formData, setFormData] = useState({\n    householdSize: data.householdSize || \"\",\n    knowsMonthlyUsage: data.knowsMonthlyUsage || \"\",\n    monthlyElectricityUsage: data.monthlyElectricityUsage || {\n      january: \"\", february: \"\", march: \"\", april: \"\", may: \"\", june: \"\",\n      july: \"\", august: \"\", september: \"\", october: \"\", november: \"\", december: \"\"\n    },\n    knowsAnnualUsage: data.knowsAnnualUsage || \"\",\n    annualElectricityUsage: data.annualElectricityUsage || \"\",\n    floorArea: data.floorArea || \"\",\n    heatingMethod: data.heatingMethod || \"\",\n    knowsMonthlyGasUsage: data.knowsMonthlyGasUsage || \"\",\n    monthlyGasUsage: data.monthlyGasUsage || {\n      january: \"\", february: \"\", march: \"\", april: \"\", may: \"\", june: \"\",\n      july: \"\", august: \"\", september: \"\", october: \"\", november: \"\", december: \"\"\n    },\n    knowsAnnualGasUsage: data.knowsAnnualGasUsage || \"\",\n    annualGasUsage: data.annualGasUsage || \"\",\n    heatPumpCOP: data.heatPumpCOP || \"3.0\",\n    ...data\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    let updatedData = { [name]: value };\n    \n    // Clear related fields when switching between monthly/annual usage options (electricity)\n    if (name === \"knowsMonthlyUsage\") {\n      if (value === \"yes\") {\n        updatedData.knowsAnnualUsage = \"\";\n        updatedData.annualElectricityUsage = \"\";\n      } else if (value === \"no\") {\n        updatedData.monthlyElectricityUsage = {\n          january: \"\", february: \"\", march: \"\", april: \"\", may: \"\", june: \"\",\n          july: \"\", august: \"\", september: \"\", october: \"\", november: \"\", december: \"\"\n        };\n      }\n    } else if (name === \"knowsAnnualUsage\" && value === \"yes\") {\n      // Clear monthly usage when switching to knowing annual\n      updatedData.monthlyElectricityUsage = {\n        january: \"\", february: \"\", march: \"\", april: \"\", may: \"\", june: \"\",\n        july: \"\", august: \"\", september: \"\", october: \"\", november: \"\", december: \"\"\n      };\n    }\n    \n    // Clear related fields when switching heating methods\n    if (name === \"heatingMethod\") {\n      updatedData.knowsMonthlyGasUsage = \"\";\n      updatedData.monthlyGasUsage = {\n        january: \"\", february: \"\", march: \"\", april: \"\", may: \"\", june: \"\",\n        july: \"\", august: \"\", september: \"\", october: \"\", november: \"\", december: \"\"\n      };\n      updatedData.knowsAnnualGasUsage = \"\";\n      updatedData.annualGasUsage = \"\";\n      if (value !== \"heat pumps\") {\n        updatedData.heatPumpCOP = \"3.0\";\n      }\n    }\n    \n    // Clear related fields when switching between monthly/annual gas usage options\n    if (name === \"knowsMonthlyGasUsage\") {\n      if (value === \"yes\") {\n        updatedData.knowsAnnualGasUsage = \"\";\n        updatedData.annualGasUsage = \"\";\n      } else if (value === \"no\") {\n        updatedData.monthlyGasUsage = {\n          january: \"\", february: \"\", march: \"\", april: \"\", may: \"\", june: \"\",\n          july: \"\", august: \"\", september: \"\", october: \"\", november: \"\", december: \"\"\n        };\n      }\n    } else if (name === \"knowsAnnualGasUsage\" && value === \"yes\") {\n      // Clear monthly gas usage when switching to knowing annual\n      updatedData.monthlyGasUsage = {\n        january: \"\", february: \"\", march: \"\", april: \"\", may: \"\", june: \"\",\n        july: \"\", august: \"\", september: \"\", october: \"\", november: \"\", december: \"\"\n      };\n    }\n    \n    setFormData(prev => ({\n      ...prev,\n      ...updatedData\n    }));\n    onDataChange(updatedData);\n  };\n\n  const handleMonthlyChange = (month, value) => {\n    const updatedMonthlyUsage = {\n      ...formData.monthlyElectricityUsage,\n      [month]: value\n    };\n    \n    setFormData(prev => ({\n      ...prev,\n      monthlyElectricityUsage: updatedMonthlyUsage\n    }));\n    onDataChange({ monthlyElectricityUsage: updatedMonthlyUsage });\n  };\n\n  const handleMonthlyGasChange = (month, value) => {\n    const updatedMonthlyGasUsage = {\n      ...formData.monthlyGasUsage,\n      [month]: value\n    };\n    \n    setFormData(prev => ({\n      ...prev,\n      monthlyGasUsage: updatedMonthlyGasUsage\n    }));\n    onDataChange({ monthlyGasUsage: updatedMonthlyGasUsage });\n  };\n\n  const handleNext = () => {\n    onNext();\n  };\n\n  const isFormValid = () => {\n    if (!formData.householdSize || !formData.knowsMonthlyUsage || !formData.floorArea || !formData.heatingMethod) {\n      return false;\n    }\n    \n    // Validate electricity usage\n    if (formData.knowsMonthlyUsage === \"yes\") {\n      // Check if all 12 months have values\n      const months = [\"january\", \"february\", \"march\", \"april\", \"may\", \"june\", \n                     \"july\", \"august\", \"september\", \"october\", \"november\", \"december\"];\n      const electricityValid = months.every(month => formData.monthlyElectricityUsage[month] && \n                                   formData.monthlyElectricityUsage[month].trim() !== \"\");\n      if (!electricityValid) return false;\n    } else if (formData.knowsMonthlyUsage === \"no\") {\n      if (!formData.knowsAnnualUsage) {\n        return false;\n      }\n      if (formData.knowsAnnualUsage === \"yes\" && !formData.annualElectricityUsage) {\n        return false;\n      }\n    }\n    \n    // Validate heating method specific requirements\n    if (formData.heatingMethod === \"gas boiler\") {\n      if (!formData.knowsMonthlyGasUsage) {\n        return false;\n      }\n      if (formData.knowsMonthlyGasUsage === \"yes\") {\n        const months = [\"january\", \"february\", \"march\", \"april\", \"may\", \"june\", \n                       \"july\", \"august\", \"september\", \"october\", \"november\", \"december\"];\n        return months.every(month => formData.monthlyGasUsage[month] && \n                                     formData.monthlyGasUsage[month].trim() !== \"\");\n      } else if (formData.knowsMonthlyGasUsage === \"no\") {\n        if (!formData.knowsAnnualGasUsage) {\n          return false;\n        }\n        if (formData.knowsAnnualGasUsage === \"yes\" && !formData.annualGasUsage) {\n          return false;\n        }\n      }\n    }\n    \n    // Heat pump COP is optional (has default value), so no validation needed\n    \n    return true;\n  };\n\n  return (\n    <div className=\"step-container\">\n      <div className=\"step-header\">\n        <h2>Energy Demand</h2>\n        <p>Tell us about your household's energy usage patterns to calculate accurate renewable energy recommendations.</p>\n      </div>\n\n      <div className=\"form-group\">\n        <label htmlFor=\"householdSize\">How many people live in your household regularly?</label>\n        <input\n          type=\"number\"\n          id=\"householdSize\"\n          name=\"householdSize\"\n          value={formData.householdSize}\n          onChange={handleChange}\n          placeholder=\"Enter number of people\"\n          min=\"1\"\n          max=\"20\"\n          className=\"form-input\"\n          required\n        />\n      </div>\n\n      <div className=\"form-group\">\n        <label htmlFor=\"knowsMonthlyUsage\">Do you know your monthly electricity usage?</label>\n        <select\n          id=\"knowsMonthlyUsage\"\n          name=\"knowsMonthlyUsage\"\n          value={formData.knowsMonthlyUsage}\n          onChange={handleChange}\n          className=\"form-select\"\n          required\n        >\n          <option value=\"\">Select an option</option>\n          <option value=\"yes\">Yes</option>\n          <option value=\"no\">No</option>\n        </select>\n      </div>\n\n      {formData.knowsMonthlyUsage === \"yes\" && (\n        <div className=\"form-group\">\n          <div className=\"monthly-usage-container\">\n            <h3 className=\"monthly-usage-title\">Monthly electricity usage (kWh)</h3>\n            <p className=\"monthly-usage-description\">Please enter your electricity usage for each month:</p>\n            <div className=\"monthly-usage-grid\">\n            {[\n              { key: \"january\", label: \"January\" },\n              { key: \"february\", label: \"February\" },\n              { key: \"march\", label: \"March\" },\n              { key: \"april\", label: \"April\" },\n              { key: \"may\", label: \"May\" },\n              { key: \"june\", label: \"June\" },\n              { key: \"july\", label: \"July\" },\n              { key: \"august\", label: \"August\" },\n              { key: \"september\", label: \"September\" },\n              { key: \"october\", label: \"October\" },\n              { key: \"november\", label: \"November\" },\n              { key: \"december\", label: \"December\" }\n            ].map(month => (\n              <div key={month.key} className=\"monthly-input-group\">\n                <label htmlFor={month.key} className=\"month-label\">{month.label}</label>\n                <input\n                  type=\"number\"\n                  id={month.key}\n                  name={month.key}\n                  value={formData.monthlyElectricityUsage[month.key]}\n                  onChange={(e) => handleMonthlyChange(month.key, e.target.value)}\n                  placeholder=\"kWh\"\n                  min=\"0\"\n                  step=\"0.1\"\n                  className=\"form-input month-input\"\n                  required\n                />\n              </div>\n            ))}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {formData.knowsMonthlyUsage === \"no\" && (\n        <>\n          <div className=\"form-group\">\n            <label htmlFor=\"knowsAnnualUsage\">Do you know your annual electricity usage?</label>\n            <select\n              id=\"knowsAnnualUsage\"\n              name=\"knowsAnnualUsage\"\n              value={formData.knowsAnnualUsage}\n              onChange={handleChange}\n              className=\"form-select\"\n              required\n            >\n              <option value=\"\">Select an option</option>\n              <option value=\"yes\">Yes</option>\n              <option value=\"no\">No</option>\n            </select>\n          </div>\n\n          {formData.knowsAnnualUsage === \"yes\" && (\n            <div className=\"form-group\">\n              <label htmlFor=\"annualElectricityUsage\">Annual electricity usage (kWh)</label>\n              <input\n                type=\"number\"\n                id=\"annualElectricityUsage\"\n                name=\"annualElectricityUsage\"\n                value={formData.annualElectricityUsage}\n                onChange={handleChange}\n                placeholder=\"Enter annual usage in kWh\"\n                min=\"0\"\n                step=\"1\"\n                className=\"form-input\"\n                required\n              />\n            </div>\n          )}\n        </>\n      )}\n\n      <div className=\"form-group\">\n        <label htmlFor=\"floorArea\">What is your approximate floor area? (m²)</label>\n        <input\n          type=\"number\"\n          id=\"floorArea\"\n          name=\"floorArea\"\n          value={formData.floorArea}\n          onChange={handleChange}\n          placeholder=\"Enter floor area in square metres\"\n          min=\"1\"\n          step=\"0.1\"\n          className=\"form-input\"\n          required\n        />\n      </div>\n\n      <div className=\"form-group\">\n        <label htmlFor=\"heatingMethod\">What is your home's heating method?</label>\n        <select\n          id=\"heatingMethod\"\n          name=\"heatingMethod\"\n          value={formData.heatingMethod}\n          onChange={handleChange}\n          className=\"form-select\"\n          required\n        >\n          <option value=\"\">Select heating method</option>\n          <option value=\"gas boiler\">Gas boiler</option>\n          <option value=\"electricity heating\">Electricity heating</option>\n          <option value=\"heat pumps\">Heat pumps</option>\n        </select>\n      </div>\n\n      {formData.heatingMethod === \"gas boiler\" && (\n        <>\n          <div className=\"form-group\">\n            <label htmlFor=\"knowsMonthlyGasUsage\">Do you know your monthly gas usage?</label>\n            <select\n              id=\"knowsMonthlyGasUsage\"\n              name=\"knowsMonthlyGasUsage\"\n              value={formData.knowsMonthlyGasUsage}\n              onChange={handleChange}\n              className=\"form-select\"\n              required\n            >\n              <option value=\"\">Select an option</option>\n              <option value=\"yes\">Yes</option>\n              <option value=\"no\">No</option>\n            </select>\n          </div>\n\n          {formData.knowsMonthlyGasUsage === \"yes\" && (\n            <div className=\"form-group\">\n              <div className=\"monthly-usage-container\">\n                <h3 className=\"monthly-usage-title\">Monthly gas usage (kWh)</h3>\n                <p className=\"monthly-usage-description\">Please enter your gas usage for each month:</p>\n                <div className=\"monthly-usage-grid\">\n                  {[\n                    { key: \"january\", label: \"January\" },\n                    { key: \"february\", label: \"February\" },\n                    { key: \"march\", label: \"March\" },\n                    { key: \"april\", label: \"April\" },\n                    { key: \"may\", label: \"May\" },\n                    { key: \"june\", label: \"June\" },\n                    { key: \"july\", label: \"July\" },\n                    { key: \"august\", label: \"August\" },\n                    { key: \"september\", label: \"September\" },\n                    { key: \"october\", label: \"October\" },\n                    { key: \"november\", label: \"November\" },\n                    { key: \"december\", label: \"December\" }\n                  ].map(month => (\n                    <div key={month.key} className=\"monthly-input-group\">\n                      <label htmlFor={`gas-${month.key}`} className=\"month-label\">{month.label}</label>\n                      <input\n                        type=\"number\"\n                        id={`gas-${month.key}`}\n                        name={`gas-${month.key}`}\n                        value={formData.monthlyGasUsage[month.key]}\n                        onChange={(e) => handleMonthlyGasChange(month.key, e.target.value)}\n                        placeholder=\"kWh\"\n                        min=\"0\"\n                        step=\"0.1\"\n                        className=\"form-input month-input\"\n                        required\n                      />\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          )}\n\n          {formData.knowsMonthlyGasUsage === \"no\" && (\n            <>\n              <div className=\"form-group\">\n                <label htmlFor=\"knowsAnnualGasUsage\">Do you know your annual gas usage?</label>\n                <select\n                  id=\"knowsAnnualGasUsage\"\n                  name=\"knowsAnnualGasUsage\"\n                  value={formData.knowsAnnualGasUsage}\n                  onChange={handleChange}\n                  className=\"form-select\"\n                  required\n                >\n                  <option value=\"\">Select an option</option>\n                  <option value=\"yes\">Yes</option>\n                  <option value=\"no\">No</option>\n                </select>\n              </div>\n\n              {formData.knowsAnnualGasUsage === \"yes\" && (\n                <div className=\"form-group\">\n                  <label htmlFor=\"annualGasUsage\">Annual gas usage (kWh)</label>\n                  <input\n                    type=\"number\"\n                    id=\"annualGasUsage\"\n                    name=\"annualGasUsage\"\n                    value={formData.annualGasUsage}\n                    onChange={handleChange}\n                    placeholder=\"Enter annual gas usage in kWh\"\n                    min=\"0\"\n                    step=\"1\"\n                    className=\"form-input\"\n                    required\n                  />\n                </div>\n              )}\n            </>\n          )}\n        </>\n      )}\n\n      {formData.heatingMethod === \"heat pumps\" && (\n        <div className=\"form-group\">\n          <label htmlFor=\"heatPumpCOP\">Heat Pump COP (Coefficient of Performance)</label>\n          <input\n            type=\"number\"\n            id=\"heatPumpCOP\"\n            name=\"heatPumpCOP\"\n            value={formData.heatPumpCOP}\n            onChange={handleChange}\n            placeholder=\"Default: 3.0\"\n            min=\"1\"\n            max=\"10\"\n            step=\"0.1\"\n            className=\"form-input\"\n          />\n          <small className=\"input-help\">If you don't know, the default value of 3.0 will be used.</small>\n        </div>\n      )}\n\n      <div className=\"button-group\">\n        <button \n          type=\"button\" \n          className=\"btn btn-secondary\"\n          onClick={onBack}\n        >\n          Back\n        </button>\n        <button \n          type=\"button\" \n          className={`btn btn-primary ${!isFormValid() ? 'disabled' : ''}`}\n          onClick={handleNext}\n          disabled={!isFormValid()}\n        >\n          Next: Solar Configuration\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default EnergyDemand; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}