{"ast":null,"code":"var _jsxFileName = \"/Users/xuefei/Desktop/calculator00 copy 3/calculator/renewableCalculator.ui/src/components/steps/ConfigurationComparison.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst ConfigurationComparison = ({\n  selectedEquipment,\n  userData,\n  onBack,\n  appliedSubsidies,\n  totalSubsidyAmount\n}) => {\n  _s();\n  const [availableEquipment, setAvailableEquipment] = useState({});\n  const [configurations, setConfigurations] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showChart, setShowChart] = useState({\n    visible: false,\n    data: null,\n    title: ''\n  });\n\n  // Helper function to calculate net installation cost after subsidies\n  const calculateNetInstallationCost = grossCost => {\n    const subsidyAmount = totalSubsidyAmount || 0;\n    return Math.max(0, grossCost - subsidyAmount);\n  };\n\n  // Helper function to format installation cost display with subsidy information\n  const formatInstallationCostWithSubsidy = grossCost => {\n    const subsidyAmount = totalSubsidyAmount || 0;\n    const netCost = calculateNetInstallationCost(grossCost);\n    if (subsidyAmount > 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cost-breakdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gross-cost\",\n          children: formatCurrency(grossCost)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"subsidy-deduction\",\n          children: [\"- \", formatCurrency(subsidyAmount), \" (subsidy)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"net-cost\",\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: formatCurrency(netCost)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this);\n    }\n    return formatCurrency(grossCost);\n  };\n  useEffect(() => {\n    loadAvailableEquipment();\n  }, [selectedEquipment]);\n  const loadAvailableEquipment = async () => {\n    try {\n      const promises = [];\n      if (selectedEquipment.solarPanels) {\n        promises.push(fetch('http://localhost:8080/api/equipment/solar-panels/available').then(res => res.json()).then(data => ({\n          type: 'solar',\n          data\n        })));\n      }\n      if (selectedEquipment.heatPump) {\n        promises.push(fetch('http://localhost:8080/api/equipment/heat-pumps/available').then(res => res.json()).then(data => ({\n          type: 'heatPump',\n          data\n        })));\n      }\n      if (selectedEquipment.batteryStorage) {\n        promises.push(fetch('http://localhost:8080/api/equipment/batteries/available').then(res => res.json()).then(data => ({\n          type: 'battery',\n          data\n        })));\n      }\n      const results = await Promise.all(promises);\n      const available = {};\n      results.forEach(result => {\n        available[result.type] = result.data;\n      });\n      setAvailableEquipment(available);\n\n      // Generate 3 recommended configurations\n      const recommendedConfigurations = await generateRecommendedConfigurations(available);\n      setConfigurations(recommendedConfigurations);\n    } catch (error) {\n      console.error('Error loading available equipment:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const generateRecommendedConfigurations = async available => {\n    const configs = [];\n\n    // Configuration 1: Most Cost-Effective (cheapest installation cost)\n    configs.push({\n      id: 1,\n      name: \"Most Cost-Effective\",\n      selections: getCostEffectiveSelections(available),\n      calculations: {\n        installationCost: 0,\n        annualGeneration: 0,\n        annualSavings: 0,\n        annualExportRevenue: 0,\n        annualCO2Savings: 0,\n        paybackPeriod: 0,\n        monthlyData: {\n          generation: new Array(12).fill(0),\n          savings: new Array(12).fill(0),\n          exportRevenue: new Array(12).fill(0),\n          co2Savings: new Array(12).fill(0)\n        }\n      },\n      loading: false\n    });\n\n    // Configuration 2: Most Eco-Friendly (maximum CO2 savings)\n    configs.push({\n      id: 2,\n      name: \"Most Eco-Friendly\",\n      selections: getEcoFriendlySelections(available),\n      calculations: {\n        installationCost: 0,\n        annualGeneration: 0,\n        annualSavings: 0,\n        annualExportRevenue: 0,\n        annualCO2Savings: 0,\n        paybackPeriod: 0,\n        monthlyData: {\n          generation: new Array(12).fill(0),\n          savings: new Array(12).fill(0),\n          exportRevenue: new Array(12).fill(0),\n          co2Savings: new Array(12).fill(0)\n        }\n      },\n      loading: false\n    });\n\n    // Configuration 3: Balanced Option (best overall value)\n    configs.push({\n      id: 3,\n      name: \"Balanced Option\",\n      selections: getBalancedSelections(available),\n      calculations: {\n        installationCost: 0,\n        annualGeneration: 0,\n        annualSavings: 0,\n        annualExportRevenue: 0,\n        annualCO2Savings: 0,\n        paybackPeriod: 0,\n        monthlyData: {\n          generation: new Array(12).fill(0),\n          savings: new Array(12).fill(0),\n          exportRevenue: new Array(12).fill(0),\n          co2Savings: new Array(12).fill(0)\n        }\n      },\n      loading: false\n    });\n\n    // Calculate performance for each configuration\n    for (let config of configs) {\n      if (hasValidSelections(config.selections)) {\n        await calculateConfigurationPerformance(config);\n      }\n    }\n    return configs;\n  };\n  const getCostEffectiveSelections = available => {\n    const selections = {\n      solar: selectedEquipment.solarPanels ? null : null,\n      heatPump: selectedEquipment.heatPump ? null : null,\n      battery: selectedEquipment.batteryStorage ? null : null\n    };\n\n    // Select cheapest options (assuming lower price or basic models)\n    if (selectedEquipment.solarPanels && available.solar && available.solar.length > 0) {\n      // Find the most cost-effective solar panel (lowest price if available, otherwise first option)\n      const cheapestSolar = available.solar.reduce((min, panel) => panel.price && min.price && panel.price < min.price ? panel : min);\n      selections.solar = cheapestSolar.id;\n    }\n    if (selectedEquipment.heatPump && available.heatPump && available.heatPump.length > 0) {\n      // Select most cost-effective heat pump (lowest cost)\n      const cheapestHeatPump = available.heatPump.reduce((min, pump) => pump.cost && min.cost && pump.cost < min.cost ? pump : min);\n      selections.heatPump = cheapestHeatPump.id;\n    }\n    if (selectedEquipment.batteryStorage && available.battery && available.battery.length > 0) {\n      // Select most cost-effective battery (lowest cost)\n      const cheapestBattery = available.battery.reduce((min, battery) => battery.cost && min.cost && battery.cost < min.cost ? battery : min);\n      selections.battery = cheapestBattery.id;\n    }\n    return selections;\n  };\n  const getEcoFriendlySelections = available => {\n    const selections = {\n      solar: selectedEquipment.solarPanels ? null : null,\n      heatPump: selectedEquipment.heatPump ? null : null,\n      battery: selectedEquipment.batteryStorage ? null : null\n    };\n\n    // Select highest efficiency/performance options\n    if (selectedEquipment.solarPanels && available.solar && available.solar.length > 0) {\n      // Find highest efficiency or power solar panel\n      const bestSolar = available.solar.reduce((best, panel) => panel.efficiency && best.efficiency && panel.efficiency > best.efficiency ? panel : panel.ratedPowerPerPanel && best.ratedPowerPerPanel && panel.ratedPowerPerPanel > best.ratedPowerPerPanel ? panel : best);\n      selections.solar = bestSolar.id;\n    }\n    if (selectedEquipment.heatPump && available.heatPump && available.heatPump.length > 0) {\n      // Select highest COP heat pump\n      const bestHeatPump = available.heatPump.reduce((best, pump) => pump.cop && best.cop && pump.cop > best.cop ? pump : best);\n      selections.heatPump = bestHeatPump.id;\n    }\n    if (selectedEquipment.batteryStorage && available.battery && available.battery.length > 0) {\n      // Select largest capacity battery\n      const bestBattery = available.battery.reduce((best, battery) => battery.capacityKwh && best.capacityKwh && battery.capacityKwh > best.capacityKwh ? battery : best);\n      selections.battery = bestBattery.id;\n    }\n    return selections;\n  };\n  const getBalancedSelections = available => {\n    const selections = {\n      solar: selectedEquipment.solarPanels ? null : null,\n      heatPump: selectedEquipment.heatPump ? null : null,\n      battery: selectedEquipment.batteryStorage ? null : null\n    };\n\n    // Select middle-range options (good balance of cost and performance)\n    if (selectedEquipment.solarPanels && available.solar && available.solar.length > 0) {\n      const sortedSolar = [...available.solar].sort((a, b) => (a.price || 0) - (b.price || 0));\n      const middleIndex = Math.floor(sortedSolar.length / 2);\n      selections.solar = sortedSolar[middleIndex].id;\n    }\n    if (selectedEquipment.heatPump && available.heatPump && available.heatPump.length > 0) {\n      const sortedHeatPumps = [...available.heatPump].sort((a, b) => (a.cost || 0) - (b.cost || 0));\n      const middleIndex = Math.floor(sortedHeatPumps.length / 2);\n      selections.heatPump = sortedHeatPumps[middleIndex].id;\n    }\n    if (selectedEquipment.batteryStorage && available.battery && available.battery.length > 0) {\n      const sortedBatteries = [...available.battery].sort((a, b) => (a.cost || 0) - (b.cost || 0));\n      const middleIndex = Math.floor(sortedBatteries.length / 2);\n      selections.battery = sortedBatteries[middleIndex].id;\n    }\n    return selections;\n  };\n  const hasValidSelections = selections => {\n    return Object.values(selections).some(selection => selection !== null && selection !== '');\n  };\n  const calculateConfigurationPerformance = async config => {\n    try {\n      const calculationRequest = {\n        hasSolarPanels: Boolean(selectedEquipment.solarPanels),\n        hasHeatPump: Boolean(selectedEquipment.heatPump),\n        hasBattery: Boolean(selectedEquipment.batteryStorage),\n        solarPanelTypeIds: config.selections.solar ? [Number(config.selections.solar)] : [],\n        heatPumpTypeIds: config.selections.heatPump ? [Number(config.selections.heatPump)] : [],\n        batteryIds: config.selections.battery ? [Number(config.selections.battery)] : [],\n        houseArea: Number(userData.houseArea) || 120,\n        occupants: Number(userData.occupants) || 3,\n        roofArea: Number(userData.roofArea) || 60,\n        // Increased from 30 to 60 sq meters\n        latitude: Number(userData.latitude) || 51.5,\n        longitude: Number(userData.longitude) || -0.1,\n        annualElectricityUsageKwh: Number(userData.annualElectricityUsage) || 3500,\n        annualGasUsageKwh: Number(userData.annualGasUsage) || 18000,\n        monthlyElectricityUsageKwh: Number(userData.monthlyElectricityUsage) || 290,\n        homeOccupancyFactor: Number(userData.homeOccupancyFactor) || 0.6,\n        electricityRate: Number(userData.electricityRate) || 25,\n        // Pence per kWh\n        gasRate: Number(userData.gasRate) || 8,\n        // Pence per kWh\n        exportRate: Number(userData.exportRate) || 15,\n        // Pence per kWh\n        peakElectricityRate: Number(userData.peakElectricityRate) || 35,\n        offPeakElectricityRate: Number(userData.offPeakElectricityRate) || 12,\n        solarInstallationComplexity: Number(userData.solarInstallationComplexity) || 1.2,\n        heatPumpInstallationComplexity: Number(userData.heatPumpInstallationComplexity) || 1.5,\n        batteryInstallationComplexity: Number(userData.batteryInstallationComplexity) || 1.1\n      };\n      console.log('Sending calculation request:', calculationRequest); // Debug log\n\n      const response = await fetch('http://localhost:8080/api/equipment/compare', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(calculationRequest)\n      });\n      if (response.ok) {\n        const result = await response.json();\n        console.log('Received calculation result:', result); // Debug log\n        config.calculations = processCalculationResult(result);\n      } else {\n        const errorText = await response.text();\n        console.error('API response error:', response.status, response.statusText, errorText);\n      }\n    } catch (error) {\n      console.error('Error calculating configuration performance:', error);\n    }\n  };\n  const createEmptyConfiguration = configNumber => ({\n    id: configNumber,\n    name: `Configuration ${configNumber}`,\n    selections: {\n      solar: selectedEquipment.solarPanels ? '' : null,\n      heatPump: selectedEquipment.heatPump ? '' : null,\n      battery: selectedEquipment.batteryStorage ? '' : null\n    },\n    calculations: {\n      installationCost: 0,\n      annualGeneration: 0,\n      annualSavings: 0,\n      annualExportRevenue: 0,\n      annualCO2Savings: 0,\n      paybackPeriod: 0,\n      monthlyData: {\n        generation: new Array(12).fill(0),\n        savings: new Array(12).fill(0),\n        exportRevenue: new Array(12).fill(0),\n        co2Savings: new Array(12).fill(0)\n      }\n    },\n    loading: false\n  });\n  const handleEquipmentChange = async (configId, equipmentType, equipmentId) => {\n    // Update the selection\n    setConfigurations(prev => prev.map(config => {\n      if (config.id === configId) {\n        return {\n          ...config,\n          selections: {\n            ...config.selections,\n            [equipmentType]: equipmentId\n          },\n          loading: true\n        };\n      }\n      return config;\n    }));\n\n    // Recalculate for this configuration\n    await recalculateConfiguration(configId, equipmentType, equipmentId);\n  };\n  const recalculateConfiguration = async (configId, changedEquipmentType, changedEquipmentId) => {\n    try {\n      const config = configurations.find(c => c.id === configId);\n      if (!config) return;\n\n      // Update the changed selection\n      const updatedSelections = {\n        ...config.selections,\n        [changedEquipmentType]: changedEquipmentId\n      };\n\n      // Build request for calculation\n      const calculationRequest = {\n        hasSolarPanels: Boolean(selectedEquipment.solarPanels),\n        hasHeatPump: Boolean(selectedEquipment.heatPump),\n        hasBattery: Boolean(selectedEquipment.batteryStorage),\n        solarPanelTypeIds: updatedSelections.solar ? [Number(updatedSelections.solar)] : [],\n        heatPumpTypeIds: updatedSelections.heatPump ? [Number(updatedSelections.heatPump)] : [],\n        batteryIds: updatedSelections.battery ? [Number(updatedSelections.battery)] : [],\n        houseArea: Number(userData.houseArea) || 120,\n        occupants: Number(userData.occupants) || 3,\n        roofArea: Number(userData.roofArea) || 60,\n        // Increased from 30 to 60 sq meters\n        latitude: Number(userData.latitude) || 51.5,\n        longitude: Number(userData.longitude) || -0.1,\n        annualElectricityUsageKwh: Number(userData.annualElectricityUsage) || 3500,\n        annualGasUsageKwh: Number(userData.annualGasUsage) || 18000,\n        monthlyElectricityUsageKwh: Number(userData.monthlyElectricityUsage) || 290,\n        homeOccupancyFactor: Number(userData.homeOccupancyFactor) || 0.6,\n        electricityRate: Number(userData.electricityRate) || 25,\n        // Pence per kWh\n        gasRate: Number(userData.gasRate) || 8,\n        // Pence per kWh\n        exportRate: Number(userData.exportRate) || 15,\n        // Pence per kWh\n        peakElectricityRate: Number(userData.peakElectricityRate) || 35,\n        offPeakElectricityRate: Number(userData.offPeakElectricityRate) || 12,\n        solarInstallationComplexity: Number(userData.solarInstallationComplexity) || 1.2,\n        heatPumpInstallationComplexity: Number(userData.heatPumpInstallationComplexity) || 1.5,\n        batteryInstallationComplexity: Number(userData.batteryInstallationComplexity) || 1.1\n      };\n      const response = await fetch('http://localhost:8080/api/equipment/compare', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(calculationRequest)\n      });\n      if (response.ok) {\n        const result = await response.json();\n        const calculations = processCalculationResult(result);\n        setConfigurations(prev => prev.map(config => {\n          if (config.id === configId) {\n            return {\n              ...config,\n              selections: updatedSelections,\n              calculations,\n              loading: false\n            };\n          }\n          return config;\n        }));\n      }\n    } catch (error) {\n      console.error('Error recalculating configuration:', error);\n      setConfigurations(prev => prev.map(config => {\n        if (config.id === configId) {\n          return {\n            ...config,\n            loading: false\n          };\n        }\n        return config;\n      }));\n    }\n  };\n  const processCalculationResult = result => {\n    let totalCost = 0;\n    let totalGeneration = 0;\n    let totalSavings = 0;\n    let totalExportRevenue = 0;\n    let totalCO2Savings = 0;\n    const monthlyGeneration = new Array(12).fill(0);\n    const monthlySavings = new Array(12).fill(0);\n    const monthlyExportRevenue = new Array(12).fill(0);\n    const monthlyCO2Savings = new Array(12).fill(0);\n\n    // Aggregate data from all equipment types\n    [...(result.solarPanelOptions || []), ...(result.heatPumpOptions || []), ...(result.batteryOptions || [])].forEach(option => {\n      totalCost += option.installationCost || 0;\n      totalGeneration += option.annualGeneration || 0;\n      totalSavings += option.annualCostSavings || 0;\n      totalExportRevenue += option.annualExportRevenue || 0;\n      totalCO2Savings += option.annualTotalCO2Savings || 0;\n\n      // Aggregate monthly data\n      if (option.monthlyGeneration) {\n        option.monthlyGeneration.forEach((value, index) => {\n          monthlyGeneration[index] += value || 0;\n        });\n      }\n      if (option.monthlyCostSavings) {\n        option.monthlyCostSavings.forEach((value, index) => {\n          monthlySavings[index] += value || 0;\n        });\n      }\n      if (option.monthlyExportRevenue) {\n        option.monthlyExportRevenue.forEach((value, index) => {\n          monthlyExportRevenue[index] += value || 0;\n        });\n      }\n      if (option.monthlyDirectCO2Savings && option.monthlyIndirectCO2Savings) {\n        option.monthlyDirectCO2Savings.forEach((direct, index) => {\n          const indirect = option.monthlyIndirectCO2Savings[index] || 0;\n          monthlyCO2Savings[index] += (direct || 0) + indirect;\n        });\n      }\n    });\n    const paybackPeriod = totalSavings + totalExportRevenue > 0 ? totalCost / (totalSavings + totalExportRevenue) : 999;\n    return {\n      installationCost: totalCost,\n      annualGeneration: totalGeneration,\n      annualSavings: totalSavings,\n      annualExportRevenue: totalExportRevenue,\n      annualCO2Savings: totalCO2Savings,\n      paybackPeriod: paybackPeriod,\n      monthlyData: {\n        generation: monthlyGeneration,\n        savings: monthlySavings,\n        exportRevenue: monthlyExportRevenue,\n        co2Savings: monthlyCO2Savings\n      }\n    };\n  };\n  const addConfiguration = () => {\n    const newId = Math.max(...configurations.map(c => c.id)) + 1;\n    setConfigurations(prev => [...prev, createEmptyConfiguration(newId)]);\n  };\n  const removeConfiguration = configId => {\n    if (configurations.length > 1) {\n      setConfigurations(prev => prev.filter(c => c.id !== configId));\n    }\n  };\n  const showMonthlyChart = (config, dataType, title) => {\n    const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    let monthlyData = [];\n    switch (dataType) {\n      case 'generation':\n        monthlyData = config.calculations.monthlyData.generation;\n        break;\n      case 'savings':\n        monthlyData = config.calculations.monthlyData.savings;\n        break;\n      case 'exportRevenue':\n        monthlyData = config.calculations.monthlyData.exportRevenue;\n        break;\n      case 'co2Savings':\n        monthlyData = config.calculations.monthlyData.co2Savings;\n        break;\n      default:\n        monthlyData = [];\n    }\n    const chartData = {\n      labels: months,\n      datasets: [{\n        label: title,\n        data: monthlyData,\n        borderColor: getChartColor(dataType),\n        backgroundColor: getChartColor(dataType) + '20',\n        tension: 0.4,\n        fill: true\n      }]\n    };\n    const chartOptions = {\n      responsive: true,\n      plugins: {\n        legend: {\n          position: 'top'\n        },\n        title: {\n          display: true,\n          text: `${config.name} - ${title}`\n        }\n      },\n      scales: {\n        y: {\n          beginAtZero: true\n        }\n      }\n    };\n    setShowChart({\n      visible: true,\n      data: chartData,\n      options: chartOptions,\n      title: `${config.name} - ${title}`\n    });\n  };\n  const getChartColor = dataType => {\n    const colors = {\n      generation: '#3498db',\n      savings: '#27ae60',\n      exportRevenue: '#f39c12',\n      co2Savings: '#e74c3c'\n    };\n    return colors[dataType] || '#34495e';\n  };\n  const formatCurrency = value => {\n    return value ? `£${Math.round(value).toLocaleString()}` : '£0';\n  };\n  const formatNumber = (value, unit = '') => {\n    return value ? `${Math.round(value).toLocaleString()}${unit}` : `0${unit}`;\n  };\n  const getEquipmentName = (equipmentType, equipmentId) => {\n    if (!equipmentId || !availableEquipment[equipmentType]) return '';\n    const equipment = availableEquipment[equipmentType].find(e => e.id == equipmentId);\n    return equipment ? equipment.name : '';\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"configuration-comparison-loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Loading Equipment Options...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Generating recommended configurations for you.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 612,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"configuration-comparison\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"configuration-table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"configuration-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Configuration Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 625,\n              columnNumber: 15\n            }, this), selectedEquipment.solarPanels && /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Solar Panels\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 626,\n              columnNumber: 49\n            }, this), selectedEquipment.heatPump && /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Heat Pump\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 627,\n              columnNumber: 46\n            }, this), selectedEquipment.batteryStorage && /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Battery Storage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 628,\n              columnNumber: 52\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: [totalSubsidyAmount > 0 ? 'Net Installation Cost' : 'Installation Cost', totalSubsidyAmount > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cost-header-note\",\n                children: [\"(after \\xA3\", totalSubsidyAmount.toFixed(0), \" subsidy)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 632,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 629,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"clickable-header\",\n              onClick: () => showMonthlyChart('generation', 'Monthly Generation (kWh)', 'monthlyGeneration'),\n              title: \"Click to view monthly breakdown\",\n              children: \"Annual Generation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 637,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"clickable-header\",\n              onClick: () => showMonthlyChart('savings', 'Monthly Savings (£)', 'monthlySavings'),\n              title: \"Click to view monthly breakdown\",\n              children: \"Annual Savings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 644,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"clickable-header\",\n              onClick: () => showMonthlyChart('exportRevenue', 'Monthly Export Revenue (£)', 'monthlyExportRevenue'),\n              title: \"Click to view monthly breakdown\",\n              children: \"Annual Export Revenue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 651,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"clickable-header\",\n              onClick: () => showMonthlyChart('co2Savings', 'Monthly CO₂ Savings (kg)', 'monthlyCo2Savings'),\n              title: \"Click to view monthly breakdown\",\n              children: \"Annual CO\\u2082 Savings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 658,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Payback Period\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 665,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 666,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 624,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: configurations.map(config => {\n            var _availableEquipment$s, _availableEquipment$h, _availableEquipment$b;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: config.loading ? 'loading-row' : '',\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: config.name,\n                  onChange: e => {\n                    setConfigurations(prev => prev.map(c => c.id === config.id ? {\n                      ...c,\n                      name: e.target.value\n                    } : c));\n                  },\n                  className: \"config-name-input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 673,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 672,\n                columnNumber: 17\n              }, this), selectedEquipment.solarPanels && /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: config.selections.solar || '',\n                  onChange: e => handleEquipmentChange(config.id, 'solar', e.target.value),\n                  className: \"equipment-select\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Please select...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 692,\n                    columnNumber: 23\n                  }, this), (_availableEquipment$s = availableEquipment.solar) === null || _availableEquipment$s === void 0 ? void 0 : _availableEquipment$s.map(panel => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: panel.id,\n                    children: [panel.name, \" (\", panel.ratedPowerPerPanel, \"W)\"]\n                  }, panel.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 694,\n                    columnNumber: 25\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 687,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 686,\n                columnNumber: 19\n              }, this), selectedEquipment.heatPump && /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: config.selections.heatPump || '',\n                  onChange: e => handleEquipmentChange(config.id, 'heatPump', e.target.value),\n                  className: \"equipment-select\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Please select...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 709,\n                    columnNumber: 23\n                  }, this), (_availableEquipment$h = availableEquipment.heatPump) === null || _availableEquipment$h === void 0 ? void 0 : _availableEquipment$h.map(heatPump => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: heatPump.id,\n                    children: [heatPump.name, \" (COP: \", heatPump.cop, \")\"]\n                  }, heatPump.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 711,\n                    columnNumber: 25\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 704,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 703,\n                columnNumber: 19\n              }, this), selectedEquipment.batteryStorage && /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: config.selections.battery || '',\n                  onChange: e => handleEquipmentChange(config.id, 'battery', e.target.value),\n                  className: \"equipment-select\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Please select...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 726,\n                    columnNumber: 23\n                  }, this), (_availableEquipment$b = availableEquipment.battery) === null || _availableEquipment$b === void 0 ? void 0 : _availableEquipment$b.map(battery => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: battery.id,\n                    children: [battery.name, \" (\", battery.capacityKwh, \"kWh)\"]\n                  }, battery.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 728,\n                    columnNumber: 25\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 721,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 720,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: config.loading ? 'Calculating...' : formatInstallationCostWithSubsidy(config.calculations.installationCost)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 736,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"clickable-cell\",\n                onClick: () => !config.loading && showMonthlyChart(config, 'generation', 'Monthly Generation (kWh)'),\n                children: config.loading ? 'Calculating...' : formatNumber(config.calculations.annualGeneration, ' kWh')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 738,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"clickable-cell\",\n                onClick: () => !config.loading && showMonthlyChart(config, 'savings', 'Monthly Savings (£)'),\n                children: config.loading ? 'Calculating...' : formatCurrency(config.calculations.annualSavings)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 745,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"clickable-cell\",\n                onClick: () => !config.loading && showMonthlyChart(config, 'exportRevenue', 'Monthly Export Revenue (£)'),\n                children: config.loading ? 'Calculating...' : formatCurrency(config.calculations.annualExportRevenue)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 752,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"clickable-cell\",\n                onClick: () => !config.loading && showMonthlyChart(config, 'co2Savings', 'Monthly CO₂ Savings (kg)'),\n                children: config.loading ? 'Calculating...' : formatNumber(config.calculations.annualCO2Savings, ' kg')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 759,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: config.loading ? 'Calculating...' : formatNumber(config.calculations.paybackPeriod, ' years')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 766,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn-remove\",\n                  onClick: () => removeConfiguration(config.id),\n                  disabled: configurations.length <= 1,\n                  title: \"Remove configuration\",\n                  children: \"\\xD7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 769,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 768,\n                columnNumber: 17\n              }, this)]\n            }, config.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 671,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 669,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 622,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary\",\n        onClick: addConfiguration,\n        children: \"+ Add Custom Configuration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 785,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"table-hint\",\n        children: \"The first 3 are our recommendations. Modify them or add your own configurations.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 788,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 784,\n      columnNumber: 7\n    }, this), showChart.visible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-modal-overlay\",\n      onClick: () => setShowChart({\n        visible: false,\n        data: null,\n        title: ''\n      }),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-modal\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: showChart.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 798,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chart-close-button\",\n            onClick: () => setShowChart({\n              visible: false,\n              data: null,\n              title: ''\n            }),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 799,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 797,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: /*#__PURE__*/_jsxDEV(Line, {\n            data: showChart.data,\n            options: showChart.options\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 807,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 806,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 796,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 795,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comparison-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary\",\n        onClick: onBack,\n        children: \"Back to Equipment Selection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 814,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 813,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 620,\n    columnNumber: 5\n  }, this);\n};\n_s(ConfigurationComparison, \"5Lz1cmPciLa3B07XiDMOj8qfg5Y=\");\n_c = ConfigurationComparison;\nexport default ConfigurationComparison;\nvar _c;\n$RefreshReg$(_c, \"ConfigurationComparison\");","map":{"version":3,"names":["React","useState","useEffect","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","ConfigurationComparison","selectedEquipment","userData","onBack","appliedSubsidies","totalSubsidyAmount","_s","availableEquipment","setAvailableEquipment","configurations","setConfigurations","loading","setLoading","showChart","setShowChart","visible","data","title","calculateNetInstallationCost","grossCost","subsidyAmount","Math","max","formatInstallationCostWithSubsidy","netCost","className","children","formatCurrency","fileName","_jsxFileName","lineNumber","columnNumber","loadAvailableEquipment","promises","solarPanels","push","fetch","then","res","json","type","heatPump","batteryStorage","results","Promise","all","available","forEach","result","recommendedConfigurations","generateRecommendedConfigurations","error","console","configs","id","name","selections","getCostEffectiveSelections","calculations","installationCost","annualGeneration","annualSavings","annualExportRevenue","annualCO2Savings","paybackPeriod","monthlyData","generation","Array","fill","savings","exportRevenue","co2Savings","getEcoFriendlySelections","getBalancedSelections","config","hasValidSelections","calculateConfigurationPerformance","solar","battery","length","cheapestSolar","reduce","min","panel","price","cheapestHeatPump","pump","cost","cheapestBattery","bestSolar","best","efficiency","ratedPowerPerPanel","bestHeatPump","cop","bestBattery","capacityKwh","sortedSolar","sort","a","b","middleIndex","floor","sortedHeatPumps","sortedBatteries","Object","values","some","selection","calculationRequest","hasSolarPanels","Boolean","hasHeatPump","hasBattery","solarPanelTypeIds","Number","heatPumpTypeIds","batteryIds","houseArea","occupants","roofArea","latitude","longitude","annualElectricityUsageKwh","annualElectricityUsage","annualGasUsageKwh","annualGasUsage","monthlyElectricityUsageKwh","monthlyElectricityUsage","homeOccupancyFactor","electricityRate","gasRate","exportRate","peakElectricityRate","offPeakElectricityRate","solarInstallationComplexity","heatPumpInstallationComplexity","batteryInstallationComplexity","log","response","method","headers","body","JSON","stringify","ok","processCalculationResult","errorText","text","status","statusText","createEmptyConfiguration","configNumber","handleEquipmentChange","configId","equipmentType","equipmentId","prev","map","recalculateConfiguration","changedEquipmentType","changedEquipmentId","find","c","updatedSelections","totalCost","totalGeneration","totalSavings","totalExportRevenue","totalCO2Savings","monthlyGeneration","monthlySavings","monthlyExportRevenue","monthlyCO2Savings","solarPanelOptions","heatPumpOptions","batteryOptions","option","annualCostSavings","annualTotalCO2Savings","value","index","monthlyCostSavings","monthlyDirectCO2Savings","monthlyIndirectCO2Savings","direct","indirect","addConfiguration","newId","removeConfiguration","filter","showMonthlyChart","dataType","months","chartData","labels","datasets","label","borderColor","getChartColor","backgroundColor","tension","chartOptions","responsive","plugins","legend","position","display","scales","y","beginAtZero","options","colors","round","toLocaleString","formatNumber","unit","getEquipmentName","equipment","e","toFixed","onClick","_availableEquipment$s","_availableEquipment$h","_availableEquipment$b","onChange","target","disabled","stopPropagation","_c","$RefreshReg$"],"sources":["/Users/xuefei/Desktop/calculator00 copy 3/calculator/renewableCalculator.ui/src/components/steps/ConfigurationComparison.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst ConfigurationComparison = ({ selectedEquipment, userData, onBack, appliedSubsidies, totalSubsidyAmount }) => {\n  const [availableEquipment, setAvailableEquipment] = useState({});\n  const [configurations, setConfigurations] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showChart, setShowChart] = useState({ visible: false, data: null, title: '' });\n\n  // Helper function to calculate net installation cost after subsidies\n  const calculateNetInstallationCost = (grossCost) => {\n    const subsidyAmount = totalSubsidyAmount || 0;\n    return Math.max(0, grossCost - subsidyAmount);\n  };\n\n  // Helper function to format installation cost display with subsidy information\n  const formatInstallationCostWithSubsidy = (grossCost) => {\n    const subsidyAmount = totalSubsidyAmount || 0;\n    const netCost = calculateNetInstallationCost(grossCost);\n    \n    if (subsidyAmount > 0) {\n      return (\n        <div className=\"cost-breakdown\">\n          <div className=\"gross-cost\">{formatCurrency(grossCost)}</div>\n          <div className=\"subsidy-deduction\">- {formatCurrency(subsidyAmount)} (subsidy)</div>\n          <div className=\"net-cost\"><strong>{formatCurrency(netCost)}</strong></div>\n        </div>\n      );\n    }\n    \n    return formatCurrency(grossCost);\n  };\n\n  useEffect(() => {\n    loadAvailableEquipment();\n  }, [selectedEquipment]);\n\n  const loadAvailableEquipment = async () => {\n    try {\n      const promises = [];\n      \n      if (selectedEquipment.solarPanels) {\n        promises.push(\n          fetch('http://localhost:8080/api/equipment/solar-panels/available')\n            .then(res => res.json())\n            .then(data => ({ type: 'solar', data }))\n        );\n      }\n      \n      if (selectedEquipment.heatPump) {\n        promises.push(\n          fetch('http://localhost:8080/api/equipment/heat-pumps/available')\n            .then(res => res.json())\n            .then(data => ({ type: 'heatPump', data }))\n        );\n      }\n      \n      if (selectedEquipment.batteryStorage) {\n        promises.push(\n          fetch('http://localhost:8080/api/equipment/batteries/available')\n            .then(res => res.json())\n            .then(data => ({ type: 'battery', data }))\n        );\n      }\n\n      const results = await Promise.all(promises);\n      \n      const available = {};\n      results.forEach(result => {\n        available[result.type] = result.data;\n      });\n      \n      setAvailableEquipment(available);\n      \n      // Generate 3 recommended configurations\n      const recommendedConfigurations = await generateRecommendedConfigurations(available);\n      setConfigurations(recommendedConfigurations);\n      \n    } catch (error) {\n      console.error('Error loading available equipment:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const generateRecommendedConfigurations = async (available) => {\n    const configs = [];\n    \n    // Configuration 1: Most Cost-Effective (cheapest installation cost)\n    configs.push({\n      id: 1,\n      name: \"Most Cost-Effective\",\n      selections: getCostEffectiveSelections(available),\n      calculations: {\n        installationCost: 0,\n        annualGeneration: 0,\n        annualSavings: 0,\n        annualExportRevenue: 0,\n        annualCO2Savings: 0,\n        paybackPeriod: 0,\n        monthlyData: {\n          generation: new Array(12).fill(0),\n          savings: new Array(12).fill(0),\n          exportRevenue: new Array(12).fill(0),\n          co2Savings: new Array(12).fill(0)\n        }\n      },\n      loading: false\n    });\n\n    // Configuration 2: Most Eco-Friendly (maximum CO2 savings)\n    configs.push({\n      id: 2,\n      name: \"Most Eco-Friendly\",\n      selections: getEcoFriendlySelections(available),\n      calculations: {\n        installationCost: 0,\n        annualGeneration: 0,\n        annualSavings: 0,\n        annualExportRevenue: 0,\n        annualCO2Savings: 0,\n        paybackPeriod: 0,\n        monthlyData: {\n          generation: new Array(12).fill(0),\n          savings: new Array(12).fill(0),\n          exportRevenue: new Array(12).fill(0),\n          co2Savings: new Array(12).fill(0)\n        }\n      },\n      loading: false\n    });\n\n    // Configuration 3: Balanced Option (best overall value)\n    configs.push({\n      id: 3,\n      name: \"Balanced Option\",\n      selections: getBalancedSelections(available),\n      calculations: {\n        installationCost: 0,\n        annualGeneration: 0,\n        annualSavings: 0,\n        annualExportRevenue: 0,\n        annualCO2Savings: 0,\n        paybackPeriod: 0,\n        monthlyData: {\n          generation: new Array(12).fill(0),\n          savings: new Array(12).fill(0),\n          exportRevenue: new Array(12).fill(0),\n          co2Savings: new Array(12).fill(0)\n        }\n      },\n      loading: false\n    });\n\n    // Calculate performance for each configuration\n    for (let config of configs) {\n      if (hasValidSelections(config.selections)) {\n        await calculateConfigurationPerformance(config);\n      }\n    }\n\n    return configs;\n  };\n\n  const getCostEffectiveSelections = (available) => {\n    const selections = {\n      solar: selectedEquipment.solarPanels ? null : null,\n      heatPump: selectedEquipment.heatPump ? null : null,\n      battery: selectedEquipment.batteryStorage ? null : null,\n    };\n\n    // Select cheapest options (assuming lower price or basic models)\n    if (selectedEquipment.solarPanels && available.solar && available.solar.length > 0) {\n      // Find the most cost-effective solar panel (lowest price if available, otherwise first option)\n      const cheapestSolar = available.solar.reduce((min, panel) => \n        (panel.price && min.price && panel.price < min.price) ? panel : min\n      );\n      selections.solar = cheapestSolar.id;\n    }\n\n    if (selectedEquipment.heatPump && available.heatPump && available.heatPump.length > 0) {\n      // Select most cost-effective heat pump (lowest cost)\n      const cheapestHeatPump = available.heatPump.reduce((min, pump) => \n        (pump.cost && min.cost && pump.cost < min.cost) ? pump : min\n      );\n      selections.heatPump = cheapestHeatPump.id;\n    }\n\n    if (selectedEquipment.batteryStorage && available.battery && available.battery.length > 0) {\n      // Select most cost-effective battery (lowest cost)\n      const cheapestBattery = available.battery.reduce((min, battery) => \n        (battery.cost && min.cost && battery.cost < min.cost) ? battery : min\n      );\n      selections.battery = cheapestBattery.id;\n    }\n\n    return selections;\n  };\n\n  const getEcoFriendlySelections = (available) => {\n    const selections = {\n      solar: selectedEquipment.solarPanels ? null : null,\n      heatPump: selectedEquipment.heatPump ? null : null,\n      battery: selectedEquipment.batteryStorage ? null : null,\n    };\n\n    // Select highest efficiency/performance options\n    if (selectedEquipment.solarPanels && available.solar && available.solar.length > 0) {\n      // Find highest efficiency or power solar panel\n      const bestSolar = available.solar.reduce((best, panel) => \n        (panel.efficiency && best.efficiency && panel.efficiency > best.efficiency) ? panel : \n        (panel.ratedPowerPerPanel && best.ratedPowerPerPanel && panel.ratedPowerPerPanel > best.ratedPowerPerPanel) ? panel : best\n      );\n      selections.solar = bestSolar.id;\n    }\n\n    if (selectedEquipment.heatPump && available.heatPump && available.heatPump.length > 0) {\n      // Select highest COP heat pump\n      const bestHeatPump = available.heatPump.reduce((best, pump) => \n        (pump.cop && best.cop && pump.cop > best.cop) ? pump : best\n      );\n      selections.heatPump = bestHeatPump.id;\n    }\n\n    if (selectedEquipment.batteryStorage && available.battery && available.battery.length > 0) {\n      // Select largest capacity battery\n      const bestBattery = available.battery.reduce((best, battery) => \n        (battery.capacityKwh && best.capacityKwh && battery.capacityKwh > best.capacityKwh) ? battery : best\n      );\n      selections.battery = bestBattery.id;\n    }\n\n    return selections;\n  };\n\n  const getBalancedSelections = (available) => {\n    const selections = {\n      solar: selectedEquipment.solarPanels ? null : null,\n      heatPump: selectedEquipment.heatPump ? null : null,\n      battery: selectedEquipment.batteryStorage ? null : null,\n    };\n\n    // Select middle-range options (good balance of cost and performance)\n    if (selectedEquipment.solarPanels && available.solar && available.solar.length > 0) {\n      const sortedSolar = [...available.solar].sort((a, b) => \n        (a.price || 0) - (b.price || 0)\n      );\n      const middleIndex = Math.floor(sortedSolar.length / 2);\n      selections.solar = sortedSolar[middleIndex].id;\n    }\n\n    if (selectedEquipment.heatPump && available.heatPump && available.heatPump.length > 0) {\n      const sortedHeatPumps = [...available.heatPump].sort((a, b) => \n        (a.cost || 0) - (b.cost || 0)\n      );\n      const middleIndex = Math.floor(sortedHeatPumps.length / 2);\n      selections.heatPump = sortedHeatPumps[middleIndex].id;\n    }\n\n    if (selectedEquipment.batteryStorage && available.battery && available.battery.length > 0) {\n      const sortedBatteries = [...available.battery].sort((a, b) => \n        (a.cost || 0) - (b.cost || 0)\n      );\n      const middleIndex = Math.floor(sortedBatteries.length / 2);\n      selections.battery = sortedBatteries[middleIndex].id;\n    }\n\n    return selections;\n  };\n\n  const hasValidSelections = (selections) => {\n    return Object.values(selections).some(selection => selection !== null && selection !== '');\n  };\n\n  const calculateConfigurationPerformance = async (config) => {\n    try {\n      const calculationRequest = {\n        hasSolarPanels: Boolean(selectedEquipment.solarPanels),\n        hasHeatPump: Boolean(selectedEquipment.heatPump),\n        hasBattery: Boolean(selectedEquipment.batteryStorage),\n        solarPanelTypeIds: config.selections.solar ? [Number(config.selections.solar)] : [],\n        heatPumpTypeIds: config.selections.heatPump ? [Number(config.selections.heatPump)] : [],\n        batteryIds: config.selections.battery ? [Number(config.selections.battery)] : [],\n        houseArea: Number(userData.houseArea) || 120,\n        occupants: Number(userData.occupants) || 3,\n        roofArea: Number(userData.roofArea) || 60,  // Increased from 30 to 60 sq meters\n        latitude: Number(userData.latitude) || 51.5,\n        longitude: Number(userData.longitude) || -0.1,\n        annualElectricityUsageKwh: Number(userData.annualElectricityUsage) || 3500,\n        annualGasUsageKwh: Number(userData.annualGasUsage) || 18000,\n        monthlyElectricityUsageKwh: Number(userData.monthlyElectricityUsage) || 290,\n        homeOccupancyFactor: Number(userData.homeOccupancyFactor) || 0.6,\n        electricityRate: Number(userData.electricityRate) || 25,  // Pence per kWh\n        gasRate: Number(userData.gasRate) || 8,     // Pence per kWh\n        exportRate: Number(userData.exportRate) || 15,  // Pence per kWh\n        peakElectricityRate: Number(userData.peakElectricityRate) || 35,\n        offPeakElectricityRate: Number(userData.offPeakElectricityRate) || 12,\n        solarInstallationComplexity: Number(userData.solarInstallationComplexity) || 1.2,\n        heatPumpInstallationComplexity: Number(userData.heatPumpInstallationComplexity) || 1.5,\n        batteryInstallationComplexity: Number(userData.batteryInstallationComplexity) || 1.1,\n      };\n\n      console.log('Sending calculation request:', calculationRequest); // Debug log\n\n      const response = await fetch('http://localhost:8080/api/equipment/compare', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(calculationRequest)\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        console.log('Received calculation result:', result); // Debug log\n        config.calculations = processCalculationResult(result);\n      } else {\n        const errorText = await response.text();\n        console.error('API response error:', response.status, response.statusText, errorText);\n      }\n    } catch (error) {\n      console.error('Error calculating configuration performance:', error);\n    }\n  };\n\n  const createEmptyConfiguration = (configNumber) => ({\n    id: configNumber,\n    name: `Configuration ${configNumber}`,\n    selections: {\n      solar: selectedEquipment.solarPanels ? '' : null,\n      heatPump: selectedEquipment.heatPump ? '' : null,\n      battery: selectedEquipment.batteryStorage ? '' : null,\n    },\n    calculations: {\n      installationCost: 0,\n      annualGeneration: 0,\n      annualSavings: 0,\n      annualExportRevenue: 0,\n      annualCO2Savings: 0,\n      paybackPeriod: 0,\n      monthlyData: {\n        generation: new Array(12).fill(0),\n        savings: new Array(12).fill(0),\n        exportRevenue: new Array(12).fill(0),\n        co2Savings: new Array(12).fill(0)\n      }\n    },\n    loading: false\n  });\n\n  const handleEquipmentChange = async (configId, equipmentType, equipmentId) => {\n    // Update the selection\n    setConfigurations(prev => prev.map(config => {\n      if (config.id === configId) {\n        return {\n          ...config,\n          selections: {\n            ...config.selections,\n            [equipmentType]: equipmentId\n          },\n          loading: true\n        };\n      }\n      return config;\n    }));\n\n    // Recalculate for this configuration\n    await recalculateConfiguration(configId, equipmentType, equipmentId);\n  };\n\n  const recalculateConfiguration = async (configId, changedEquipmentType, changedEquipmentId) => {\n    try {\n      const config = configurations.find(c => c.id === configId);\n      if (!config) return;\n\n      // Update the changed selection\n      const updatedSelections = {\n        ...config.selections,\n        [changedEquipmentType]: changedEquipmentId\n      };\n\n      // Build request for calculation\n      const calculationRequest = {\n        hasSolarPanels: Boolean(selectedEquipment.solarPanels),\n        hasHeatPump: Boolean(selectedEquipment.heatPump),\n        hasBattery: Boolean(selectedEquipment.batteryStorage),\n        solarPanelTypeIds: updatedSelections.solar ? [Number(updatedSelections.solar)] : [],\n        heatPumpTypeIds: updatedSelections.heatPump ? [Number(updatedSelections.heatPump)] : [],\n        batteryIds: updatedSelections.battery ? [Number(updatedSelections.battery)] : [],\n        houseArea: Number(userData.houseArea) || 120,\n        occupants: Number(userData.occupants) || 3,\n        roofArea: Number(userData.roofArea) || 60,  // Increased from 30 to 60 sq meters\n        latitude: Number(userData.latitude) || 51.5,\n        longitude: Number(userData.longitude) || -0.1,\n        annualElectricityUsageKwh: Number(userData.annualElectricityUsage) || 3500,\n        annualGasUsageKwh: Number(userData.annualGasUsage) || 18000,\n        monthlyElectricityUsageKwh: Number(userData.monthlyElectricityUsage) || 290,\n        homeOccupancyFactor: Number(userData.homeOccupancyFactor) || 0.6,\n        electricityRate: Number(userData.electricityRate) || 25,  // Pence per kWh\n        gasRate: Number(userData.gasRate) || 8,     // Pence per kWh\n        exportRate: Number(userData.exportRate) || 15,  // Pence per kWh\n        peakElectricityRate: Number(userData.peakElectricityRate) || 35,\n        offPeakElectricityRate: Number(userData.offPeakElectricityRate) || 12,\n        solarInstallationComplexity: Number(userData.solarInstallationComplexity) || 1.2,\n        heatPumpInstallationComplexity: Number(userData.heatPumpInstallationComplexity) || 1.5,\n        batteryInstallationComplexity: Number(userData.batteryInstallationComplexity) || 1.1,\n      };\n\n      const response = await fetch('http://localhost:8080/api/equipment/compare', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(calculationRequest)\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        const calculations = processCalculationResult(result);\n        \n        setConfigurations(prev => prev.map(config => {\n          if (config.id === configId) {\n            return {\n              ...config,\n              selections: updatedSelections,\n              calculations,\n              loading: false\n            };\n          }\n          return config;\n        }));\n      }\n    } catch (error) {\n      console.error('Error recalculating configuration:', error);\n      setConfigurations(prev => prev.map(config => {\n        if (config.id === configId) {\n          return { ...config, loading: false };\n        }\n        return config;\n      }));\n    }\n  };\n\n  const processCalculationResult = (result) => {\n    let totalCost = 0;\n    let totalGeneration = 0;\n    let totalSavings = 0;\n    let totalExportRevenue = 0;\n    let totalCO2Savings = 0;\n    const monthlyGeneration = new Array(12).fill(0);\n    const monthlySavings = new Array(12).fill(0);\n    const monthlyExportRevenue = new Array(12).fill(0);\n    const monthlyCO2Savings = new Array(12).fill(0);\n\n    // Aggregate data from all equipment types\n    [...(result.solarPanelOptions || []), ...(result.heatPumpOptions || []), ...(result.batteryOptions || [])].forEach(option => {\n      totalCost += option.installationCost || 0;\n      totalGeneration += option.annualGeneration || 0;\n      totalSavings += option.annualCostSavings || 0;\n      totalExportRevenue += option.annualExportRevenue || 0;\n      totalCO2Savings += option.annualTotalCO2Savings || 0;\n\n      // Aggregate monthly data\n      if (option.monthlyGeneration) {\n        option.monthlyGeneration.forEach((value, index) => {\n          monthlyGeneration[index] += value || 0;\n        });\n      }\n      if (option.monthlyCostSavings) {\n        option.monthlyCostSavings.forEach((value, index) => {\n          monthlySavings[index] += value || 0;\n        });\n      }\n      if (option.monthlyExportRevenue) {\n        option.monthlyExportRevenue.forEach((value, index) => {\n          monthlyExportRevenue[index] += value || 0;\n        });\n      }\n      if (option.monthlyDirectCO2Savings && option.monthlyIndirectCO2Savings) {\n        option.monthlyDirectCO2Savings.forEach((direct, index) => {\n          const indirect = option.monthlyIndirectCO2Savings[index] || 0;\n          monthlyCO2Savings[index] += (direct || 0) + indirect;\n        });\n      }\n    });\n\n    const paybackPeriod = (totalSavings + totalExportRevenue) > 0 ? \n      totalCost / (totalSavings + totalExportRevenue) : 999;\n\n    return {\n      installationCost: totalCost,\n      annualGeneration: totalGeneration,\n      annualSavings: totalSavings,\n      annualExportRevenue: totalExportRevenue,\n      annualCO2Savings: totalCO2Savings,\n      paybackPeriod: paybackPeriod,\n      monthlyData: {\n        generation: monthlyGeneration,\n        savings: monthlySavings,\n        exportRevenue: monthlyExportRevenue,\n        co2Savings: monthlyCO2Savings\n      }\n    };\n  };\n\n  const addConfiguration = () => {\n    const newId = Math.max(...configurations.map(c => c.id)) + 1;\n    setConfigurations(prev => [...prev, createEmptyConfiguration(newId)]);\n  };\n\n  const removeConfiguration = (configId) => {\n    if (configurations.length > 1) {\n      setConfigurations(prev => prev.filter(c => c.id !== configId));\n    }\n  };\n\n  const showMonthlyChart = (config, dataType, title) => {\n    const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', \n                   'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    \n    let monthlyData = [];\n    switch (dataType) {\n      case 'generation':\n        monthlyData = config.calculations.monthlyData.generation;\n        break;\n      case 'savings':\n        monthlyData = config.calculations.monthlyData.savings;\n        break;\n      case 'exportRevenue':\n        monthlyData = config.calculations.monthlyData.exportRevenue;\n        break;\n      case 'co2Savings':\n        monthlyData = config.calculations.monthlyData.co2Savings;\n        break;\n      default:\n        monthlyData = [];\n    }\n\n    const chartData = {\n      labels: months,\n      datasets: [{\n        label: title,\n        data: monthlyData,\n        borderColor: getChartColor(dataType),\n        backgroundColor: getChartColor(dataType) + '20',\n        tension: 0.4,\n        fill: true\n      }]\n    };\n\n    const chartOptions = {\n      responsive: true,\n      plugins: {\n        legend: { position: 'top' },\n        title: { display: true, text: `${config.name} - ${title}` }\n      },\n      scales: {\n        y: { beginAtZero: true }\n      }\n    };\n\n    setShowChart({\n      visible: true,\n      data: chartData,\n      options: chartOptions,\n      title: `${config.name} - ${title}`\n    });\n  };\n\n  const getChartColor = (dataType) => {\n    const colors = {\n      generation: '#3498db',\n      savings: '#27ae60',\n      exportRevenue: '#f39c12',\n      co2Savings: '#e74c3c'\n    };\n    return colors[dataType] || '#34495e';\n  };\n\n  const formatCurrency = (value) => {\n    return value ? `£${Math.round(value).toLocaleString()}` : '£0';\n  };\n\n  const formatNumber = (value, unit = '') => {\n    return value ? `${Math.round(value).toLocaleString()}${unit}` : `0${unit}`;\n  };\n\n  const getEquipmentName = (equipmentType, equipmentId) => {\n    if (!equipmentId || !availableEquipment[equipmentType]) return '';\n    const equipment = availableEquipment[equipmentType].find(e => e.id == equipmentId);\n    return equipment ? equipment.name : '';\n  };\n\n  if (loading) {\n    return (\n      <div className=\"configuration-comparison-loading\">\n        <h3>Loading Equipment Options...</h3>\n        <p>Generating recommended configurations for you.</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"configuration-comparison\">\n      <div className=\"configuration-table-container\">\n        <table className=\"configuration-table\">\n          <thead>\n            <tr>\n              <th>Configuration Name</th>\n              {selectedEquipment.solarPanels && <th>Solar Panels</th>}\n              {selectedEquipment.heatPump && <th>Heat Pump</th>}\n              {selectedEquipment.batteryStorage && <th>Battery Storage</th>}\n              <th>\n                {totalSubsidyAmount > 0 ? 'Net Installation Cost' : 'Installation Cost'}\n                {totalSubsidyAmount > 0 && (\n                  <div className=\"cost-header-note\">\n                    (after £{totalSubsidyAmount.toFixed(0)} subsidy)\n                  </div>\n                )}\n              </th>\n              <th \n                className=\"clickable-header\" \n                onClick={() => showMonthlyChart('generation', 'Monthly Generation (kWh)', 'monthlyGeneration')}\n                title=\"Click to view monthly breakdown\"\n              >\n                Annual Generation\n              </th>\n              <th \n                className=\"clickable-header\"\n                onClick={() => showMonthlyChart('savings', 'Monthly Savings (£)', 'monthlySavings')}\n                title=\"Click to view monthly breakdown\"\n              >\n                Annual Savings\n              </th>\n              <th \n                className=\"clickable-header\"\n                onClick={() => showMonthlyChart('exportRevenue', 'Monthly Export Revenue (£)', 'monthlyExportRevenue')}\n                title=\"Click to view monthly breakdown\"\n              >\n                Annual Export Revenue\n              </th>\n              <th \n                className=\"clickable-header\"\n                onClick={() => showMonthlyChart('co2Savings', 'Monthly CO₂ Savings (kg)', 'monthlyCo2Savings')}\n                title=\"Click to view monthly breakdown\"\n              >\n                Annual CO₂ Savings\n              </th>\n              <th>Payback Period</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {configurations.map(config => (\n              <tr key={config.id} className={config.loading ? 'loading-row' : ''}>\n                <td>\n                  <input \n                    type=\"text\" \n                    value={config.name}\n                    onChange={(e) => {\n                      setConfigurations(prev => prev.map(c => \n                        c.id === config.id ? { ...c, name: e.target.value } : c\n                      ));\n                    }}\n                    className=\"config-name-input\"\n                  />\n                </td>\n                \n                {selectedEquipment.solarPanels && (\n                  <td>\n                    <select \n                      value={config.selections.solar || ''}\n                      onChange={(e) => handleEquipmentChange(config.id, 'solar', e.target.value)}\n                      className=\"equipment-select\"\n                    >\n                      <option value=\"\">Please select...</option>\n                      {availableEquipment.solar?.map(panel => (\n                        <option key={panel.id} value={panel.id}>\n                          {panel.name} ({panel.ratedPowerPerPanel}W)\n                        </option>\n                      ))}\n                    </select>\n                  </td>\n                )}\n                \n                {selectedEquipment.heatPump && (\n                  <td>\n                    <select \n                      value={config.selections.heatPump || ''}\n                      onChange={(e) => handleEquipmentChange(config.id, 'heatPump', e.target.value)}\n                      className=\"equipment-select\"\n                    >\n                      <option value=\"\">Please select...</option>\n                      {availableEquipment.heatPump?.map(heatPump => (\n                        <option key={heatPump.id} value={heatPump.id}>\n                          {heatPump.name} (COP: {heatPump.cop})\n                        </option>\n                      ))}\n                    </select>\n                  </td>\n                )}\n                \n                {selectedEquipment.batteryStorage && (\n                  <td>\n                    <select \n                      value={config.selections.battery || ''}\n                      onChange={(e) => handleEquipmentChange(config.id, 'battery', e.target.value)}\n                      className=\"equipment-select\"\n                    >\n                      <option value=\"\">Please select...</option>\n                      {availableEquipment.battery?.map(battery => (\n                        <option key={battery.id} value={battery.id}>\n                          {battery.name} ({battery.capacityKwh}kWh)\n                        </option>\n                      ))}\n                    </select>\n                  </td>\n                )}\n                \n                <td>{config.loading ? 'Calculating...' : formatInstallationCostWithSubsidy(config.calculations.installationCost)}</td>\n                \n                <td \n                  className=\"clickable-cell\"\n                  onClick={() => !config.loading && showMonthlyChart(config, 'generation', 'Monthly Generation (kWh)')}\n                >\n                  {config.loading ? 'Calculating...' : formatNumber(config.calculations.annualGeneration, ' kWh')}\n                </td>\n                \n                <td \n                  className=\"clickable-cell\"\n                  onClick={() => !config.loading && showMonthlyChart(config, 'savings', 'Monthly Savings (£)')}\n                >\n                  {config.loading ? 'Calculating...' : formatCurrency(config.calculations.annualSavings)}\n                </td>\n                \n                <td \n                  className=\"clickable-cell\"\n                  onClick={() => !config.loading && showMonthlyChart(config, 'exportRevenue', 'Monthly Export Revenue (£)')}\n                >\n                  {config.loading ? 'Calculating...' : formatCurrency(config.calculations.annualExportRevenue)}\n                </td>\n                \n                <td \n                  className=\"clickable-cell\"\n                  onClick={() => !config.loading && showMonthlyChart(config, 'co2Savings', 'Monthly CO₂ Savings (kg)')}\n                >\n                  {config.loading ? 'Calculating...' : formatNumber(config.calculations.annualCO2Savings, ' kg')}\n                </td>\n                \n                <td>{config.loading ? 'Calculating...' : formatNumber(config.calculations.paybackPeriod, ' years')}</td>\n                \n                <td>\n                  <button \n                    className=\"btn-remove\" \n                    onClick={() => removeConfiguration(config.id)}\n                    disabled={configurations.length <= 1}\n                    title=\"Remove configuration\"\n                  >\n                    ×\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n\n      <div className=\"table-actions\">\n        <button className=\"btn btn-secondary\" onClick={addConfiguration}>\n          + Add Custom Configuration\n        </button>\n        <span className=\"table-hint\">\n           The first 3 are our recommendations. Modify them or add your own configurations.\n        </span>\n      </div>\n\n      {/* Monthly Chart Modal */}\n      {showChart.visible && (\n        <div className=\"chart-modal-overlay\" onClick={() => setShowChart({ visible: false, data: null, title: '' })}>\n          <div className=\"chart-modal\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"chart-modal-header\">\n              <h4>{showChart.title}</h4>\n              <button \n                className=\"chart-close-button\"\n                onClick={() => setShowChart({ visible: false, data: null, title: '' })}\n              >\n                ×\n              </button>\n            </div>\n            <div className=\"chart-container\">\n              <Line data={showChart.data} options={showChart.options} />\n            </div>\n          </div>\n        </div>\n      )}\n\n      <div className=\"comparison-actions\">\n        <button className=\"btn btn-secondary\" onClick={onBack}>\n          Back to Equipment Selection\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ConfigurationComparison; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElBT,OAAO,CAACU,QAAQ,CACdT,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MACF,CAAC;AAED,MAAMI,uBAAuB,GAAGA,CAAC;EAAEC,iBAAiB;EAAEC,QAAQ;EAAEC,MAAM;EAAEC,gBAAgB;EAAEC;AAAmB,CAAC,KAAK;EAAAC,EAAA;EACjH,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGvB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChE,MAAM,CAACwB,cAAc,EAAEC,iBAAiB,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAAC0B,OAAO,EAAEC,UAAU,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAAC4B,SAAS,EAAEC,YAAY,CAAC,GAAG7B,QAAQ,CAAC;IAAE8B,OAAO,EAAE,KAAK;IAAEC,IAAI,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAG,CAAC,CAAC;;EAErF;EACA,MAAMC,4BAA4B,GAAIC,SAAS,IAAK;IAClD,MAAMC,aAAa,GAAGf,kBAAkB,IAAI,CAAC;IAC7C,OAAOgB,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEH,SAAS,GAAGC,aAAa,CAAC;EAC/C,CAAC;;EAED;EACA,MAAMG,iCAAiC,GAAIJ,SAAS,IAAK;IACvD,MAAMC,aAAa,GAAGf,kBAAkB,IAAI,CAAC;IAC7C,MAAMmB,OAAO,GAAGN,4BAA4B,CAACC,SAAS,CAAC;IAEvD,IAAIC,aAAa,GAAG,CAAC,EAAE;MACrB,oBACEtB,OAAA;QAAK2B,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7B5B,OAAA;UAAK2B,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAEC,cAAc,CAACR,SAAS;QAAC;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC7DjC,OAAA;UAAK2B,SAAS,EAAC,mBAAmB;UAAAC,QAAA,GAAC,IAAE,EAACC,cAAc,CAACP,aAAa,CAAC,EAAC,YAAU;QAAA;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACpFjC,OAAA;UAAK2B,SAAS,EAAC,UAAU;UAAAC,QAAA,eAAC5B,OAAA;YAAA4B,QAAA,EAASC,cAAc,CAACH,OAAO;UAAC;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvE,CAAC;IAEV;IAEA,OAAOJ,cAAc,CAACR,SAAS,CAAC;EAClC,CAAC;EAEDjC,SAAS,CAAC,MAAM;IACd8C,sBAAsB,CAAC,CAAC;EAC1B,CAAC,EAAE,CAAC/B,iBAAiB,CAAC,CAAC;EAEvB,MAAM+B,sBAAsB,GAAG,MAAAA,CAAA,KAAY;IACzC,IAAI;MACF,MAAMC,QAAQ,GAAG,EAAE;MAEnB,IAAIhC,iBAAiB,CAACiC,WAAW,EAAE;QACjCD,QAAQ,CAACE,IAAI,CACXC,KAAK,CAAC,4DAA4D,CAAC,CAChEC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACrB,IAAI,KAAK;UAAEwB,IAAI,EAAE,OAAO;UAAExB;QAAK,CAAC,CAAC,CAC3C,CAAC;MACH;MAEA,IAAIf,iBAAiB,CAACwC,QAAQ,EAAE;QAC9BR,QAAQ,CAACE,IAAI,CACXC,KAAK,CAAC,0DAA0D,CAAC,CAC9DC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACrB,IAAI,KAAK;UAAEwB,IAAI,EAAE,UAAU;UAAExB;QAAK,CAAC,CAAC,CAC9C,CAAC;MACH;MAEA,IAAIf,iBAAiB,CAACyC,cAAc,EAAE;QACpCT,QAAQ,CAACE,IAAI,CACXC,KAAK,CAAC,yDAAyD,CAAC,CAC7DC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACrB,IAAI,KAAK;UAAEwB,IAAI,EAAE,SAAS;UAAExB;QAAK,CAAC,CAAC,CAC7C,CAAC;MACH;MAEA,MAAM2B,OAAO,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACZ,QAAQ,CAAC;MAE3C,MAAMa,SAAS,GAAG,CAAC,CAAC;MACpBH,OAAO,CAACI,OAAO,CAACC,MAAM,IAAI;QACxBF,SAAS,CAACE,MAAM,CAACR,IAAI,CAAC,GAAGQ,MAAM,CAAChC,IAAI;MACtC,CAAC,CAAC;MAEFR,qBAAqB,CAACsC,SAAS,CAAC;;MAEhC;MACA,MAAMG,yBAAyB,GAAG,MAAMC,iCAAiC,CAACJ,SAAS,CAAC;MACpFpC,iBAAiB,CAACuC,yBAAyB,CAAC;IAE9C,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC5D,CAAC,SAAS;MACRvC,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMsC,iCAAiC,GAAG,MAAOJ,SAAS,IAAK;IAC7D,MAAMO,OAAO,GAAG,EAAE;;IAElB;IACAA,OAAO,CAAClB,IAAI,CAAC;MACXmB,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,qBAAqB;MAC3BC,UAAU,EAAEC,0BAA0B,CAACX,SAAS,CAAC;MACjDY,YAAY,EAAE;QACZC,gBAAgB,EAAE,CAAC;QACnBC,gBAAgB,EAAE,CAAC;QACnBC,aAAa,EAAE,CAAC;QAChBC,mBAAmB,EAAE,CAAC;QACtBC,gBAAgB,EAAE,CAAC;QACnBC,aAAa,EAAE,CAAC;QAChBC,WAAW,EAAE;UACXC,UAAU,EAAE,IAAIC,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;UACjCC,OAAO,EAAE,IAAIF,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;UAC9BE,aAAa,EAAE,IAAIH,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;UACpCG,UAAU,EAAE,IAAIJ,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC;QAClC;MACF,CAAC;MACDzD,OAAO,EAAE;IACX,CAAC,CAAC;;IAEF;IACA0C,OAAO,CAAClB,IAAI,CAAC;MACXmB,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,mBAAmB;MACzBC,UAAU,EAAEgB,wBAAwB,CAAC1B,SAAS,CAAC;MAC/CY,YAAY,EAAE;QACZC,gBAAgB,EAAE,CAAC;QACnBC,gBAAgB,EAAE,CAAC;QACnBC,aAAa,EAAE,CAAC;QAChBC,mBAAmB,EAAE,CAAC;QACtBC,gBAAgB,EAAE,CAAC;QACnBC,aAAa,EAAE,CAAC;QAChBC,WAAW,EAAE;UACXC,UAAU,EAAE,IAAIC,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;UACjCC,OAAO,EAAE,IAAIF,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;UAC9BE,aAAa,EAAE,IAAIH,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;UACpCG,UAAU,EAAE,IAAIJ,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC;QAClC;MACF,CAAC;MACDzD,OAAO,EAAE;IACX,CAAC,CAAC;;IAEF;IACA0C,OAAO,CAAClB,IAAI,CAAC;MACXmB,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,iBAAiB;MACvBC,UAAU,EAAEiB,qBAAqB,CAAC3B,SAAS,CAAC;MAC5CY,YAAY,EAAE;QACZC,gBAAgB,EAAE,CAAC;QACnBC,gBAAgB,EAAE,CAAC;QACnBC,aAAa,EAAE,CAAC;QAChBC,mBAAmB,EAAE,CAAC;QACtBC,gBAAgB,EAAE,CAAC;QACnBC,aAAa,EAAE,CAAC;QAChBC,WAAW,EAAE;UACXC,UAAU,EAAE,IAAIC,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;UACjCC,OAAO,EAAE,IAAIF,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;UAC9BE,aAAa,EAAE,IAAIH,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;UACpCG,UAAU,EAAE,IAAIJ,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC;QAClC;MACF,CAAC;MACDzD,OAAO,EAAE;IACX,CAAC,CAAC;;IAEF;IACA,KAAK,IAAI+D,MAAM,IAAIrB,OAAO,EAAE;MAC1B,IAAIsB,kBAAkB,CAACD,MAAM,CAAClB,UAAU,CAAC,EAAE;QACzC,MAAMoB,iCAAiC,CAACF,MAAM,CAAC;MACjD;IACF;IAEA,OAAOrB,OAAO;EAChB,CAAC;EAED,MAAMI,0BAA0B,GAAIX,SAAS,IAAK;IAChD,MAAMU,UAAU,GAAG;MACjBqB,KAAK,EAAE5E,iBAAiB,CAACiC,WAAW,GAAG,IAAI,GAAG,IAAI;MAClDO,QAAQ,EAAExC,iBAAiB,CAACwC,QAAQ,GAAG,IAAI,GAAG,IAAI;MAClDqC,OAAO,EAAE7E,iBAAiB,CAACyC,cAAc,GAAG,IAAI,GAAG;IACrD,CAAC;;IAED;IACA,IAAIzC,iBAAiB,CAACiC,WAAW,IAAIY,SAAS,CAAC+B,KAAK,IAAI/B,SAAS,CAAC+B,KAAK,CAACE,MAAM,GAAG,CAAC,EAAE;MAClF;MACA,MAAMC,aAAa,GAAGlC,SAAS,CAAC+B,KAAK,CAACI,MAAM,CAAC,CAACC,GAAG,EAAEC,KAAK,KACrDA,KAAK,CAACC,KAAK,IAAIF,GAAG,CAACE,KAAK,IAAID,KAAK,CAACC,KAAK,GAAGF,GAAG,CAACE,KAAK,GAAID,KAAK,GAAGD,GAClE,CAAC;MACD1B,UAAU,CAACqB,KAAK,GAAGG,aAAa,CAAC1B,EAAE;IACrC;IAEA,IAAIrD,iBAAiB,CAACwC,QAAQ,IAAIK,SAAS,CAACL,QAAQ,IAAIK,SAAS,CAACL,QAAQ,CAACsC,MAAM,GAAG,CAAC,EAAE;MACrF;MACA,MAAMM,gBAAgB,GAAGvC,SAAS,CAACL,QAAQ,CAACwC,MAAM,CAAC,CAACC,GAAG,EAAEI,IAAI,KAC1DA,IAAI,CAACC,IAAI,IAAIL,GAAG,CAACK,IAAI,IAAID,IAAI,CAACC,IAAI,GAAGL,GAAG,CAACK,IAAI,GAAID,IAAI,GAAGJ,GAC3D,CAAC;MACD1B,UAAU,CAACf,QAAQ,GAAG4C,gBAAgB,CAAC/B,EAAE;IAC3C;IAEA,IAAIrD,iBAAiB,CAACyC,cAAc,IAAII,SAAS,CAACgC,OAAO,IAAIhC,SAAS,CAACgC,OAAO,CAACC,MAAM,GAAG,CAAC,EAAE;MACzF;MACA,MAAMS,eAAe,GAAG1C,SAAS,CAACgC,OAAO,CAACG,MAAM,CAAC,CAACC,GAAG,EAAEJ,OAAO,KAC3DA,OAAO,CAACS,IAAI,IAAIL,GAAG,CAACK,IAAI,IAAIT,OAAO,CAACS,IAAI,GAAGL,GAAG,CAACK,IAAI,GAAIT,OAAO,GAAGI,GACpE,CAAC;MACD1B,UAAU,CAACsB,OAAO,GAAGU,eAAe,CAAClC,EAAE;IACzC;IAEA,OAAOE,UAAU;EACnB,CAAC;EAED,MAAMgB,wBAAwB,GAAI1B,SAAS,IAAK;IAC9C,MAAMU,UAAU,GAAG;MACjBqB,KAAK,EAAE5E,iBAAiB,CAACiC,WAAW,GAAG,IAAI,GAAG,IAAI;MAClDO,QAAQ,EAAExC,iBAAiB,CAACwC,QAAQ,GAAG,IAAI,GAAG,IAAI;MAClDqC,OAAO,EAAE7E,iBAAiB,CAACyC,cAAc,GAAG,IAAI,GAAG;IACrD,CAAC;;IAED;IACA,IAAIzC,iBAAiB,CAACiC,WAAW,IAAIY,SAAS,CAAC+B,KAAK,IAAI/B,SAAS,CAAC+B,KAAK,CAACE,MAAM,GAAG,CAAC,EAAE;MAClF;MACA,MAAMU,SAAS,GAAG3C,SAAS,CAAC+B,KAAK,CAACI,MAAM,CAAC,CAACS,IAAI,EAAEP,KAAK,KAClDA,KAAK,CAACQ,UAAU,IAAID,IAAI,CAACC,UAAU,IAAIR,KAAK,CAACQ,UAAU,GAAGD,IAAI,CAACC,UAAU,GAAIR,KAAK,GAClFA,KAAK,CAACS,kBAAkB,IAAIF,IAAI,CAACE,kBAAkB,IAAIT,KAAK,CAACS,kBAAkB,GAAGF,IAAI,CAACE,kBAAkB,GAAIT,KAAK,GAAGO,IACxH,CAAC;MACDlC,UAAU,CAACqB,KAAK,GAAGY,SAAS,CAACnC,EAAE;IACjC;IAEA,IAAIrD,iBAAiB,CAACwC,QAAQ,IAAIK,SAAS,CAACL,QAAQ,IAAIK,SAAS,CAACL,QAAQ,CAACsC,MAAM,GAAG,CAAC,EAAE;MACrF;MACA,MAAMc,YAAY,GAAG/C,SAAS,CAACL,QAAQ,CAACwC,MAAM,CAAC,CAACS,IAAI,EAAEJ,IAAI,KACvDA,IAAI,CAACQ,GAAG,IAAIJ,IAAI,CAACI,GAAG,IAAIR,IAAI,CAACQ,GAAG,GAAGJ,IAAI,CAACI,GAAG,GAAIR,IAAI,GAAGI,IACzD,CAAC;MACDlC,UAAU,CAACf,QAAQ,GAAGoD,YAAY,CAACvC,EAAE;IACvC;IAEA,IAAIrD,iBAAiB,CAACyC,cAAc,IAAII,SAAS,CAACgC,OAAO,IAAIhC,SAAS,CAACgC,OAAO,CAACC,MAAM,GAAG,CAAC,EAAE;MACzF;MACA,MAAMgB,WAAW,GAAGjD,SAAS,CAACgC,OAAO,CAACG,MAAM,CAAC,CAACS,IAAI,EAAEZ,OAAO,KACxDA,OAAO,CAACkB,WAAW,IAAIN,IAAI,CAACM,WAAW,IAAIlB,OAAO,CAACkB,WAAW,GAAGN,IAAI,CAACM,WAAW,GAAIlB,OAAO,GAAGY,IAClG,CAAC;MACDlC,UAAU,CAACsB,OAAO,GAAGiB,WAAW,CAACzC,EAAE;IACrC;IAEA,OAAOE,UAAU;EACnB,CAAC;EAED,MAAMiB,qBAAqB,GAAI3B,SAAS,IAAK;IAC3C,MAAMU,UAAU,GAAG;MACjBqB,KAAK,EAAE5E,iBAAiB,CAACiC,WAAW,GAAG,IAAI,GAAG,IAAI;MAClDO,QAAQ,EAAExC,iBAAiB,CAACwC,QAAQ,GAAG,IAAI,GAAG,IAAI;MAClDqC,OAAO,EAAE7E,iBAAiB,CAACyC,cAAc,GAAG,IAAI,GAAG;IACrD,CAAC;;IAED;IACA,IAAIzC,iBAAiB,CAACiC,WAAW,IAAIY,SAAS,CAAC+B,KAAK,IAAI/B,SAAS,CAAC+B,KAAK,CAACE,MAAM,GAAG,CAAC,EAAE;MAClF,MAAMkB,WAAW,GAAG,CAAC,GAAGnD,SAAS,CAAC+B,KAAK,CAAC,CAACqB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KACjD,CAACD,CAAC,CAACf,KAAK,IAAI,CAAC,KAAKgB,CAAC,CAAChB,KAAK,IAAI,CAAC,CAChC,CAAC;MACD,MAAMiB,WAAW,GAAGhF,IAAI,CAACiF,KAAK,CAACL,WAAW,CAAClB,MAAM,GAAG,CAAC,CAAC;MACtDvB,UAAU,CAACqB,KAAK,GAAGoB,WAAW,CAACI,WAAW,CAAC,CAAC/C,EAAE;IAChD;IAEA,IAAIrD,iBAAiB,CAACwC,QAAQ,IAAIK,SAAS,CAACL,QAAQ,IAAIK,SAAS,CAACL,QAAQ,CAACsC,MAAM,GAAG,CAAC,EAAE;MACrF,MAAMwB,eAAe,GAAG,CAAC,GAAGzD,SAAS,CAACL,QAAQ,CAAC,CAACyD,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KACxD,CAACD,CAAC,CAACZ,IAAI,IAAI,CAAC,KAAKa,CAAC,CAACb,IAAI,IAAI,CAAC,CAC9B,CAAC;MACD,MAAMc,WAAW,GAAGhF,IAAI,CAACiF,KAAK,CAACC,eAAe,CAACxB,MAAM,GAAG,CAAC,CAAC;MAC1DvB,UAAU,CAACf,QAAQ,GAAG8D,eAAe,CAACF,WAAW,CAAC,CAAC/C,EAAE;IACvD;IAEA,IAAIrD,iBAAiB,CAACyC,cAAc,IAAII,SAAS,CAACgC,OAAO,IAAIhC,SAAS,CAACgC,OAAO,CAACC,MAAM,GAAG,CAAC,EAAE;MACzF,MAAMyB,eAAe,GAAG,CAAC,GAAG1D,SAAS,CAACgC,OAAO,CAAC,CAACoB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KACvD,CAACD,CAAC,CAACZ,IAAI,IAAI,CAAC,KAAKa,CAAC,CAACb,IAAI,IAAI,CAAC,CAC9B,CAAC;MACD,MAAMc,WAAW,GAAGhF,IAAI,CAACiF,KAAK,CAACE,eAAe,CAACzB,MAAM,GAAG,CAAC,CAAC;MAC1DvB,UAAU,CAACsB,OAAO,GAAG0B,eAAe,CAACH,WAAW,CAAC,CAAC/C,EAAE;IACtD;IAEA,OAAOE,UAAU;EACnB,CAAC;EAED,MAAMmB,kBAAkB,GAAInB,UAAU,IAAK;IACzC,OAAOiD,MAAM,CAACC,MAAM,CAAClD,UAAU,CAAC,CAACmD,IAAI,CAACC,SAAS,IAAIA,SAAS,KAAK,IAAI,IAAIA,SAAS,KAAK,EAAE,CAAC;EAC5F,CAAC;EAED,MAAMhC,iCAAiC,GAAG,MAAOF,MAAM,IAAK;IAC1D,IAAI;MACF,MAAMmC,kBAAkB,GAAG;QACzBC,cAAc,EAAEC,OAAO,CAAC9G,iBAAiB,CAACiC,WAAW,CAAC;QACtD8E,WAAW,EAAED,OAAO,CAAC9G,iBAAiB,CAACwC,QAAQ,CAAC;QAChDwE,UAAU,EAAEF,OAAO,CAAC9G,iBAAiB,CAACyC,cAAc,CAAC;QACrDwE,iBAAiB,EAAExC,MAAM,CAAClB,UAAU,CAACqB,KAAK,GAAG,CAACsC,MAAM,CAACzC,MAAM,CAAClB,UAAU,CAACqB,KAAK,CAAC,CAAC,GAAG,EAAE;QACnFuC,eAAe,EAAE1C,MAAM,CAAClB,UAAU,CAACf,QAAQ,GAAG,CAAC0E,MAAM,CAACzC,MAAM,CAAClB,UAAU,CAACf,QAAQ,CAAC,CAAC,GAAG,EAAE;QACvF4E,UAAU,EAAE3C,MAAM,CAAClB,UAAU,CAACsB,OAAO,GAAG,CAACqC,MAAM,CAACzC,MAAM,CAAClB,UAAU,CAACsB,OAAO,CAAC,CAAC,GAAG,EAAE;QAChFwC,SAAS,EAAEH,MAAM,CAACjH,QAAQ,CAACoH,SAAS,CAAC,IAAI,GAAG;QAC5CC,SAAS,EAAEJ,MAAM,CAACjH,QAAQ,CAACqH,SAAS,CAAC,IAAI,CAAC;QAC1CC,QAAQ,EAAEL,MAAM,CAACjH,QAAQ,CAACsH,QAAQ,CAAC,IAAI,EAAE;QAAG;QAC5CC,QAAQ,EAAEN,MAAM,CAACjH,QAAQ,CAACuH,QAAQ,CAAC,IAAI,IAAI;QAC3CC,SAAS,EAAEP,MAAM,CAACjH,QAAQ,CAACwH,SAAS,CAAC,IAAI,CAAC,GAAG;QAC7CC,yBAAyB,EAAER,MAAM,CAACjH,QAAQ,CAAC0H,sBAAsB,CAAC,IAAI,IAAI;QAC1EC,iBAAiB,EAAEV,MAAM,CAACjH,QAAQ,CAAC4H,cAAc,CAAC,IAAI,KAAK;QAC3DC,0BAA0B,EAAEZ,MAAM,CAACjH,QAAQ,CAAC8H,uBAAuB,CAAC,IAAI,GAAG;QAC3EC,mBAAmB,EAAEd,MAAM,CAACjH,QAAQ,CAAC+H,mBAAmB,CAAC,IAAI,GAAG;QAChEC,eAAe,EAAEf,MAAM,CAACjH,QAAQ,CAACgI,eAAe,CAAC,IAAI,EAAE;QAAG;QAC1DC,OAAO,EAAEhB,MAAM,CAACjH,QAAQ,CAACiI,OAAO,CAAC,IAAI,CAAC;QAAM;QAC5CC,UAAU,EAAEjB,MAAM,CAACjH,QAAQ,CAACkI,UAAU,CAAC,IAAI,EAAE;QAAG;QAChDC,mBAAmB,EAAElB,MAAM,CAACjH,QAAQ,CAACmI,mBAAmB,CAAC,IAAI,EAAE;QAC/DC,sBAAsB,EAAEnB,MAAM,CAACjH,QAAQ,CAACoI,sBAAsB,CAAC,IAAI,EAAE;QACrEC,2BAA2B,EAAEpB,MAAM,CAACjH,QAAQ,CAACqI,2BAA2B,CAAC,IAAI,GAAG;QAChFC,8BAA8B,EAAErB,MAAM,CAACjH,QAAQ,CAACsI,8BAA8B,CAAC,IAAI,GAAG;QACtFC,6BAA6B,EAAEtB,MAAM,CAACjH,QAAQ,CAACuI,6BAA6B,CAAC,IAAI;MACnF,CAAC;MAEDrF,OAAO,CAACsF,GAAG,CAAC,8BAA8B,EAAE7B,kBAAkB,CAAC,CAAC,CAAC;;MAEjE,MAAM8B,QAAQ,GAAG,MAAMvG,KAAK,CAAC,6CAA6C,EAAE;QAC1EwG,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACnC,kBAAkB;MACzC,CAAC,CAAC;MAEF,IAAI8B,QAAQ,CAACM,EAAE,EAAE;QACf,MAAMjG,MAAM,GAAG,MAAM2F,QAAQ,CAACpG,IAAI,CAAC,CAAC;QACpCa,OAAO,CAACsF,GAAG,CAAC,8BAA8B,EAAE1F,MAAM,CAAC,CAAC,CAAC;QACrD0B,MAAM,CAAChB,YAAY,GAAGwF,wBAAwB,CAAClG,MAAM,CAAC;MACxD,CAAC,MAAM;QACL,MAAMmG,SAAS,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QACvChG,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEwF,QAAQ,CAACU,MAAM,EAAEV,QAAQ,CAACW,UAAU,EAAEH,SAAS,CAAC;MACvF;IACF,CAAC,CAAC,OAAOhG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAAC;IACtE;EACF,CAAC;EAED,MAAMoG,wBAAwB,GAAIC,YAAY,KAAM;IAClDlG,EAAE,EAAEkG,YAAY;IAChBjG,IAAI,EAAE,iBAAiBiG,YAAY,EAAE;IACrChG,UAAU,EAAE;MACVqB,KAAK,EAAE5E,iBAAiB,CAACiC,WAAW,GAAG,EAAE,GAAG,IAAI;MAChDO,QAAQ,EAAExC,iBAAiB,CAACwC,QAAQ,GAAG,EAAE,GAAG,IAAI;MAChDqC,OAAO,EAAE7E,iBAAiB,CAACyC,cAAc,GAAG,EAAE,GAAG;IACnD,CAAC;IACDgB,YAAY,EAAE;MACZC,gBAAgB,EAAE,CAAC;MACnBC,gBAAgB,EAAE,CAAC;MACnBC,aAAa,EAAE,CAAC;MAChBC,mBAAmB,EAAE,CAAC;MACtBC,gBAAgB,EAAE,CAAC;MACnBC,aAAa,EAAE,CAAC;MAChBC,WAAW,EAAE;QACXC,UAAU,EAAE,IAAIC,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;QACjCC,OAAO,EAAE,IAAIF,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;QAC9BE,aAAa,EAAE,IAAIH,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;QACpCG,UAAU,EAAE,IAAIJ,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC;MAClC;IACF,CAAC;IACDzD,OAAO,EAAE;EACX,CAAC,CAAC;EAEF,MAAM8I,qBAAqB,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,aAAa,EAAEC,WAAW,KAAK;IAC5E;IACAlJ,iBAAiB,CAACmJ,IAAI,IAAIA,IAAI,CAACC,GAAG,CAACpF,MAAM,IAAI;MAC3C,IAAIA,MAAM,CAACpB,EAAE,KAAKoG,QAAQ,EAAE;QAC1B,OAAO;UACL,GAAGhF,MAAM;UACTlB,UAAU,EAAE;YACV,GAAGkB,MAAM,CAAClB,UAAU;YACpB,CAACmG,aAAa,GAAGC;UACnB,CAAC;UACDjJ,OAAO,EAAE;QACX,CAAC;MACH;MACA,OAAO+D,MAAM;IACf,CAAC,CAAC,CAAC;;IAEH;IACA,MAAMqF,wBAAwB,CAACL,QAAQ,EAAEC,aAAa,EAAEC,WAAW,CAAC;EACtE,CAAC;EAED,MAAMG,wBAAwB,GAAG,MAAAA,CAAOL,QAAQ,EAAEM,oBAAoB,EAAEC,kBAAkB,KAAK;IAC7F,IAAI;MACF,MAAMvF,MAAM,GAAGjE,cAAc,CAACyJ,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAC7G,EAAE,KAAKoG,QAAQ,CAAC;MAC1D,IAAI,CAAChF,MAAM,EAAE;;MAEb;MACA,MAAM0F,iBAAiB,GAAG;QACxB,GAAG1F,MAAM,CAAClB,UAAU;QACpB,CAACwG,oBAAoB,GAAGC;MAC1B,CAAC;;MAED;MACA,MAAMpD,kBAAkB,GAAG;QACzBC,cAAc,EAAEC,OAAO,CAAC9G,iBAAiB,CAACiC,WAAW,CAAC;QACtD8E,WAAW,EAAED,OAAO,CAAC9G,iBAAiB,CAACwC,QAAQ,CAAC;QAChDwE,UAAU,EAAEF,OAAO,CAAC9G,iBAAiB,CAACyC,cAAc,CAAC;QACrDwE,iBAAiB,EAAEkD,iBAAiB,CAACvF,KAAK,GAAG,CAACsC,MAAM,CAACiD,iBAAiB,CAACvF,KAAK,CAAC,CAAC,GAAG,EAAE;QACnFuC,eAAe,EAAEgD,iBAAiB,CAAC3H,QAAQ,GAAG,CAAC0E,MAAM,CAACiD,iBAAiB,CAAC3H,QAAQ,CAAC,CAAC,GAAG,EAAE;QACvF4E,UAAU,EAAE+C,iBAAiB,CAACtF,OAAO,GAAG,CAACqC,MAAM,CAACiD,iBAAiB,CAACtF,OAAO,CAAC,CAAC,GAAG,EAAE;QAChFwC,SAAS,EAAEH,MAAM,CAACjH,QAAQ,CAACoH,SAAS,CAAC,IAAI,GAAG;QAC5CC,SAAS,EAAEJ,MAAM,CAACjH,QAAQ,CAACqH,SAAS,CAAC,IAAI,CAAC;QAC1CC,QAAQ,EAAEL,MAAM,CAACjH,QAAQ,CAACsH,QAAQ,CAAC,IAAI,EAAE;QAAG;QAC5CC,QAAQ,EAAEN,MAAM,CAACjH,QAAQ,CAACuH,QAAQ,CAAC,IAAI,IAAI;QAC3CC,SAAS,EAAEP,MAAM,CAACjH,QAAQ,CAACwH,SAAS,CAAC,IAAI,CAAC,GAAG;QAC7CC,yBAAyB,EAAER,MAAM,CAACjH,QAAQ,CAAC0H,sBAAsB,CAAC,IAAI,IAAI;QAC1EC,iBAAiB,EAAEV,MAAM,CAACjH,QAAQ,CAAC4H,cAAc,CAAC,IAAI,KAAK;QAC3DC,0BAA0B,EAAEZ,MAAM,CAACjH,QAAQ,CAAC8H,uBAAuB,CAAC,IAAI,GAAG;QAC3EC,mBAAmB,EAAEd,MAAM,CAACjH,QAAQ,CAAC+H,mBAAmB,CAAC,IAAI,GAAG;QAChEC,eAAe,EAAEf,MAAM,CAACjH,QAAQ,CAACgI,eAAe,CAAC,IAAI,EAAE;QAAG;QAC1DC,OAAO,EAAEhB,MAAM,CAACjH,QAAQ,CAACiI,OAAO,CAAC,IAAI,CAAC;QAAM;QAC5CC,UAAU,EAAEjB,MAAM,CAACjH,QAAQ,CAACkI,UAAU,CAAC,IAAI,EAAE;QAAG;QAChDC,mBAAmB,EAAElB,MAAM,CAACjH,QAAQ,CAACmI,mBAAmB,CAAC,IAAI,EAAE;QAC/DC,sBAAsB,EAAEnB,MAAM,CAACjH,QAAQ,CAACoI,sBAAsB,CAAC,IAAI,EAAE;QACrEC,2BAA2B,EAAEpB,MAAM,CAACjH,QAAQ,CAACqI,2BAA2B,CAAC,IAAI,GAAG;QAChFC,8BAA8B,EAAErB,MAAM,CAACjH,QAAQ,CAACsI,8BAA8B,CAAC,IAAI,GAAG;QACtFC,6BAA6B,EAAEtB,MAAM,CAACjH,QAAQ,CAACuI,6BAA6B,CAAC,IAAI;MACnF,CAAC;MAED,MAAME,QAAQ,GAAG,MAAMvG,KAAK,CAAC,6CAA6C,EAAE;QAC1EwG,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACnC,kBAAkB;MACzC,CAAC,CAAC;MAEF,IAAI8B,QAAQ,CAACM,EAAE,EAAE;QACf,MAAMjG,MAAM,GAAG,MAAM2F,QAAQ,CAACpG,IAAI,CAAC,CAAC;QACpC,MAAMmB,YAAY,GAAGwF,wBAAwB,CAAClG,MAAM,CAAC;QAErDtC,iBAAiB,CAACmJ,IAAI,IAAIA,IAAI,CAACC,GAAG,CAACpF,MAAM,IAAI;UAC3C,IAAIA,MAAM,CAACpB,EAAE,KAAKoG,QAAQ,EAAE;YAC1B,OAAO;cACL,GAAGhF,MAAM;cACTlB,UAAU,EAAE4G,iBAAiB;cAC7B1G,YAAY;cACZ/C,OAAO,EAAE;YACX,CAAC;UACH;UACA,OAAO+D,MAAM;QACf,CAAC,CAAC,CAAC;MACL;IACF,CAAC,CAAC,OAAOvB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;MAC1DzC,iBAAiB,CAACmJ,IAAI,IAAIA,IAAI,CAACC,GAAG,CAACpF,MAAM,IAAI;QAC3C,IAAIA,MAAM,CAACpB,EAAE,KAAKoG,QAAQ,EAAE;UAC1B,OAAO;YAAE,GAAGhF,MAAM;YAAE/D,OAAO,EAAE;UAAM,CAAC;QACtC;QACA,OAAO+D,MAAM;MACf,CAAC,CAAC,CAAC;IACL;EACF,CAAC;EAED,MAAMwE,wBAAwB,GAAIlG,MAAM,IAAK;IAC3C,IAAIqH,SAAS,GAAG,CAAC;IACjB,IAAIC,eAAe,GAAG,CAAC;IACvB,IAAIC,YAAY,GAAG,CAAC;IACpB,IAAIC,kBAAkB,GAAG,CAAC;IAC1B,IAAIC,eAAe,GAAG,CAAC;IACvB,MAAMC,iBAAiB,GAAG,IAAIvG,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;IAC/C,MAAMuG,cAAc,GAAG,IAAIxG,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;IAC5C,MAAMwG,oBAAoB,GAAG,IAAIzG,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;IAClD,MAAMyG,iBAAiB,GAAG,IAAI1G,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;;IAE/C;IACA,CAAC,IAAIpB,MAAM,CAAC8H,iBAAiB,IAAI,EAAE,CAAC,EAAE,IAAI9H,MAAM,CAAC+H,eAAe,IAAI,EAAE,CAAC,EAAE,IAAI/H,MAAM,CAACgI,cAAc,IAAI,EAAE,CAAC,CAAC,CAACjI,OAAO,CAACkI,MAAM,IAAI;MAC3HZ,SAAS,IAAIY,MAAM,CAACtH,gBAAgB,IAAI,CAAC;MACzC2G,eAAe,IAAIW,MAAM,CAACrH,gBAAgB,IAAI,CAAC;MAC/C2G,YAAY,IAAIU,MAAM,CAACC,iBAAiB,IAAI,CAAC;MAC7CV,kBAAkB,IAAIS,MAAM,CAACnH,mBAAmB,IAAI,CAAC;MACrD2G,eAAe,IAAIQ,MAAM,CAACE,qBAAqB,IAAI,CAAC;;MAEpD;MACA,IAAIF,MAAM,CAACP,iBAAiB,EAAE;QAC5BO,MAAM,CAACP,iBAAiB,CAAC3H,OAAO,CAAC,CAACqI,KAAK,EAAEC,KAAK,KAAK;UACjDX,iBAAiB,CAACW,KAAK,CAAC,IAAID,KAAK,IAAI,CAAC;QACxC,CAAC,CAAC;MACJ;MACA,IAAIH,MAAM,CAACK,kBAAkB,EAAE;QAC7BL,MAAM,CAACK,kBAAkB,CAACvI,OAAO,CAAC,CAACqI,KAAK,EAAEC,KAAK,KAAK;UAClDV,cAAc,CAACU,KAAK,CAAC,IAAID,KAAK,IAAI,CAAC;QACrC,CAAC,CAAC;MACJ;MACA,IAAIH,MAAM,CAACL,oBAAoB,EAAE;QAC/BK,MAAM,CAACL,oBAAoB,CAAC7H,OAAO,CAAC,CAACqI,KAAK,EAAEC,KAAK,KAAK;UACpDT,oBAAoB,CAACS,KAAK,CAAC,IAAID,KAAK,IAAI,CAAC;QAC3C,CAAC,CAAC;MACJ;MACA,IAAIH,MAAM,CAACM,uBAAuB,IAAIN,MAAM,CAACO,yBAAyB,EAAE;QACtEP,MAAM,CAACM,uBAAuB,CAACxI,OAAO,CAAC,CAAC0I,MAAM,EAAEJ,KAAK,KAAK;UACxD,MAAMK,QAAQ,GAAGT,MAAM,CAACO,yBAAyB,CAACH,KAAK,CAAC,IAAI,CAAC;UAC7DR,iBAAiB,CAACQ,KAAK,CAAC,IAAI,CAACI,MAAM,IAAI,CAAC,IAAIC,QAAQ;QACtD,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;IAEF,MAAM1H,aAAa,GAAIuG,YAAY,GAAGC,kBAAkB,GAAI,CAAC,GAC3DH,SAAS,IAAIE,YAAY,GAAGC,kBAAkB,CAAC,GAAG,GAAG;IAEvD,OAAO;MACL7G,gBAAgB,EAAE0G,SAAS;MAC3BzG,gBAAgB,EAAE0G,eAAe;MACjCzG,aAAa,EAAE0G,YAAY;MAC3BzG,mBAAmB,EAAE0G,kBAAkB;MACvCzG,gBAAgB,EAAE0G,eAAe;MACjCzG,aAAa,EAAEA,aAAa;MAC5BC,WAAW,EAAE;QACXC,UAAU,EAAEwG,iBAAiB;QAC7BrG,OAAO,EAAEsG,cAAc;QACvBrG,aAAa,EAAEsG,oBAAoB;QACnCrG,UAAU,EAAEsG;MACd;IACF,CAAC;EACH,CAAC;EAED,MAAMc,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,MAAMC,KAAK,GAAGvK,IAAI,CAACC,GAAG,CAAC,GAAGb,cAAc,CAACqJ,GAAG,CAACK,CAAC,IAAIA,CAAC,CAAC7G,EAAE,CAAC,CAAC,GAAG,CAAC;IAC5D5C,iBAAiB,CAACmJ,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEN,wBAAwB,CAACqC,KAAK,CAAC,CAAC,CAAC;EACvE,CAAC;EAED,MAAMC,mBAAmB,GAAInC,QAAQ,IAAK;IACxC,IAAIjJ,cAAc,CAACsE,MAAM,GAAG,CAAC,EAAE;MAC7BrE,iBAAiB,CAACmJ,IAAI,IAAIA,IAAI,CAACiC,MAAM,CAAC3B,CAAC,IAAIA,CAAC,CAAC7G,EAAE,KAAKoG,QAAQ,CAAC,CAAC;IAChE;EACF,CAAC;EAED,MAAMqC,gBAAgB,GAAGA,CAACrH,MAAM,EAAEsH,QAAQ,EAAE/K,KAAK,KAAK;IACpD,MAAMgL,MAAM,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EACzC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;IAExD,IAAIhI,WAAW,GAAG,EAAE;IACpB,QAAQ+H,QAAQ;MACd,KAAK,YAAY;QACf/H,WAAW,GAAGS,MAAM,CAAChB,YAAY,CAACO,WAAW,CAACC,UAAU;QACxD;MACF,KAAK,SAAS;QACZD,WAAW,GAAGS,MAAM,CAAChB,YAAY,CAACO,WAAW,CAACI,OAAO;QACrD;MACF,KAAK,eAAe;QAClBJ,WAAW,GAAGS,MAAM,CAAChB,YAAY,CAACO,WAAW,CAACK,aAAa;QAC3D;MACF,KAAK,YAAY;QACfL,WAAW,GAAGS,MAAM,CAAChB,YAAY,CAACO,WAAW,CAACM,UAAU;QACxD;MACF;QACEN,WAAW,GAAG,EAAE;IACpB;IAEA,MAAMiI,SAAS,GAAG;MAChBC,MAAM,EAAEF,MAAM;MACdG,QAAQ,EAAE,CAAC;QACTC,KAAK,EAAEpL,KAAK;QACZD,IAAI,EAAEiD,WAAW;QACjBqI,WAAW,EAAEC,aAAa,CAACP,QAAQ,CAAC;QACpCQ,eAAe,EAAED,aAAa,CAACP,QAAQ,CAAC,GAAG,IAAI;QAC/CS,OAAO,EAAE,GAAG;QACZrI,IAAI,EAAE;MACR,CAAC;IACH,CAAC;IAED,MAAMsI,YAAY,GAAG;MACnBC,UAAU,EAAE,IAAI;MAChBC,OAAO,EAAE;QACPC,MAAM,EAAE;UAAEC,QAAQ,EAAE;QAAM,CAAC;QAC3B7L,KAAK,EAAE;UAAE8L,OAAO,EAAE,IAAI;UAAE3D,IAAI,EAAE,GAAG1E,MAAM,CAACnB,IAAI,MAAMtC,KAAK;QAAG;MAC5D,CAAC;MACD+L,MAAM,EAAE;QACNC,CAAC,EAAE;UAAEC,WAAW,EAAE;QAAK;MACzB;IACF,CAAC;IAEDpM,YAAY,CAAC;MACXC,OAAO,EAAE,IAAI;MACbC,IAAI,EAAEkL,SAAS;MACfiB,OAAO,EAAET,YAAY;MACrBzL,KAAK,EAAE,GAAGyD,MAAM,CAACnB,IAAI,MAAMtC,KAAK;IAClC,CAAC,CAAC;EACJ,CAAC;EAED,MAAMsL,aAAa,GAAIP,QAAQ,IAAK;IAClC,MAAMoB,MAAM,GAAG;MACblJ,UAAU,EAAE,SAAS;MACrBG,OAAO,EAAE,SAAS;MAClBC,aAAa,EAAE,SAAS;MACxBC,UAAU,EAAE;IACd,CAAC;IACD,OAAO6I,MAAM,CAACpB,QAAQ,CAAC,IAAI,SAAS;EACtC,CAAC;EAED,MAAMrK,cAAc,GAAIyJ,KAAK,IAAK;IAChC,OAAOA,KAAK,GAAG,IAAI/J,IAAI,CAACgM,KAAK,CAACjC,KAAK,CAAC,CAACkC,cAAc,CAAC,CAAC,EAAE,GAAG,IAAI;EAChE,CAAC;EAED,MAAMC,YAAY,GAAGA,CAACnC,KAAK,EAAEoC,IAAI,GAAG,EAAE,KAAK;IACzC,OAAOpC,KAAK,GAAG,GAAG/J,IAAI,CAACgM,KAAK,CAACjC,KAAK,CAAC,CAACkC,cAAc,CAAC,CAAC,GAAGE,IAAI,EAAE,GAAG,IAAIA,IAAI,EAAE;EAC5E,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAC9D,aAAa,EAAEC,WAAW,KAAK;IACvD,IAAI,CAACA,WAAW,IAAI,CAACrJ,kBAAkB,CAACoJ,aAAa,CAAC,EAAE,OAAO,EAAE;IACjE,MAAM+D,SAAS,GAAGnN,kBAAkB,CAACoJ,aAAa,CAAC,CAACO,IAAI,CAACyD,CAAC,IAAIA,CAAC,CAACrK,EAAE,IAAIsG,WAAW,CAAC;IAClF,OAAO8D,SAAS,GAAGA,SAAS,CAACnK,IAAI,GAAG,EAAE;EACxC,CAAC;EAED,IAAI5C,OAAO,EAAE;IACX,oBACEb,OAAA;MAAK2B,SAAS,EAAC,kCAAkC;MAAAC,QAAA,gBAC/C5B,OAAA;QAAA4B,QAAA,EAAI;MAA4B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrCjC,OAAA;QAAA4B,QAAA,EAAG;MAA8C;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC;EAEV;EAEA,oBACEjC,OAAA;IAAK2B,SAAS,EAAC,0BAA0B;IAAAC,QAAA,gBACvC5B,OAAA;MAAK2B,SAAS,EAAC,+BAA+B;MAAAC,QAAA,eAC5C5B,OAAA;QAAO2B,SAAS,EAAC,qBAAqB;QAAAC,QAAA,gBACpC5B,OAAA;UAAA4B,QAAA,eACE5B,OAAA;YAAA4B,QAAA,gBACE5B,OAAA;cAAA4B,QAAA,EAAI;YAAkB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,EAC1B9B,iBAAiB,CAACiC,WAAW,iBAAIpC,OAAA;cAAA4B,QAAA,EAAI;YAAY;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,EACtD9B,iBAAiB,CAACwC,QAAQ,iBAAI3C,OAAA;cAAA4B,QAAA,EAAI;YAAS;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,EAChD9B,iBAAiB,CAACyC,cAAc,iBAAI5C,OAAA;cAAA4B,QAAA,EAAI;YAAe;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC7DjC,OAAA;cAAA4B,QAAA,GACGrB,kBAAkB,GAAG,CAAC,GAAG,uBAAuB,GAAG,mBAAmB,EACtEA,kBAAkB,GAAG,CAAC,iBACrBP,OAAA;gBAAK2B,SAAS,EAAC,kBAAkB;gBAAAC,QAAA,GAAC,aACxB,EAACrB,kBAAkB,CAACuN,OAAO,CAAC,CAAC,CAAC,EAAC,WACzC;cAAA;gBAAAhM,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CACN;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,eACLjC,OAAA;cACE2B,SAAS,EAAC,kBAAkB;cAC5BoM,OAAO,EAAEA,CAAA,KAAM9B,gBAAgB,CAAC,YAAY,EAAE,0BAA0B,EAAE,mBAAmB,CAAE;cAC/F9K,KAAK,EAAC,iCAAiC;cAAAS,QAAA,EACxC;YAED;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACLjC,OAAA;cACE2B,SAAS,EAAC,kBAAkB;cAC5BoM,OAAO,EAAEA,CAAA,KAAM9B,gBAAgB,CAAC,SAAS,EAAE,qBAAqB,EAAE,gBAAgB,CAAE;cACpF9K,KAAK,EAAC,iCAAiC;cAAAS,QAAA,EACxC;YAED;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACLjC,OAAA;cACE2B,SAAS,EAAC,kBAAkB;cAC5BoM,OAAO,EAAEA,CAAA,KAAM9B,gBAAgB,CAAC,eAAe,EAAE,4BAA4B,EAAE,sBAAsB,CAAE;cACvG9K,KAAK,EAAC,iCAAiC;cAAAS,QAAA,EACxC;YAED;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACLjC,OAAA;cACE2B,SAAS,EAAC,kBAAkB;cAC5BoM,OAAO,EAAEA,CAAA,KAAM9B,gBAAgB,CAAC,YAAY,EAAE,0BAA0B,EAAE,mBAAmB,CAAE;cAC/F9K,KAAK,EAAC,iCAAiC;cAAAS,QAAA,EACxC;YAED;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACLjC,OAAA;cAAA4B,QAAA,EAAI;YAAc;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACvBjC,OAAA;cAAA4B,QAAA,EAAI;YAAO;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACd;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACRjC,OAAA;UAAA4B,QAAA,EACGjB,cAAc,CAACqJ,GAAG,CAACpF,MAAM;YAAA,IAAAoJ,qBAAA,EAAAC,qBAAA,EAAAC,qBAAA;YAAA,oBACxBlO,OAAA;cAAoB2B,SAAS,EAAEiD,MAAM,CAAC/D,OAAO,GAAG,aAAa,GAAG,EAAG;cAAAe,QAAA,gBACjE5B,OAAA;gBAAA4B,QAAA,eACE5B,OAAA;kBACE0C,IAAI,EAAC,MAAM;kBACX4I,KAAK,EAAE1G,MAAM,CAACnB,IAAK;kBACnB0K,QAAQ,EAAGN,CAAC,IAAK;oBACfjN,iBAAiB,CAACmJ,IAAI,IAAIA,IAAI,CAACC,GAAG,CAACK,CAAC,IAClCA,CAAC,CAAC7G,EAAE,KAAKoB,MAAM,CAACpB,EAAE,GAAG;sBAAE,GAAG6G,CAAC;sBAAE5G,IAAI,EAAEoK,CAAC,CAACO,MAAM,CAAC9C;oBAAM,CAAC,GAAGjB,CACxD,CAAC,CAAC;kBACJ,CAAE;kBACF1I,SAAS,EAAC;gBAAmB;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC9B;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACA,CAAC,EAEJ9B,iBAAiB,CAACiC,WAAW,iBAC5BpC,OAAA;gBAAA4B,QAAA,eACE5B,OAAA;kBACEsL,KAAK,EAAE1G,MAAM,CAAClB,UAAU,CAACqB,KAAK,IAAI,EAAG;kBACrCoJ,QAAQ,EAAGN,CAAC,IAAKlE,qBAAqB,CAAC/E,MAAM,CAACpB,EAAE,EAAE,OAAO,EAAEqK,CAAC,CAACO,MAAM,CAAC9C,KAAK,CAAE;kBAC3E3J,SAAS,EAAC,kBAAkB;kBAAAC,QAAA,gBAE5B5B,OAAA;oBAAQsL,KAAK,EAAC,EAAE;oBAAA1J,QAAA,EAAC;kBAAgB;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,GAAA+L,qBAAA,GACzCvN,kBAAkB,CAACsE,KAAK,cAAAiJ,qBAAA,uBAAxBA,qBAAA,CAA0BhE,GAAG,CAAC3E,KAAK,iBAClCrF,OAAA;oBAAuBsL,KAAK,EAAEjG,KAAK,CAAC7B,EAAG;oBAAA5B,QAAA,GACpCyD,KAAK,CAAC5B,IAAI,EAAC,IAAE,EAAC4B,KAAK,CAACS,kBAAkB,EAAC,IAC1C;kBAAA,GAFaT,KAAK,CAAC7B,EAAE;oBAAA1B,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAEb,CACT,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACI;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACP,CACL,EAEA9B,iBAAiB,CAACwC,QAAQ,iBACzB3C,OAAA;gBAAA4B,QAAA,eACE5B,OAAA;kBACEsL,KAAK,EAAE1G,MAAM,CAAClB,UAAU,CAACf,QAAQ,IAAI,EAAG;kBACxCwL,QAAQ,EAAGN,CAAC,IAAKlE,qBAAqB,CAAC/E,MAAM,CAACpB,EAAE,EAAE,UAAU,EAAEqK,CAAC,CAACO,MAAM,CAAC9C,KAAK,CAAE;kBAC9E3J,SAAS,EAAC,kBAAkB;kBAAAC,QAAA,gBAE5B5B,OAAA;oBAAQsL,KAAK,EAAC,EAAE;oBAAA1J,QAAA,EAAC;kBAAgB;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,GAAAgM,qBAAA,GACzCxN,kBAAkB,CAACkC,QAAQ,cAAAsL,qBAAA,uBAA3BA,qBAAA,CAA6BjE,GAAG,CAACrH,QAAQ,iBACxC3C,OAAA;oBAA0BsL,KAAK,EAAE3I,QAAQ,CAACa,EAAG;oBAAA5B,QAAA,GAC1Ce,QAAQ,CAACc,IAAI,EAAC,SAAO,EAACd,QAAQ,CAACqD,GAAG,EAAC,GACtC;kBAAA,GAFarD,QAAQ,CAACa,EAAE;oBAAA1B,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAEhB,CACT,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACI;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACP,CACL,EAEA9B,iBAAiB,CAACyC,cAAc,iBAC/B5C,OAAA;gBAAA4B,QAAA,eACE5B,OAAA;kBACEsL,KAAK,EAAE1G,MAAM,CAAClB,UAAU,CAACsB,OAAO,IAAI,EAAG;kBACvCmJ,QAAQ,EAAGN,CAAC,IAAKlE,qBAAqB,CAAC/E,MAAM,CAACpB,EAAE,EAAE,SAAS,EAAEqK,CAAC,CAACO,MAAM,CAAC9C,KAAK,CAAE;kBAC7E3J,SAAS,EAAC,kBAAkB;kBAAAC,QAAA,gBAE5B5B,OAAA;oBAAQsL,KAAK,EAAC,EAAE;oBAAA1J,QAAA,EAAC;kBAAgB;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,GAAAiM,qBAAA,GACzCzN,kBAAkB,CAACuE,OAAO,cAAAkJ,qBAAA,uBAA1BA,qBAAA,CAA4BlE,GAAG,CAAChF,OAAO,iBACtChF,OAAA;oBAAyBsL,KAAK,EAAEtG,OAAO,CAACxB,EAAG;oBAAA5B,QAAA,GACxCoD,OAAO,CAACvB,IAAI,EAAC,IAAE,EAACuB,OAAO,CAACkB,WAAW,EAAC,MACvC;kBAAA,GAFalB,OAAO,CAACxB,EAAE;oBAAA1B,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAEf,CACT,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACI;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACP,CACL,eAEDjC,OAAA;gBAAA4B,QAAA,EAAKgD,MAAM,CAAC/D,OAAO,GAAG,gBAAgB,GAAGY,iCAAiC,CAACmD,MAAM,CAAChB,YAAY,CAACC,gBAAgB;cAAC;gBAAA/B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAEtHjC,OAAA;gBACE2B,SAAS,EAAC,gBAAgB;gBAC1BoM,OAAO,EAAEA,CAAA,KAAM,CAACnJ,MAAM,CAAC/D,OAAO,IAAIoL,gBAAgB,CAACrH,MAAM,EAAE,YAAY,EAAE,0BAA0B,CAAE;gBAAAhD,QAAA,EAEpGgD,MAAM,CAAC/D,OAAO,GAAG,gBAAgB,GAAG4M,YAAY,CAAC7I,MAAM,CAAChB,YAAY,CAACE,gBAAgB,EAAE,MAAM;cAAC;gBAAAhC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC7F,CAAC,eAELjC,OAAA;gBACE2B,SAAS,EAAC,gBAAgB;gBAC1BoM,OAAO,EAAEA,CAAA,KAAM,CAACnJ,MAAM,CAAC/D,OAAO,IAAIoL,gBAAgB,CAACrH,MAAM,EAAE,SAAS,EAAE,qBAAqB,CAAE;gBAAAhD,QAAA,EAE5FgD,MAAM,CAAC/D,OAAO,GAAG,gBAAgB,GAAGgB,cAAc,CAAC+C,MAAM,CAAChB,YAAY,CAACG,aAAa;cAAC;gBAAAjC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACpF,CAAC,eAELjC,OAAA;gBACE2B,SAAS,EAAC,gBAAgB;gBAC1BoM,OAAO,EAAEA,CAAA,KAAM,CAACnJ,MAAM,CAAC/D,OAAO,IAAIoL,gBAAgB,CAACrH,MAAM,EAAE,eAAe,EAAE,4BAA4B,CAAE;gBAAAhD,QAAA,EAEzGgD,MAAM,CAAC/D,OAAO,GAAG,gBAAgB,GAAGgB,cAAc,CAAC+C,MAAM,CAAChB,YAAY,CAACI,mBAAmB;cAAC;gBAAAlC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC1F,CAAC,eAELjC,OAAA;gBACE2B,SAAS,EAAC,gBAAgB;gBAC1BoM,OAAO,EAAEA,CAAA,KAAM,CAACnJ,MAAM,CAAC/D,OAAO,IAAIoL,gBAAgB,CAACrH,MAAM,EAAE,YAAY,EAAE,0BAA0B,CAAE;gBAAAhD,QAAA,EAEpGgD,MAAM,CAAC/D,OAAO,GAAG,gBAAgB,GAAG4M,YAAY,CAAC7I,MAAM,CAAChB,YAAY,CAACK,gBAAgB,EAAE,KAAK;cAAC;gBAAAnC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5F,CAAC,eAELjC,OAAA;gBAAA4B,QAAA,EAAKgD,MAAM,CAAC/D,OAAO,GAAG,gBAAgB,GAAG4M,YAAY,CAAC7I,MAAM,CAAChB,YAAY,CAACM,aAAa,EAAE,QAAQ;cAAC;gBAAApC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAExGjC,OAAA;gBAAA4B,QAAA,eACE5B,OAAA;kBACE2B,SAAS,EAAC,YAAY;kBACtBoM,OAAO,EAAEA,CAAA,KAAMhC,mBAAmB,CAACnH,MAAM,CAACpB,EAAE,CAAE;kBAC9C6K,QAAQ,EAAE1N,cAAc,CAACsE,MAAM,IAAI,CAAE;kBACrC9D,KAAK,EAAC,sBAAsB;kBAAAS,QAAA,EAC7B;gBAED;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACP,CAAC;YAAA,GA1GE2C,MAAM,CAACpB,EAAE;cAAA1B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OA2Gd,CAAC;UAAA,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAENjC,OAAA;MAAK2B,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5B5B,OAAA;QAAQ2B,SAAS,EAAC,mBAAmB;QAACoM,OAAO,EAAElC,gBAAiB;QAAAjK,QAAA,EAAC;MAEjE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTjC,OAAA;QAAM2B,SAAS,EAAC,YAAY;QAAAC,QAAA,EAAC;MAE7B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,EAGLlB,SAAS,CAACE,OAAO,iBAChBjB,OAAA;MAAK2B,SAAS,EAAC,qBAAqB;MAACoM,OAAO,EAAEA,CAAA,KAAM/M,YAAY,CAAC;QAAEC,OAAO,EAAE,KAAK;QAAEC,IAAI,EAAE,IAAI;QAAEC,KAAK,EAAE;MAAG,CAAC,CAAE;MAAAS,QAAA,eAC1G5B,OAAA;QAAK2B,SAAS,EAAC,aAAa;QAACoM,OAAO,EAAGF,CAAC,IAAKA,CAAC,CAACS,eAAe,CAAC,CAAE;QAAA1M,QAAA,gBAC/D5B,OAAA;UAAK2B,SAAS,EAAC,oBAAoB;UAAAC,QAAA,gBACjC5B,OAAA;YAAA4B,QAAA,EAAKb,SAAS,CAACI;UAAK;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC1BjC,OAAA;YACE2B,SAAS,EAAC,oBAAoB;YAC9BoM,OAAO,EAAEA,CAAA,KAAM/M,YAAY,CAAC;cAAEC,OAAO,EAAE,KAAK;cAAEC,IAAI,EAAE,IAAI;cAAEC,KAAK,EAAE;YAAG,CAAC,CAAE;YAAAS,QAAA,EACxE;UAED;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACNjC,OAAA;UAAK2B,SAAS,EAAC,iBAAiB;UAAAC,QAAA,eAC9B5B,OAAA,CAACX,IAAI;YAAC6B,IAAI,EAAEH,SAAS,CAACG,IAAK;YAACmM,OAAO,EAAEtM,SAAS,CAACsM;UAAQ;YAAAvL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,eAEDjC,OAAA;MAAK2B,SAAS,EAAC,oBAAoB;MAAAC,QAAA,eACjC5B,OAAA;QAAQ2B,SAAS,EAAC,mBAAmB;QAACoM,OAAO,EAAE1N,MAAO;QAAAuB,QAAA,EAAC;MAEvD;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACzB,EAAA,CA5xBIN,uBAAuB;AAAAqO,EAAA,GAAvBrO,uBAAuB;AA8xB7B,eAAeA,uBAAuB;AAAC,IAAAqO,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}