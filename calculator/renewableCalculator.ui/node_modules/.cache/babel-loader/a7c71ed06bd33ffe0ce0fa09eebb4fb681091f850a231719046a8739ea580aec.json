{"ast":null,"code":"var _jsxFileName = \"/Users/xuefei/Desktop/calculator00/calculator/renewableCalculator.ui/src/components/steps/roof-condition/RoofConfigurationForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { calculateSolarPotential } from './solarPotentialUtils';\nimport { getNextRoofNumber } from './roofLabelUtils';\nimport RoofConfigForm from './RoofConfigForm';\nimport SolarPotentialCalculation from './SolarPotentialCalculation';\nimport AddedRoofsList from './AddedRoofsList';\nimport RoofHelpModals from './RoofHelpModals';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RoofConfigurationForm = ({\n  roofConfig,\n  onConfigChange,\n  projectedArea,\n  actualRoofArea,\n  visible = true,\n  addedRoofs = [],\n  onRoofsUpdate,\n  onClearMeasurement,\n  onAddAnotherRoof\n}) => {\n  _s();\n  const [showAngleTooltip, setShowAngleTooltip] = useState(false);\n  const [showShadingTooltip, setShowShadingTooltip] = useState(false);\n  const [showUtilisationTooltip, setShowUtilisationTooltip] = useState(false);\n  const [solarPotentialResult, setSolarPotentialResult] = useState(null);\n  const [showPotentialResults, setShowPotentialResults] = useState(false);\n  if (!visible) return null;\n\n  // Determine which area to display\n  const displayArea = actualRoofArea || projectedArea;\n  const currentRoofNumber = getNextRoofNumber(addedRoofs);\n\n  // Check if all required fields are filled for solar potential calculation\n  const isReadyForCalculation = () => {\n    return displayArea > 0 && roofConfig.roofOrientation && roofConfig.roofAngle !== '' && roofConfig.roofShading && roofConfig.roofUtilisation;\n  };\n  const handleSolarPotentialCalculation = () => {\n    if (!isReadyForCalculation()) return;\n    const result = calculateSolarPotential(displayArea, roofConfig.roofShading, roofConfig.roofUtilisation, parseInt(roofConfig.roofAngle), roofConfig.roofOrientation);\n    setSolarPotentialResult(result);\n    setShowPotentialResults(true);\n  };\n  const handleAddRoof = () => {\n    if (!solarPotentialResult) return;\n    const newRoof = {\n      id: currentRoofNumber,\n      area: displayArea,\n      orientation: roofConfig.roofOrientation,\n      angle: roofConfig.roofAngle,\n      shading: roofConfig.roofShading,\n      utilisation: roofConfig.roofUtilisation,\n      solarPotential: solarPotentialResult.solarPotential,\n      config: {\n        ...roofConfig\n      },\n      selected: true // Default to selected for installation\n    };\n    const updatedRoofs = [...addedRoofs, newRoof];\n    onRoofsUpdate(updatedRoofs);\n\n    // Reset states but keep current measurement visible\n    setShowPotentialResults(false);\n    setSolarPotentialResult(null);\n\n    // Clear current configuration but keep the measurement\n    onConfigChange('roofOrientation', '');\n    onConfigChange('roofAngle', '');\n    onConfigChange('roofShading', '');\n    onConfigChange('roofUtilisation', '');\n  };\n  const handleRemoveRoof = roofId => {\n    const updatedRoofs = addedRoofs.filter(roof => roof.id !== roofId);\n    onRoofsUpdate(updatedRoofs);\n  };\n\n  // Tooltip handlers\n  const toggleAngleTooltip = () => setShowAngleTooltip(!showAngleTooltip);\n  const toggleShadingTooltip = () => setShowShadingTooltip(!showShadingTooltip);\n  const toggleUtilisationTooltip = () => setShowUtilisationTooltip(!showUtilisationTooltip);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"roof-configuration\",\n    children: [projectedArea > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Roof \", currentRoofNumber, \" Details\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"roof-size-display\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"roof-size-label\",\n          children: \"Roof Size:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          className: \"roof-size-value\",\n          children: [displayArea.toFixed(2), \" m\\xB2\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(RoofConfigForm, {\n        roofConfig: roofConfig,\n        onConfigChange: onConfigChange,\n        onShowAngleTooltip: toggleAngleTooltip,\n        onShowShadingTooltip: toggleShadingTooltip,\n        onShowUtilisationTooltip: toggleUtilisationTooltip\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SolarPotentialCalculation, {\n        isReadyForCalculation: isReadyForCalculation(),\n        onCalculate: handleSolarPotentialCalculation,\n        showResults: showPotentialResults,\n        result: solarPotentialResult,\n        currentRoofNumber: currentRoofNumber,\n        onAddRoof: handleAddRoof\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(AddedRoofsList, {\n      addedRoofs: addedRoofs,\n      onRemoveRoof: handleRemoveRoof,\n      showTotal: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RoofHelpModals, {\n      showAngleTooltip: showAngleTooltip,\n      showShadingTooltip: showShadingTooltip,\n      showUtilisationTooltip: showUtilisationTooltip,\n      onToggleAngleTooltip: toggleAngleTooltip,\n      onToggleShadingTooltip: toggleShadingTooltip,\n      onToggleUtilisationTooltip: toggleUtilisationTooltip\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(RoofConfigurationForm, \"XhfKkHowCP57aLopZyuVIxRC9y0=\");\n_c = RoofConfigurationForm;\nexport default RoofConfigurationForm;\nvar _c;\n$RefreshReg$(_c, \"RoofConfigurationForm\");","map":{"version":3,"names":["React","useState","calculateSolarPotential","getNextRoofNumber","RoofConfigForm","SolarPotentialCalculation","AddedRoofsList","RoofHelpModals","jsxDEV","_jsxDEV","Fragment","_Fragment","RoofConfigurationForm","roofConfig","onConfigChange","projectedArea","actualRoofArea","visible","addedRoofs","onRoofsUpdate","onClearMeasurement","onAddAnotherRoof","_s","showAngleTooltip","setShowAngleTooltip","showShadingTooltip","setShowShadingTooltip","showUtilisationTooltip","setShowUtilisationTooltip","solarPotentialResult","setSolarPotentialResult","showPotentialResults","setShowPotentialResults","displayArea","currentRoofNumber","isReadyForCalculation","roofOrientation","roofAngle","roofShading","roofUtilisation","handleSolarPotentialCalculation","result","parseInt","handleAddRoof","newRoof","id","area","orientation","angle","shading","utilisation","solarPotential","config","selected","updatedRoofs","handleRemoveRoof","roofId","filter","roof","toggleAngleTooltip","toggleShadingTooltip","toggleUtilisationTooltip","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","onShowAngleTooltip","onShowShadingTooltip","onShowUtilisationTooltip","onCalculate","showResults","onAddRoof","onRemoveRoof","showTotal","onToggleAngleTooltip","onToggleShadingTooltip","onToggleUtilisationTooltip","_c","$RefreshReg$"],"sources":["/Users/xuefei/Desktop/calculator00/calculator/renewableCalculator.ui/src/components/steps/roof-condition/RoofConfigurationForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { calculateSolarPotential } from './solarPotentialUtils';\nimport { getNextRoofNumber } from './roofLabelUtils';\nimport RoofConfigForm from './RoofConfigForm';\nimport SolarPotentialCalculation from './SolarPotentialCalculation';\nimport AddedRoofsList from './AddedRoofsList';\nimport RoofHelpModals from './RoofHelpModals';\n\nconst RoofConfigurationForm = ({ \n  roofConfig, \n  onConfigChange, \n  projectedArea, \n  actualRoofArea, \n  visible = true, \n  addedRoofs = [], \n  onRoofsUpdate, \n  onClearMeasurement,\n  onAddAnotherRoof\n}) => {\n  const [showAngleTooltip, setShowAngleTooltip] = useState(false);\n  const [showShadingTooltip, setShowShadingTooltip] = useState(false);\n  const [showUtilisationTooltip, setShowUtilisationTooltip] = useState(false);\n  const [solarPotentialResult, setSolarPotentialResult] = useState(null);\n  const [showPotentialResults, setShowPotentialResults] = useState(false);\n  \n  if (!visible) return null;\n\n  // Determine which area to display\n  const displayArea = actualRoofArea || projectedArea;\n  const currentRoofNumber = getNextRoofNumber(addedRoofs);\n\n  // Check if all required fields are filled for solar potential calculation\n  const isReadyForCalculation = () => {\n    return displayArea > 0 &&\n           roofConfig.roofOrientation &&\n           roofConfig.roofAngle !== '' &&\n           roofConfig.roofShading &&\n           roofConfig.roofUtilisation;\n  };\n\n  const handleSolarPotentialCalculation = () => {\n    if (!isReadyForCalculation()) return;\n\n    const result = calculateSolarPotential(\n      displayArea,\n      roofConfig.roofShading,\n      roofConfig.roofUtilisation,\n      parseInt(roofConfig.roofAngle),\n      roofConfig.roofOrientation\n    );\n\n    setSolarPotentialResult(result);\n    setShowPotentialResults(true);\n  };\n\n  const handleAddRoof = () => {\n    if (!solarPotentialResult) return;\n\n    const newRoof = {\n      id: currentRoofNumber,\n      area: displayArea,\n      orientation: roofConfig.roofOrientation,\n      angle: roofConfig.roofAngle,\n      shading: roofConfig.roofShading,\n      utilisation: roofConfig.roofUtilisation,\n      solarPotential: solarPotentialResult.solarPotential,\n      config: { ...roofConfig },\n      selected: true // Default to selected for installation\n    };\n\n    const updatedRoofs = [...addedRoofs, newRoof];\n    onRoofsUpdate(updatedRoofs);\n    \n    // Reset states but keep current measurement visible\n    setShowPotentialResults(false);\n    setSolarPotentialResult(null);\n    \n    // Clear current configuration but keep the measurement\n    onConfigChange('roofOrientation', '');\n    onConfigChange('roofAngle', '');\n    onConfigChange('roofShading', '');\n    onConfigChange('roofUtilisation', '');\n  };\n\n  const handleRemoveRoof = (roofId) => {\n    const updatedRoofs = addedRoofs.filter(roof => roof.id !== roofId);\n    onRoofsUpdate(updatedRoofs);\n  };\n\n  // Tooltip handlers\n  const toggleAngleTooltip = () => setShowAngleTooltip(!showAngleTooltip);\n  const toggleShadingTooltip = () => setShowShadingTooltip(!showShadingTooltip);\n  const toggleUtilisationTooltip = () => setShowUtilisationTooltip(!showUtilisationTooltip);\n\n  return (\n    <div className=\"roof-configuration\">\n      {/* Current Roof Configuration - Only show when measuring a new roof */}\n      {projectedArea > 0 && (\n        <>\n          <h4>Roof {currentRoofNumber} Details</h4>\n          \n          {/* Roof Size Display */}\n          <div className=\"roof-size-display\">\n            <span className=\"roof-size-label\">Roof Size:</span>\n            <strong className=\"roof-size-value\">{displayArea.toFixed(2)} m²</strong>\n          </div>\n          \n          <RoofConfigForm\n            roofConfig={roofConfig}\n            onConfigChange={onConfigChange}\n            onShowAngleTooltip={toggleAngleTooltip}\n            onShowShadingTooltip={toggleShadingTooltip}\n            onShowUtilisationTooltip={toggleUtilisationTooltip}\n          />\n\n          <SolarPotentialCalculation\n            isReadyForCalculation={isReadyForCalculation()}\n            onCalculate={handleSolarPotentialCalculation}\n            showResults={showPotentialResults}\n            result={solarPotentialResult}\n            currentRoofNumber={currentRoofNumber}\n            onAddRoof={handleAddRoof}\n          />\n        </>\n      )}\n\n      {/* Added Roofs Display */}\n      <AddedRoofsList \n        addedRoofs={addedRoofs} \n        onRemoveRoof={handleRemoveRoof}\n        showTotal={false}\n      />\n\n      {/* Help Modals */}\n      <RoofHelpModals\n        showAngleTooltip={showAngleTooltip}\n        showShadingTooltip={showShadingTooltip}\n        showUtilisationTooltip={showUtilisationTooltip}\n        onToggleAngleTooltip={toggleAngleTooltip}\n        onToggleShadingTooltip={toggleShadingTooltip}\n        onToggleUtilisationTooltip={toggleUtilisationTooltip}\n      />\n    </div>\n  );\n};\n\nexport default RoofConfigurationForm; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}